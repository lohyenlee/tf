(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1334946,      26246]
NotebookOptionsPosition[   1314105,      25911]
NotebookOutlinePosition[   1316567,      25970]
CellTagsIndexPosition[   1316524,      25967]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Machine Learning", "Title",
 CellChangeTimes->{{3.42824642184638*^9, 3.428246435855426*^9}, {
   3.4309216993719788`*^9, 3.430921704779996*^9}, {3.4362716146148357`*^9, 
   3.4362716210849237`*^9}, {3.4406215424584*^9, 3.440621557096222*^9}, 
   3.440773696119378*^9, {3.441108063435965*^9, 3.441108092298152*^9}, {
   3.441108258504286*^9, 3.441108279535306*^9}, {3.44193298255744*^9, 
   3.441933009350848*^9}, {3.44193331859522*^9, 3.441933351407712*^9}, {
   3.442256377716682*^9, 3.442256406817823*^9}, 3.442279343097897*^9, {
   3.442281793351105*^9, 3.442281795825777*^9}, {3.442281890896976*^9, 
   3.442281914423245*^9}, {3.442344860211562*^9, 3.442344860506982*^9}, {
   3.46591644255704*^9, 3.465916448529325*^9}, {3.466021638612433*^9, 
   3.466021648260727*^9}, {3.4661750765222607`*^9, 3.466175076902761*^9}, {
   3.466468526610682*^9, 3.466468545285501*^9}, {3.466469217539547*^9, 
   3.466469249428296*^9}, 3.466513083298808*^9, {3.466526643459201*^9, 
   3.4665266455438213`*^9}, {3.4692828865338097`*^9, 3.469282886671062*^9}, {
   3.4692929538224154`*^9, 3.469292957305119*^9}, {3.50906358212182*^9, 
   3.509063591117057*^9}, {3.510664120279601*^9, 3.510664124175693*^9}, {
   3.51310530041179*^9, 3.513105307266843*^9}, {3.518554010297134*^9, 
   3.5185540146454773`*^9}, {3.523647469318994*^9, 3.523647470975258*^9}, {
   3.523734816955677*^9, 3.523734835575946*^9}, {3.52435545933244*^9, 
   3.524355464539218*^9}, {3.524579653112603*^9, 3.52457966458401*^9}, {
   3.537108780326502*^9, 3.537108789837186*^9}, {3.5371107091969233`*^9, 
   3.537110720508822*^9}, {3.537631226712379*^9, 3.537631227669632*^9}, {
   3.5376322394229507`*^9, 3.537632240788416*^9}, {3.540508801098411*^9, 
   3.540508803651105*^9}, {3.542465409032814*^9, 3.542465409727734*^9}, 
   3.542492893149069*^9, {3.542768983069344*^9, 3.5427689861534767`*^9}, {
   3.542985962014683*^9, 3.542985973681137*^9}, {3.543500021974161*^9, 
   3.543500024467021*^9}, {3.543788031814123*^9, 3.543788032842576*^9}, {
   3.544226422801421*^9, 3.5442264263989277`*^9}, {3.5448297414922323`*^9, 
   3.5448297441777143`*^9}, 3.544842715107615*^9, {3.6496218619642*^9, 
   3.6496218629594*^9}, {3.6496218953046618`*^9, 3.649621925852265*^9}, {
   3.649635642546791*^9, 3.649635650870303*^9}, {3.6496774042451878`*^9, 
   3.649677430353726*^9}, {3.649699245166553*^9, 3.649699246955241*^9}, {
   3.650797401485664*^9, 3.6507974026466084`*^9}, {3.651068921478383*^9, 
   3.651068930597733*^9}, {3.655487310498612*^9, 3.655487325477068*^9}, {
   3.656799910061349*^9, 3.656799911886951*^9}, {3.65738819798055*^9, 
   3.6573882033716097`*^9}, {3.657456948076684*^9, 3.6574569949971952`*^9}, {
   3.657459045821754*^9, 3.657459048906014*^9}, {3.6574860471207523`*^9, 
   3.6574860725013*^9}, {3.6579129856215057`*^9, 3.6579129872160378`*^9}, {
   3.657913038599585*^9, 3.657913038749085*^9}, {3.6580788622683077`*^9, 
   3.658078889213256*^9}, {3.661769470674636*^9, 3.66176947518295*^9}, {
   3.665400914764703*^9, 3.665400914880424*^9}, {3.665401432153385*^9, 
   3.665401434086681*^9}, {3.667734799749662*^9, 3.667734802853197*^9}, {
   3.6680025262402697`*^9, 3.668002529057887*^9}, {3.670328369633778*^9, 
   3.670328369901882*^9}, {3.671545151865367*^9, 3.67154515290937*^9}, {
   3.6736269818118887`*^9, 3.673626982166335*^9}, {3.6747524685749397`*^9, 
   3.674752476203525*^9}, {3.6948801130382977`*^9, 3.694880138546114*^9}, {
   3.6999827063698072`*^9, 3.6999827067029877`*^9}, {3.7002313201785088`*^9, 
   3.700231341331029*^9}, {3.70067850147639*^9, 3.700678511051175*^9}, {
   3.70077283985291*^9, 3.700772839881125*^9}, {3.701119082379987*^9, 
   3.7011191229854727`*^9}, {3.709656174787807*^9, 3.709656178980372*^9}, {
   3.722952930867269*^9, 3.722952931041852*^9}, {3.723068344672563*^9, 
   3.723068350619933*^9}, {3.723297277953047*^9, 3.7232972788681107`*^9}, {
   3.723989543945449*^9, 3.723989551913727*^9}, {3.731694173483202*^9, 
   3.731694175425088*^9}, {3.7318490787492247`*^9, 3.731849091281193*^9}, {
   3.733758056412477*^9, 3.7337580579701767`*^9}, {3.735907475750663*^9, 
   3.7359074761679163`*^9}, {3.7507194036630993`*^9, 3.750719404192321*^9}, {
   3.7819747687112007`*^9, 3.7819747703667507`*^9}, {3.7821439505546503`*^9, 
   3.782143961282281*^9}, {3.7831855881594563`*^9, 3.7831855914487667`*^9}, {
   3.7835183896748457`*^9, 3.783518393535018*^9}, {3.7838114784536953`*^9, 
   3.783811480335544*^9}, {3.784203189123577*^9, 3.784203196580167*^9}, {
   3.793029588058913*^9, 3.793029589919492*^9}, {3.7934524485980062`*^9, 
   3.793452458254895*^9}, {3.793466567631364*^9, 3.793466570052712*^9}, {
   3.794488581802053*^9, 3.7944885862110157`*^9}, {3.794764729744699*^9, 
   3.794764735601108*^9}, {3.797199249527485*^9, 3.797199264072547*^9}, {
   3.800809322276617*^9, 3.800809332388771*^9}, {3.8008387632357273`*^9, 
   3.8008387703028*^9}, {3.805025100061576*^9, 3.805025102812519*^9}, {
   3.8085828221845207`*^9, 3.8085828541563263`*^9}, {3.808585338391879*^9, 
   3.8085853449111767`*^9}, {3.817255760157475*^9, 3.817255760438055*^9}, {
   3.817345027325014*^9, 3.817345030496047*^9}, {3.81879863343047*^9, 
   3.818798634525754*^9}, {3.818818082424075*^9, 3.818818111752932*^9}, {
   3.818818433488336*^9, 3.818818434111804*^9}, {3.8188521193398333`*^9, 
   3.818852128183743*^9}, {3.8246505599209433`*^9, 3.824650562431966*^9}, 
   3.826055055641745*^9, {3.827406307203595*^9, 3.827406313775175*^9}, {
   3.827493102409761*^9, 3.827493115265018*^9}, {3.829942435715049*^9, 
   3.829942444942706*^9}, {3.830118918067471*^9, 3.830118919184718*^9}, {
   3.830121411244475*^9, 3.830121416459354*^9}, {3.861887369042314*^9, 
   3.861887369864805*^9}, {3.87899880278721*^9, 3.878998835730898*^9}, {
   3.879343677738806*^9, 3.8793436804588327`*^9}, {3.879426298309236*^9, 
   3.8794263004488287`*^9}},ExpressionUUID->"9bb3be5a-4490-4422-9cb5-\
e98228add7e5"],

Cell["Part 4:  Feedforward Neural Nets", "Subtitle",
 CellChangeTimes->{{3.8794263063293552`*^9, 3.879426315218161*^9}, {
  3.8794265172249126`*^9, 3.8794265211957283`*^9}, {3.879426613259437*^9, 
  3.879426618175473*^9}, {3.8804614042652397`*^9, 
  3.8804614043561077`*^9}},ExpressionUUID->"04ac8688-6c07-4b3a-9d5e-\
3372511d02a3"],

Cell["Yen Lee Loh, 2022-12-6", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQPffZ0Ql5pW8cA1L5JoHotaq9NVuBdN3HqWC6hbHK
ma3sjaNzSg2Y3pT2068dSDtIMvmD6GOHWV8vL3/jOG86J5gWM7y191XlG0cO
xSdgerZAuKdS3RvHe6sOg+najcvUPwLpN17bwPSvjqtfPze8cazZ8gRMb7wb
En676Y3jk9hyMC0gVrTXqOWNY1VcLZg+MiVeLhZIp7UzKoJoO9+tvYWtbxwP
tWX3g+jOty7CnJ1vHFe8VRMB0T7XXB3jgfSGJmYnEM0TrnxcqveN4yeRd2Ca
8fwyg+9H3zh6JX4B0xVb3ybNegZU99koGUSnOUSdcHr+xpEpPBZMAwDmyJ9W

  "],ExpressionUUID->"05a91cfd-bd0d-43be-be51-4516309bff6a"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "General Theory of Neural Nets"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.87944309989867*^9, 3.879443112143969*^9}, {3.881750247272923*^9, 
   3.8817502480054073`*^9}},ExpressionUUID->"deef6a07-400a-4ea9-be99-\
de359dd48bc5"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Definitions"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 
   3.879434769211688*^9}},ExpressionUUID->"87a1ceb1-81fa-4191-b793-\
a14c47aa3d3c"],

Cell[TextData[{
 "A graph consists of a set of ",
 StyleBox["vertices (nodes)",
  FontSlant->"Italic"],
 " connected by ",
 StyleBox["edges (links or bonds)",
  FontSlant->"Italic"],
 ".\nA digraph consists of a set of ",
 StyleBox["vertices",
  FontSlant->"Italic"],
 " connected by ",
 StyleBox["directed edges (arrows)",
  FontSlant->"Italic"],
 ".\n\nFrom now on, an artificial neural network will be referred to as a ",
 StyleBox["net",
  FontSlant->"Italic"],
 ".\nA ",
 StyleBox["net",
  FontSlant->"Italic"],
 " is a graph consisting of nodes connected by ",
 StyleBox["layers",
  FontSlant->"Italic"],
 ".  A layer may consist of a single edge, or of any number of edges.  (See \
examples...)  \nA net has one or more nodes that are ",
 StyleBox["inputs",
  FontSlant->"Italic"],
 ", and one or more nodes that are ",
 StyleBox["outputs",
  FontSlant->"Italic"],
 ".\n\nA ",
 StyleBox["layer",
  FontSlant->"Italic"],
 " is a function that takes ",
 StyleBox["inputs",
  FontSlant->"Italic"],
 " and produces ",
 StyleBox["outputs",
  FontSlant->"Italic"],
 ".  Examples of layers include:\n\[Dash] elementwise layers (identity, tanh, \
sigmoid, ReLU/ramp, etc.)\n\[Dash] linear layers (dense linear layers \
corresponding to multiplication by a dense matrix)\n\[Dash] convolutional \
layers (linear layers corresponding to multiplication by a Toeplitz or \
circulant matrix)\n\[Dash] mean pooling layers (a type of linear layer)\n\
\[Dash] max pooling layers (which are nonlinear).\nLinear layers and \
convolutional layers have special inputs called ",
 StyleBox["parameters",
  FontSlant->"Italic"],
 ".  Parameters are stored in the layer.  They are never taken directly from \
training data.  [[The same parameters are used for all inputs.]]] \nAccording \
to these definitions, a net is also a layer, and a layer is also a net."
}], "Text",
 CellChangeTimes->{
  3.879419102017153*^9, {3.8794191747680893`*^9, 3.8794191902863083`*^9}, {
   3.879422100330805*^9, 3.879422144653912*^9}, {3.8794221946898193`*^9, 
   3.879422581775078*^9}, {3.879422756278667*^9, 3.8794227713505*^9}, {
   3.8794228325018177`*^9, 3.87942294863132*^9}, {3.879434475686811*^9, 
   3.879434881351016*^9}, {3.879435351213146*^9, 3.8794354876259537`*^9}, {
   3.879435531404749*^9, 
   3.879435743918365*^9}},ExpressionUUID->"5b82892e-d961-4499-844b-\
2f21eb7dda03"],

Cell[TextData[{
 "It is often useful for the net to produce several outputs.  For example, a \
net for 10-way classification (for MNIST or CIFAR-10) may output the \
following:\n\[Dash] an integer ",
 StyleBox["Y",
  FontSlant->"Italic"],
 " \[Element] (0, 1, 2, \[Ellipsis], 9) representing the index of the ",
 StyleBox["most likely",
  FontSlant->"Italic"],
 " class (\[OpenCurlyDoubleQuote]dog\[CloseCurlyDoubleQuote])\n\[Dash] an \
array of 10 real numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["p", "0"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["p", "9"]}], "}"}], "\[SubsetEqual]", 
    RowBox[{"[", 
     RowBox[{"0", ",", "1"}], "]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "21194073-85fe-475a-a971-a984243d035f"],
 " representing the ",
 StyleBox["probabilities",
  FontSlant->"Italic"],
 " of each class (70% dog, 20% cat, 10% horse, etc.)\n\[Dash] a loss value, \
representing the badness-of-fit for a training dataset, or the \
badness-of-prediction for a validation dataset\n\n",
 StyleBox["Training",
  FontSlant->"Italic"],
 " or ",
 StyleBox["learning",
  FontSlant->"Italic"],
 " means updating parameters in a way to reduce the total ",
 StyleBox["loss",
  FontSlant->"Italic"],
 ".\n\nNets are usually trained using ",
 StyleBox["backpropagation",
  FontSlant->"Italic"],
 " in combination with an ",
 StyleBox["optimizer",
  FontSlant->"Italic"],
 ".",
 "  (In PyTorch this is call the ",
 StyleBox["autograd",
  FontSlant->"Italic"],
 " mechanism.)  ",
 StyleBox["Backpropagation",
  FontSlant->"Italic"],
 " means using the chain rule to calculate derivatives of the ",
 StyleBox["loss",
  FontSlant->"Italic"],
 " (the output of the net) with respect to the ",
 StyleBox["parameters",
  FontSlant->"Italic"],
 " of the net (special inputs that reside within layers).\n\nAn ",
 StyleBox["optimizer",
  FontSlant->"Italic"],
 " is an algorithm that takes a parameter point ",
 StyleBox["w",
  FontWeight->"Bold"],
 ", a function value ",
 StyleBox["F",
  FontSlant->"Italic"],
 " , and the gradient ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Del]", "F"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "174d77de-4681-41f2-bd94-84b6fdcf9e44"],
 " (consisting of derivatives",
 " ",
 "with respect to parameters ",
 StyleBox["w",
  FontWeight->"Bold"],
 "), and suggests an new guess for ",
 StyleBox["w",
  FontWeight->"Bold"],
 ".",
 "\n\nIn general, ",
 StyleBox["loss",
  FontSlant->"Italic"],
 " will be used to refer to a differentiable, real-valued function.  In \
contrast, ",
 StyleBox["accuracy",
  FontSlant->"Italic"],
 " or ",
 StyleBox["error",
  FontSlant->"Italic"],
 " may refer to the number of correctly classified examples, which is an \
integer, and thus is non-differentiable."
}], "Text",
 CellChangeTimes->{{3.8794348795812063`*^9, 3.879434908883267*^9}, {
  3.879435632636196*^9, 3.879435666182549*^9}, {3.8794358185748787`*^9, 
  3.879436117308716*^9}, {3.879436155120529*^9, 
  3.879436377821638*^9}},ExpressionUUID->"50e103b4-5f99-4e99-a980-\
db36f85b8d65"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Types of Layers"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.87944309989867*^9, 
   3.8794431098594303`*^9}},ExpressionUUID->"19696cae-b8ec-4ed2-9d3b-\
2b49af6076ec"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Elementwise layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.8794349505445623`*^9}},ExpressionUUID->"abd4f383-c891-4a45-b776-\
71208b4db446"],

Cell["\<\
Any differentiable unary function can be used in an elementwise layer, which \
applies the function to each input to obtain each output, as shown in the \
sketch below.\
\>", "Text",
 CellChangeTimes->{{3.879434986048233*^9, 3.879435007358308*^9}, {
  3.879435320175867*^9, 3.8794353411419764`*^9}, {3.879442873116013*^9, 
  3.879442950234068*^9}},ExpressionUUID->"06d1f62b-a82d-492d-837e-\
5bf0333e63bc"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQd8FVXah62rsvZ1bauuvbu6ru1TdxUEIk0pgiAIAiK9R2kiTcEogoIo
CFKUjiCCNEGQSAkiSCSAIkSKoCBFQLoy3/O/Z7j3EpIQkpt28z6/gd9k7szc
uXPO2055z1W1mpZ/7qQTTjih5en8V75mq8ItWtRsU+Fc/qjYpGX9uk3qPFui
SWydunVa3FfrZA4O5t/DJ55wgvY9wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwyhIHDjoffylt2tPbj+Hkf38ecj76Vf9b0QNC1Z4JxX2pizI
7ecwDrPvgLdibbbcOT7RO7GwtzQ5W25u5ArvTVSZJq7O7ecwDvPuJ97JRbyf
t0b+zi/0la5e80vk72zkFs3e9k55xPtlW24/h3GYZWskaMQ1EadoS69QjLdn
X+TvbGSR/Zkt7tJtvNOLW/xbILi+mndROe+PP3P7OYwjQWNfVlFNE5ng9tre
+WWyRdsbeYo/D0l4b6qR289hHMXrIxXXfL8+M9deXsn755ORfiAj74GHdnZJ
7976uf0cxlHUjPNOLSr7O3+Z98E07+AfGe0jwOxifO94Vvv7DnhrN3lDp3ub
tmfrwxq5A2HvXx/1HmkROmJBU24RFE9Edc5S75IKsr9nldT/55Ty3hnvXVHJ
q97V27vfPy3pR2/bzlTu89vv3hkxsr+31dKFJxfRHfpO8D5b6I2N91ZmyqAb
2QFBa7A0j4bCpSakD9J6enGvVGvtc6v2A9WWlbjaGzLNixvhjYtP7/5GFsE3
nvqVvz9toXd3PW/nbu2/+L53wsPakDtco1eHe5/M1f65pXWw4Zs6h3JBNgs3
1/6O3RLV/p/K8rYbIOPLaScW9s4r491V12va2+szXub40greVVW08/KHufSD
jTCSN3q31vTOLKECCqpuihWhw6rWfk2K9846IQH8bp03/WvtIPXB1mYqzGnF
vDJtvTc/8i4ur0KnfKkz1AGqB6FxpyE5/sOiDoKUSQlet2Hqag9vU0K4eOeu
kRnJQuhcLzz/Yy7/9pjfLvHDTyoITCq+9L9qqcR/36vjl1XUVTBgkq69rpo6
jDiNgxR9lS6h5mvEHOGlniQs11b2RTnVRg4TFNKtO7VR9MRH11dT2Q2b4X80
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
wzAMwzAMwzAMwzCMaOL/AbxM3PM=
    "], {{0, 115.2}, {230.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100, 100}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{230.4, 115.2},
  PlotRange->{{0, 230.4}, {
    0, 115.2}}]], \
"Input",ExpressionUUID->"8dc0cb43-3383-4da5-aef7-3f50ec24bc01"]], "Text",
 CellChangeTimes->{
  3.8794429450413647`*^9},ExpressionUUID->"c1114709-e6e1-47ec-a3ad-\
ca56c2c3f10b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Identity", "[", "x", "]"}], ",", 
     RowBox[{"Ramp", "[", "x", "]"}], ",", 
     RowBox[{"Tanh", "[", "x", "]"}], ",", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       SuperscriptBox["E", 
        RowBox[{"-", "x"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AbsoluteThickness", "@", "0"}], ",", 
      RowBox[{"AbsoluteThickness", "@", "3"}], ",", 
      RowBox[{"AbsoluteThickness", "@", "2"}], ",", 
      RowBox[{"AbsoluteThickness", "@", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879435270564837*^9, 3.8794353167058077`*^9}, {
  3.879442959804616*^9, 3.879443031458901*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"bb482e20-cc1c-4399-a792-6ff2a62c9b19"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[0]], 
         LineBox[{{-2., -2.}, {-1.9445448114159614`, -1.9445448114159614`}, \
{-1.735294017449143, -1.735294017449143}, {-1.5401449174746724`, \
-1.5401449174746724`}, {-1.3284852665945908`, -1.3284852665945908`}, \
{-1.130927309706857, -1.130927309706857}, {-0.9168588019135122, \
-0.9168588019135122}, {-0.7066879064798623, -0.7066879064798623}, \
{-0.5106187050385604, -0.5106187050385604}, {-0.2980389526916474, \
-0.2980389526916474}, {-0.09956089433708235, -0.09956089433708235}, \
{-0.0031887755102040817`, -0.0031887755102040817`}}], 
         LineBox[{{0.0031887755102040817`, 0.0031887755102040817`}, {
          0.306110548558269, 0.306110548558269}, {0.5030998514664022, 
          0.5030998514664022}, {0.7165997052801466, 0.7165997052801466}, {
          0.9262019467341961, 0.9262019467341961}, {1.1217024941958975`, 
          1.1217024941958975`}, {1.3337135925632102`, 1.3337135925632102`}, {
          1.5316229969381747`, 1.5316229969381747`}, {1.7256347889534445`, 
          1.7256347889534445`}, {1.9361571318743254`, 1.9361571318743254`}, {
          2., 2.}}], 
         LineBox[{{-0.0031887755102040817`, -0.0031887755102040817`}, \
{-0.0031887755102040817`, -0.0031887755102040817`}}], 
         LineBox[{{-0.0031887755102040817`, -0.0031887755102040817`}, \
{-6.530612244898012*^-22, -6.530612244898012*^-22}, {0.0031887755102040817`, 
          0.0031887755102040817`}}], 
         LineBox[{{-0.0031887755102040817`, 0.}, {-1.128474576789396*^-36, 
          0.0015943877551020409`}, {0.0031887755102040817`, 
          0.0031887755102040817`}}], 
         LineBox[{{-0.0031887755102040817`, -0.0031887647021174564`}, \
{-1.034435028723613*^-36, -4.965288137873342*^-35}, {0.0031887755102040817`, 
          0.0031887647021174564`}}], 
         LineBox[{{-0.0031887755102040817`, 0.4992028067979565}, {
          3.2653061224489806`*^-20, 0.5}, {0.0031887755102040817`, 
          0.5007971932020435}}]}, 
        Annotation[#, "Charting`Private`Tag$14767#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[3]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8IHGKDgWbXY19t/EHw/gfvft/9E8BUs
C/7mf0bwD3VN4njwDMHn0Lsud+Asgj+lJMG7YTaCv5qxeAmDOYLPmupuJBkr
BOcL3zias2iiIJwfdHhWsuYpATi/+r1tzoTH/HD+jvJZWev9+RDunRSq8G8m
D5zvPnevn8cbLjh/2fHKa8XRnHB+XMsU0fMr2OH8ugTmddzCbHA+g678fudW
Fjj/VvfM9tVXmeB8Ga6MlV+cGOH8bFMt1tsy//fD+Mnm91YcPvwbzteqsPqf
t+QHnL/wbvCRSsevcP7zRlEbd4lPcP6uqRquL8LewvkGL29+0Z/7DM532XWb
82/YAzi/YOX6H4LClxHq+fKanR5cgvM/FunwFa9F8ItsVipfcUfwS88v8ptW
cxHO//xK29P0zHk4n635xwK3opNwfrtP6bblPAg+h9in0xzLT8D5XCtffzt1
+zicz3/+no+/6zE4X0L66I9wicNwflia8sJLNTvh/K7C4o5JW3fA+XtrDucH
vdsO56tMTra7FL8Nzv+0f/Hti06b4Xw5Yw+dRYKr4PxWzxe/FJtXwPlv4jtO
LvyyDBHePSfSFl5fDOevPTPRydF6NpzfcezXhQj5LDgfALA94AQ=
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQ3XHs14UI+Sx7GB1sfGNPm2MLnN52M7ypvboLTvMe
eK18JGoCnC5My355ZMo0OM3AsPV/8r7lcPr4mZtdxsE74HRGxa3j0do74TSH
ym2WFuZdcNqr+k7dlc274fQZzftFpSL74XSGc9Ha268OwemcBeVTZdechNNW
ugc3BUy/DKeZykTvpEg+gNPsPAGNSe+ewenmB9ecixa/hdMbZrcF1H36CKfz
F6UIPAn7CqfjsmbJtjf+gNOdgWWWxnN+w2kWkanP6n/9g9MMEOAAowGQ8bBV

          "]]}, Annotation[#, "Charting`Private`Tag$14767#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwV1ns41M0XAPDFsu7sbipJUki5FElRnNMFqRRKSqLcEqIokpReXpeIEBKK
ki56KalIFxJRkSwqkTvrtt8VIpLf/P6a5/PMzHPmzJnnPKPs5GPtKkij0RQE
aLT/j5GVU3X7lDzghWiE0G4yGmqVFVimcMDoru8qaxoH1jQ0Jb+q5sAtLLXZ
rM2BVUFDZzT/cGDXefeaRfYcUKuet1n0cAPs6NotfeUZB9iu3pzXKxrh0MWf
Ln7HGmAoXWFM+1UTzDy6LNvV0Ag3JP3XSPV8A282Lyci/isI+su1uMi3g/JU
jZ1+SSvYHbpfX6TXDsxA2iOB3lYo2AbVkpbtoF3gTt2X/QFOSkefFoa3g1Cc
bV2y6w94U/XiMn2sHfI6dPifpdogVMHFJLu2Ayptyzo6NdqBXlaQ1xXaBS85
9X433DvAPtfs9tobXVB8/8wYJ6gDCpNa0qKfk3k4Ff8rtgNcPESiVo90wdNp
RzmRJx1QwbZzDnXohh+PPOk7aZ0Q7iYwf6lBD6RaKuiEJHYCQ9LyghOvF445
Txh7P+iCfcvsSvXF+qBU68k3uZddcH+Ty6y4Sh84ZfhuflDTBTsDTwc/3t8H
cYmZ8bd5XZDcmxlIr+gD56cZF96v7Aa1spETOWlcuExfebojrxtM/BOdBrYO
gM0/SUlHM3sgOT4j65XzALgY7Q4by+sB7oM77QnnBiDg/MFf3i97IKarxGF9
4QAwlc+E6jb3QINlt12M0iAkXx1QHmf1govGmt3avwah80ZElc+FXghtb9rs
e2sYkoKPxJyx7oMfxduPnX4xDP5FlOFKhz4wTCxNPtc4DAKPYxOajvYB3+R+
/0UGD+7NDXacCekDh9zguFuePJjP/ez8II+s91f53rCags35/OYUBhd+CxsU
KzjxAdcp13TncyHHd7TmujcfjvdaKNKec2FP23+dykF8KP0jYSzzlgsPi5ZI
ql/hw/e5e+eLfeWCm6eko14lH2J9FTd7zXKhoa6NbrFiBNKjry74vb0fHqaF
W577OQLXjNLGfVv64QM7vE+G9hNactfaNPX0Q2/0v+eypH5Ck/fdZk2qHxae
DXvwVv0nGHgIRz8WGIBI+39EJRx/wqZuzrC62gAcUjxXmvLhJ4zrlCu+9hoA
2RunVj3KHgWpqRCRMf4AaMw79W5TwSi4f95u3jg5AKZxJx0aXo/CEjMTy1za
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
qP/OOXkj8f8AfGvU9Q==
          "]]}, Annotation[#, "Charting`Private`Tag$14767#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1]], 
         LineBox[CompressedData["
1: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

          "]], 
         LineBox[CompressedData["
1:eJwV0Xs41HkXAPDJDuMyjZn5ZQuVWymFotJLvOfgdUm86abEbjUlQlQs7RKr
FFrRTSpacklL4S1lpJXCiArlUi27JDMmmt/XNaTN/t4/znOez3Oe85zznGMg
Ct3sp8RisQ4x8f+cKPncskMvEPb6v25PUOkBG7PHdzzTW+Gb3Prj/JBeUIrQ
6tqn3QOj7azPxsPvgcP1jBPRMkgdNx/tjJXCiZ4OxyO5CujJvpv+aVAGpRmn
PGNGhkHnfa3CwUgOoTn7+H1e43BQ5P42fcsH+D7w6oKEuEmQG+z5+HLjACRt
irBelTkNHVP06iaTQWDPSZPFfv4KwhW5d2wmBuH1s5ND8ZqzcONLedn7jI+w
LUpkdbVGCe2/iNtaVykgWGPQsGknG4PJTiq1SAGDPz5ga+xhY3tsQLndbQUE
ypNkLv5sDDJtth0sVoB/3dLCx2FszG7/lna4owBR7H6Le8lsnGo/O90nVoD3
6DvIrGKjv/3T9WN1CnDufOMbaKiMTltPyh27FaBXJLmkMqCM48dveT3l0bA1
S1zROKSMzllv6zbzaTh9obArZUIZU2r+xe8S0DAWlWI4V1kFp8gR68E5NDS6
exUv0VfB2Gr+yLQODRG0tM7VSwUlI72Z/cY0vLBQHj/9RAUb/de8+mhHQ5TY
cYtmBgeXSOdmtAfQYOnbMrTrOgfV8/szVAJpGJjxTSkt4GCnpV6tVRANO10i
GjaVcTA6S5p88SANNh034eILDj62yOE5H6FhcnS2qTZLFS873HKNi2Lmr3jD
NvJTxUirAGvfMzQcuhF832qFGlalzvetLqbhr2bdNJ6VGnLtHH9pK6HBY6ox
TGarhtY9ve/6S2lY5m5icclNDbsvj3G4d2noG5YWjfsx9ZhFrm7lNGy323W9
LFMNU1ZWLMh6RMO/2zYlW6qro75J6eriZhq4SmtF5lJ1XBkqE8cpaKiI/GaL
bFAdTXd7mO+madivaHb8dUQdf7ucPW5HaKh+E7CYx9LABlt29MQQDWElV+UK
HQ0MC/npB9EYDX/4fg257amBP9b/nTBvmoab5XVRpg81cF3G1HFVVQJOB7em
LbvARTGnPlOgTyD8fCUr9AoXv56fnKlknFduGHw3i4v5rUZSPwMCSkrDDra3
uCifI7ESGxKovnRmyKOOi83htaztiwnYVEs2HJ7gom7DlqhjywiYU9ZKYp/Z
GG5y+LtDqwnMq1gQ6rSIh3FJC2tnnAl83VugK1jOQ7FKgt4VFwJ9PIunXRY8
XL3nwVcLVwKl+/5jEA48nBXDchOtJ+DCD2rN2clDn4Kwhb9vIBDhL17LOsfD
nxUHBL6eBNq1trAq/+ZhYfl0vr03gfNHEs+tfK2J1hfs6KoDBD4/vyVO/FMT
E6POP1gVSEC05GV3z3tNnBQ9N7vJeFWXtvm5IcbhY2pngwgM5GyTTrL5+HJq
ZbbPQQLJ3P4474V8dD9YEN17iEBTt1qlziY+Und0SkojCWw+tdHs2n0+5n3y
sfONJ3DDe2h9RQUfrw3zJA8YT5me29/+kI8m8y9ytE8SyG59lTW7ho9LTvTd
a2Os0PcSxjTzkf7Joc41gUBipe/E93I+8g4UdBqdJlA1dOCxvo4AA9PznQpS
CSzzid+Wd0yA8+T0RcUVAt6H7wvZcQJcK7U/6nCV6U+QN++NF+CrjL+00hlL
77q7Gf0iwEiTtp8hg5nP1YKcywK8bfdI90wmAa2q/KXZdwVYKEhM080iwDKo
n874IEBRNI/PySPQIVPLubBNiPq2ku1GtwlItiZlVuwQ4kyIQ9NexvefqKZ3
+whxdocOlcf40q+c5OUiIRr3/qC6qJjANi/liJoQIY5GyvINSgi01bHcRhOE
2KIve0b9j8CrvInhzQ+E2L48q7qtjLmvSGov1KNweeHuzpZKAu/YBZNphhQq
ZPnLuA8JjN0IKNE2pvDMoifOLoy1BwfnG5hRmMsxkz1kvC9sZGLFOgpLwo5L
8n9n/n9i5rbHdgoXCg9YhjwiYJyvrZOUSiEOzLz94wkBa5fOFu4FChs2ntfi
1xBw/5CZcPYShUVrFhs5MT5spj+efo3CtE/ysmLGD+8Zt9woonDpoaXlsbXM
/yWrTtXWU5jSrLdDW0LAL2Dc1vUZheHlL+o2MD6qXj76rInCj6e6OTGMr/3X
Zk9rO4W80Bq1XsbyDrTtfU9haWma6s16Zt+jSqN+/RRu+hy84C3j2bq1v30Y
oHCNVRNH/SkBy10uc4eHKQx2e/RdEGOnWWpN4eMUXrdJb8hgvCO3MX5ykkKB
R5LGc8aBTsnror9QaOhYYfSF8bF+j5GZGQqvVbsJTRsI/AM9c2G+
          "]]}, Annotation[#, "Charting`Private`Tag$14767#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[{
        AbsoluteThickness[0], 
        GrayLevel[0]}], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
     LabelStyle -> {14, FontFamily -> "Times", 
       GrayLevel[0]}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-4.9999997959183675`, 4.9999997959183675`}, {-2., 2.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, RotateLabel -> False, 
     Ticks -> {Automatic, Automatic}}, 
    BaseStyle -> {14, FontFamily -> "Times", 
      GrayLevel[0]}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Identity", "[", 
         TagBox["x", HoldForm], "]"}], 
       RowBox[{"Ramp", "[", 
         TagBox["x", HoldForm], "]"}], 
       RowBox[{"tanh", "(", 
         TagBox["x", HoldForm], ")"}], 
       FractionBox["1", 
        RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
             TagBox["x", HoldForm]}]]}]]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 14, FontFamily -> "Times", 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "0", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"14", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                 
                 TemplateBox[<|"color" -> GrayLevel[0]|>, 
                  "GrayLevelColorSwatchTemplate"]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.879435277277399*^9, 3.8794353171480207`*^9}, {
  3.87944296574035*^9, 3.879443031716309*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"c1950afc-e6d7-447a-bc61-b808b04cb41d"]
}, Open  ]],

Cell["\<\
The plot above shows functions that are often used as layers.
The identity function is a boring type of layer.  It represents a \
\[OpenCurlyDoubleQuote]jumper cable\[CloseCurlyDoubleQuote] that helps \
transmit signal from one point to another, but doesn\[CloseCurlyQuote]t \
process any information.\
\>", "Text",
 CellChangeTimes->{{3.87943549486353*^9, 3.879435525357719*^9}, {
  3.879442951778096*^9, 
  3.879442956711759*^9}},ExpressionUUID->"fe52da1c-d02b-4d04-9f2b-\
84b81e0807db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Loss layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.8794423531669903`*^9, 
   3.879442354943426*^9}},ExpressionUUID->"ff83cfb2-5ef3-44be-89b2-\
d6c8a3b32c3d"],

Cell["\<\
In principle, one may define layers that perform operations such as addition, \
subtraction, and multiplication on pairs of inputs.  However, binary \
operations are most commonly encountered in the final stage of a network, \
where one compares the model output and target output to obtain a loss value, \
as illustrated in the diagram below.\
\>", "Text",
 CellChangeTimes->{{3.879434958500428*^9, 3.87943496171527*^9}, {
  3.879442144500989*^9, 3.879442168601619*^9}, {3.8794423408384132`*^9, 
  3.879442518060248*^9}},ExpressionUUID->"32d2bc59-d936-4c60-aa08-\
5a1ca53d9da7"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQeYFNW2/b3q/+rz6TP8vVevXn3mnHO6SkZQJKMgcWBgAMngCDJEJQcl
CEhWgqIgSpBBEERAZBBEQZJkRUGUjAS13m/1KWqaYZjp7ulA95z1FXzdNdXV
1VVn7b32Pufsc3VSk3J1Tz/ttNNanM1/5WqlFmzevFbr8hfwpmLjFvXrNU6u
U6Jxy+R6yc0fSjqDnaP4V+Bvp52m146FhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFxSmMA4ec3ftjfREWFhYhof8kp3aPWF+EhYVFSHjlbeeB
FOfPv2J9HRYWFsFjwAfOrTWd3/bG+josLCyCx4jpzg1VnY0/xfo6LCwsgsfw
6c51zzurtwR6/F8nKO1l65xpi5QHs7CwiDL6T3KureKs3Zr7kUvXOqXaOPen
OGkjnKN/uDsnz3durObcVN15tmM21LawsIgoIOP1VZ1tO7PuP3i8P/39sPPo
C85Vzznl2zkPN3R++EU7YfFjjZwnmsh9D53q/PFnlK7ZwsLCoE5P5a/82Zqe
4RRr6dyR5BRv5Xy11t35617nlhryvxB5wzaXqlt3aOeoGTG4bAsLC1C0pfNQ
g8y3s76SSy3T1qnUQX75kYaZge0bk52ba4jaS9a4e/jTAylOk/62+8kiKwim
MlY7v+yO9XUkNI4clZ+t2CFzD+541Wb39dszldpati7zr/O/dQo3d25PyqTw
2Fk6Q3IvOWiL/IDf9jorN+V+2IqNzr/KOw1fi/wF5WNA1asrO+1GuG+hc5XO
mX9dsEK5KX/+gs3ble/q/FbmnpkZonCBpllDZouERKN+zuUVcqfwN+udS8o6
NbtF5ZryK8Z84lxRyZm+yH2LHq7QPnMsR58Jzn31nL0H9PqLleppajNUghld
/elS7dy93/ngc1H+ykrOXXXsIJB8gcqd5Vhz7XCEv5eWs0NzI4uWg6SQt+7I
3DNqhlOtizNkitPzHVG117vu/rQRCn6vqayIeOI8Z88Bp8d4555kMZedBMvo
JYv8gHJp8r8btuVy2OJVzkWlnKTuUbmm/IrWQ5WPytJvu2aruNniDee9uZl/
OvqH8/2Pempez+8Pv4jsxL+5PkqLRELxVs4/y6gx5IyFK5xzS1j+Rha/7Ha2
bI/1RVjEFQo0dS4u7azPzWh/ssQ5/yn1TVhECIePOq9PdF54XXmqsOPIUSXH
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
sLCwsLCwsLCwsLAIEf8HcdLX1A==
    "], {{0, 115.2}, {230.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100, 100}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{230.4, 115.2},
  PlotRange->{{0, 230.4}, {
    0, 115.2}}]], \
"Input",ExpressionUUID->"4215c4b3-6aff-4cab-b97f-57bc49eda81c"]], "Text",
 CellChangeTimes->{{3.879442152947825*^9, 
  3.879442159430311*^9}},ExpressionUUID->"47d40255-d0b8-4f57-be6e-\
7f136418d300"],

Cell[TextData[{
 "Frameworks such as PyTorch provide implementations of loss functions such \
as MSELoss and BCELoss:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "MSE"], "(", 
     RowBox[{"Y", ",", "y"}], ")"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Y", "-", "y"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"6d8502d5-d84d-41ee-bfbb-ebf576257fca"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "BCE"], "(", 
     RowBox[{"Y", ",", "y"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"1", "+", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "+", "Y"}]]}], " ", "+", 
     RowBox[{
      FractionBox[
       RowBox[{"1", "-", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "-", "Y"}]], " "}]}]}], TraditionalForm]],ExpressionUUID->
  "70a4bc11-2ae4-48c1-b139-9902032087a3"],
 ".\t"
}], "Text",
 CellChangeTimes->{{3.879442512909556*^9, 3.879442589465054*^9}, 
   3.8794426449686213`*^9},ExpressionUUID->"41c3fb5d-2c80-4185-84e7-\
009538a39535"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", "x"}], ")"}], "2"], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1.5"}], ",", "9"}], "}"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\)\>\"", ",", 
         "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "10"}], "}"}]}], ",", 
      RowBox[{"PlotRangePadding", "->", "0"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{
       "{", "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(F\), \(MSE\)](Y, y = \
3)\)\>\"", "}"}]}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesOrigin", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Log", "[", 
         FractionBox["2", 
          RowBox[{"1", "+", "Y"}]], "]"}], ",", 
        RowBox[{"Log", "[", 
         FractionBox["2", 
          RowBox[{"1", "-", "Y"}]], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\)\>\"", ",", 
         "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".5"}], ",", "4"}], "}"}]}], ",", 
      RowBox[{"PlotRangePadding", "->", "0.1"}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(F\), \(BCE\)](Y, y = \
1)\)\>\"", ",", 
         "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(F\), \(BCE\)](Y, y = \(-1\
\))\)\>\""}], "}"}]}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesOrigin", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\</Penalties.pdf\>\""}], ",", "gr"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8789988301166563`*^9, 3.878999090698601*^9}, 
   3.879442615048118*^9, {3.879442648644186*^9, 3.87944285281557*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"d6159d75-16f8-43a6-befa-57968cd283a9"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
bN15lfcDTPz/f/N/ANpajzU=
            "]]}, Annotation[#, "Charting`Private`Tag$13620#1"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0., 0.}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox[
           TagBox["\"\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"\\!\\(\\*StyleBox[\\\"Y\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
            HoldForm], TraditionalForm], None}}, FrameStyle -> Directive[{
          AbsoluteThickness[0], 
          GrayLevel[0]}], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
       LabelStyle -> {14, FontFamily -> "Times", 
         GrayLevel[0]}, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-1.4999997857142857`, 8.999999785714285}, {-1.5, 10.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       RotateLabel -> False, Ticks -> {Automatic, Automatic}}, 
      BaseStyle -> {14, FontFamily -> "Times", 
        GrayLevel[0]}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(F\\), \\(MSE\\)](Y, y = \
3)\\)\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontSize -> 14, FontFamily -> "Times", 
            GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"14", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
sDAZE2MBxqApXFgg4dOv0F0vcN/6X/tZwRA=
            "]]}, Annotation[#, "Charting`Private`Tag$13690#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
jmPCpo9KSM32tWi0BwfC/6OM/gsLpqR/
            "]]}, Annotation[#, "Charting`Private`Tag$13690#2"]& ]}}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0., 0.}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
          FormBox[
           TagBox["\"\"", HoldForm], TraditionalForm], None}, {
          FormBox[
           TagBox[
           "\"\\!\\(\\*StyleBox[\\\"Y\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
            HoldForm], TraditionalForm], None}}, FrameStyle -> Directive[{
          AbsoluteThickness[0], 
          GrayLevel[0]}], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
       LabelStyle -> {14, FontFamily -> "Times", 
         GrayLevel[0]}, 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
         None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{-0.9999999591836735, 0.9999999591836735}, {-0.5, 4.}}, 
       PlotRangeClipping -> True, 
       PlotRangePadding -> {{0.1, 0.1}, {0.1, 0.1}}, RotateLabel -> False, 
       Ticks -> {Automatic, Automatic}}, 
      BaseStyle -> {14, FontFamily -> "Times", 
        GrayLevel[0]}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(F\\), \\(BCE\\)](Y, y = \
1)\\)\"", 
         "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(F\\), \\(BCE\\)](Y, y \
= \\(-1\\))\\)\""}, "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontSize -> 14, FontFamily -> "Times", 
            GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"14", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.879442689248139*^9, 3.87944285311917*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"10f29f56-6ca2-4945-93dc-c542b8f597fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Linear layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 
   3.879435023500846*^9}},ExpressionUUID->"5400a2d5-3824-48e1-9718-\
e467883d1fc0"],

Cell[TextData[{
 "Given an input vector ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    StyleBox["x",
     FontWeight->"Bold",
     FontSlant->"Plain"], "_"], TraditionalForm]],ExpressionUUID->
  "bbf1a8fe-b320-411f-b5ef-b487286dae64"],
 ", a linear layer outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     StyleBox["u",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], " ", 
      UnderscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}], "+", 
     UnderscriptBox[
      StyleBox["b",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"]}]}], TraditionalForm]],ExpressionUUID->
  "69fa8f68-c57e-463b-a437-0b6fc90f963e"],
 " where the weight matrix ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    UnderscriptBox[
     StyleBox["w",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "_"], TraditionalForm]],ExpressionUUID->
  "25bc7097-fe6a-47bb-b37c-46a63357ffef"],
 " and bias vector ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    StyleBox["b",
     FontWeight->"Bold",
     FontSlant->"Plain"], "_"], TraditionalForm]],ExpressionUUID->
  "91b62f4f-3626-4611-951a-6bbc6ad5dfd8"],
 " are parameters.  We may visualize these parameters as quantities"
}], "Text",
 CellChangeTimes->{{3.879435029985526*^9, 3.87943515130713*^9}, {
  3.8794420191693487`*^9, 3.8794420241165113`*^9}, {3.879442071312199*^9, 
  3.879442096937491*^9}},ExpressionUUID->"78de92f0-02a5-4226-9729-\
28649e409128"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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

        "], {{0, 146.16}, {256.32, 0}}, {0, 255},
        ColorFunction->RGBColor,
        ImageResolution->{100, 100}],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{214.07999999999998`, Automatic},
      ImageSizeRaw->{256.32, 146.16},
      PlotRange->{{0, 256.32}, {0, 146.16}}], "\[Placeholder]"}
   }], TraditionalForm]],ExpressionUUID->"ba2934a3-b544-495f-8037-\
9143998d4436"]], "Text",
 CellChangeTimes->{{3.8794418525314293`*^9, 3.87944185255626*^9}, {
  3.87944188365203*^9, 3.879441893767338*^9}, {3.879441943109391*^9, 
  3.8794419662845793`*^9}, {3.879442051436132*^9, 3.879442051436345*^9}, {
  3.8804615971662292`*^9, 
  3.880461597166621*^9}},ExpressionUUID->"3078cdb1-53cc-4e48-b8af-\
25f44a8b5f4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Convolutional layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 
   3.879435158937639*^9}},ExpressionUUID->"6a245c36-228f-46df-973e-\
efd122fbdbd4"],

Cell[TextData[{
 "Given a set of inputs ",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    StyleBox["x",
     FontWeight->"Bold",
     FontSlant->"Plain"], "_"], TraditionalForm]],ExpressionUUID->
  "56717022-07da-4a7a-af07-ecfb92ab6a46"],
 ", a convolutional layer outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     StyleBox["u",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "\[CircleTimes]", 
      UnderscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}], "+", "b"}]}], TraditionalForm]],
  ExpressionUUID->"964370e2-2353-4f0d-aed5-efdb3385c269"],
 " where \[CircleTimes] represents a 1D, 2D, or 3D discrete convolution."
}], "Text",
 CellChangeTimes->{{3.879435029985526*^9, 3.879435248175205*^9}, {
   3.879442123257547*^9, 3.879442124608864*^9}, 
   3.88140745892371*^9},ExpressionUUID->"be2fbbb9-21a6-4eb7-95f0-\
ce375db08d61"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 115.2}, {230.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100, 100}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{230.4, 115.2},
  PlotRange->{{0, 230.4}, {
    0, 115.2}}]], \
"Input",ExpressionUUID->"10681321-b841-486f-9901-2459fd4b4801"]], "Text",
 CellChangeTimes->{{3.879442127508012*^9, 
  3.8794421365618343`*^9}},ExpressionUUID->"40cd8c0f-6ed5-4ddf-b433-\
0be3a20b8363"],

Cell["\<\
See details in Jupyter notebook.  Some additional notes below.\
\>", "Text",
 CellChangeTimes->{{3.8814074608020163`*^9, 
  3.881407481353763*^9}},ExpressionUUID->"31f244ec-f3a0-414f-9a15-\
33808d6c6a98"],

Cell[TextData[{
 "\[Bullet]  In machine learning, the term \[OpenCurlyDoubleQuote]convolution\
\[CloseCurlyDoubleQuote] usually means \[OpenCurlyDoubleQuote]correlation\
\[CloseCurlyDoubleQuote].\n\[Bullet]  The word \
\[OpenCurlyDoubleQuote]correlation\[CloseCurlyDoubleQuote] has many meanings \
in mathematics and physics.  We should distinguish between two main \
categories of correlations:\n\t\[FilledSmallSquare]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"C", "(", 
     RowBox[{"t", ",", 
      SuperscriptBox["t", "\[Prime]"]}], ")"}], "=", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"X", "(", "t", ")"}], 
      RowBox[{"Y", "(", 
       SuperscriptBox["t", "\[Prime]"], ")"}]}], "\[RightAngleBracket]"}]}], 
   TraditionalForm]],ExpressionUUID->"f91ffce4-a508-4b0c-b74e-5ef153bedfc8"],
 "\t\tcorrelation between two signals ",
 StyleBox["X",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Y",
  FontSlant->"Italic"],
 " ",
 "at two different times ",
 StyleBox["t",
  FontSlant->"Italic"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["t", "\[Prime]"], TraditionalForm]],ExpressionUUID->
  "b13fb833-e292-4b20-9633-4debbc4c98c8"],
 ", averaged over the ensemble\n\t\[FilledSmallSquare]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"C", "(", "\[Tau]", ")"}], "=", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      RowBox[{"X", "(", "t", ")"}], 
      RowBox[{"Y", "(", 
       RowBox[{"t", "+", "\[Tau]"}], ")"}]}], "\[RightAngleBracket]"}]}], 
   TraditionalForm]],ExpressionUUID->"b5980c80-8d88-4512-9f9e-7beadc10e304"],
 "\t\tcorrelation between two signals as a function of lag \[Tau], averaged \
over ",
 StyleBox["t",
  FontSlant->"Italic"],
 ", and also ensemble-averaged",
 "\n\[Bullet]  In machine learning, the term  \
\[OpenCurlyDoubleQuote]convolution\[CloseCurlyDoubleQuote] is used because it \
refers specifically to the second type of \[OpenCurlyDoubleQuote]correlation\
\[CloseCurlyDoubleQuote] above (the \[OpenCurlyDoubleQuote]sliding \
correlation\[CloseCurlyDoubleQuote])."
}], "Text",
 CellChangeTimes->{{3.881407472245001*^9, 
  3.8814080007603073`*^9}},ExpressionUUID->"491dfbd9-f275-4baa-9ffb-\
54ec0f5953fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Pooling layers (TBD)"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}},ExpressionUUID->"e4f9804e-59b4-4bb4-b75c-\
41974b89990f"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.879435185530237*^9, 3.879435185608535*^9}, 
   3.8794364751074533`*^9},ExpressionUUID->"1a09ceb0-07ba-40b9-87d2-\
d2aa6363bb7c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Sequences of layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879453305386365*^9, 
   3.87945330707885*^9}},ExpressionUUID->"52c07202-5f98-410b-9962-\
0904f595cf83"],

Cell["\<\
One may combine layers to form chains or other structures.  For example:\
\>", "Text",
 CellChangeTimes->{{3.879453352857971*^9, 3.8794533758418913`*^9}, {
  3.879453445862109*^9, 
  3.879453450182081*^9}},ExpressionUUID->"dffedf9a-d6cd-4ce9-9893-\
9a7adf8c5e24"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
G+98pjNLsMikpZh+qdGl3zS5HuvoBuVi8bewlVJAkLgHoMj/O03l7abYOegL
P/wJ0GUMhtEPhnMRlv0lWBI+HF/T2OMm5fGOK/rrbyJNhsYWBrV/8zN6Nqzq
kmlofDOxZF/KRbv6+9d3UU/9zaXxTKOX/qb7eEKtPmtHpuxWio69amw9aXT3
fRpcOzR8u/7219hmRMqd5/br7zgsPRhcyu6FoDed3qVt0ytrq9I/8/DFsHfH
uVslcElczNt2aZ82S3uvO7lNH3ZfHahfRVIZecPxy6fqzvHXz+Gl4eX1t7YG
lX7rxiTtRGnQdGoUyWyR+vOn+7Hx1E79a8UjpGXapzS/6V8xx6LCjeXVGtIa
zuus3/xJk0D0u3fyrrkpiydbxKJ/lWTBmlb99tCfF9dpTe1yNf0qNEbqBVNu
cS6Jczn0k9FvSONPv8ozWqTcE1YSv179tvwkuLbm7bS7yhJlgR8mY5eWLQfu
fKbTCj8vdX5AifXy/hj9J8qdLsdeMXbN7r12RMrjGENPrHZrrE8xKjNbbYwi
iSNrLlMbd1s1KG0O1Kz418mty4+u07hoc910TNz1iTtnt1rcq++6MUbFWs9Z
bTXRGUsS9Je+vvszgz9LWU/bXjRCFB9WTn//ptwT8Ham7p7f5Peu6f+2bbn4
ew2ZaVd86O/rsMun15zYrLHW5myi3REHNWDrV53OEiG6V/otp9/VKQfB06Hf
umnr+TjEuO0hmvoGbZhwry+0WsVj0Iho/J14Ns2uJfol619PG07t0Lxt82vX
E/RH+461EYgyie9gzKM7nl4hc+cVG4dNc95qjCHy7uNZA5xytUMXj5cYUUED
ktXOqh4hLY3K5MZDo6qkBrOUG98YrLrm7of+1nOd1lRzlyTGsz9PbP5lY7DV
/DS70AT7/rjqmkOS1gvfJ43Hzw35vO3SPvf6Qv0yT0afORYVzm377CjyelSp
iXX0m8fRDbk3mhW1zfe665P+FZP2m0fz4QdB2HK99MS6dq/MQJTZqnaTkg2c
YiPve3IrAauVS7dBN+wXfpyBSYRhX2PRTcoFrZJYw0R/QyVNMoy4Ftk/dOzU
v3/P7EHDSzeisyBu6a/dkL2Lp+9ZYK/fv2UmeWtQ7x86zi5Xo/s3fsespF1y
cjD9YRm5ZWra41vO4Of62cGl7rI7l8ipfNJSPsz4ngYOYLHIiq1S+Vssin+r
MUoVcQYmkVpxLFQT5sv/7EWepMLURkUCSzec3+V2L8ydUk4rTRIde9Uo9D17
/7KsbxLlZkuOrK00vXnav8vaLu2jCVP/8Ek5WZooW7iVgMUyLh3vfKaTWL9H
qneXYl6oUNRuuJxn6Ruif2jI1HT0xuhKVtO6Gv/eteQoV6sxdLK5zn3DqR0v
DitbYkQFu29LRJS+Nkt76x84Vt94p69EvD7K7elfPn17bNUML3XPAS5e4XS4
bCk6Btv9eN/z5CMH2Bsm9fpgdY9ROv7wqTu/hChX2R1xUMPkF5PrWXWGHIw8
NmbbDK4ttWJViN7Qc83Q54Z8/v646vy4KIt5hLQsOqRMyjHxqzdjqoX4PjP4
s2cHl/Jf3teBbXOsQ+GoUuLSUWI4apndHD+LzNZ22J3PdKCIKHRavuyN8fHa
vWTboTu/hCgXikuI913Uk5MJ71LXVYOsFiLFxt/8NLh2kcDSKUteE2WNhvM6
G9VoK89oEfDH4G8W9XhnrPvTv3xa+JdP3hhdyShym+NFRmPDPiuBs+SBctjL
I8zG34Xk1Iztfno76z4AtxJk/CJ5t5kUrSUVOnB1D9EdcF3z3XOb3uyT4NpT
ds81JmdaxNJv3ZiiQ8q8MPSLkL2LHd06ynVm7VtSbOiXhQZ9rDcNlsYdvb04
rGzQ9pmObl1W2Bcmbl3QpxSXut5S+xHy73LYyyOblsHJzTS2aX4bPd/R7bBl
91Gp0hXN05CpUfMmq3wRkf10WzXI2P7y9VFun030+m+Qh95/ZvBnH03wtLkm
iChTxSfc6rC8X/Fh5fSb0MiZzwaivG2Gt7bMdjqMxG5xH/lab9XhHoCQ+UhF
OZYrenNzlLl/IcXNWuPodqR29TqKXpaohxmYrQK5sTUR2d/5mIuVZ7QwgqX+
Qteb3nltZMW5B1Y4ummUSyVYEtaEbeq0on+d2e2bL+g+auv0pA0xc7y4eJSL
yecqTQdYP/WaD0JmgUq5sSfTYpFuQSg1OWMVCoNnO1NXoM7ksi2ObkcK2phP
WmKnyy/byR8cHyeiTBMde3XA+qCyU3zeHlv1vXHVPGe1tdq2j4iyxub98qQ7
ejIXpP4RPHdJnnBHyNR/c+eczP7T5b8tUFHn87bYPjt7Rc2xCzAnc+0uR7cj
0YXL0vxn9F6+6iMDZrD6JRFlBYtYrsfdiI3ncnIih9Eolc9VingiCaQ0ch6O
P1BOCnvImdzSrWvtVoLMD8X6+pe9pVRrdA/eyiaz70fMRcjc5Oi9FBIsyOdv
N8XYvcd3sv+Eg9tDREREWca7j+R1lfeaWx8v74/ZmHlc5NmacunedunMaeLi
ZeZqbHH4kjf2o9m4z9ENugsaMot5ydaDjmzDkdNSswdG7d9pKpOXZZt8TkRE
RHZRzh8h0z0g1cEDJ9G3WaAS6hcVrYX1Gvfj8CkZ8pt0Go2h0m2H0LuVHcXG
ydDZyEuv1JdvfnHqLWnib0mfKfiP23XUMQ3Qz+qXmdg5XYOu72Au8CEiIsqN
SrVGyLTaGqb9CClYBZPoHqmInJDhIjMnInDlwh64juZVvell9R0Xbrj/hjuG
5qXWQ7A++t1mWBNkybTArFH8xk30IZ+MQI2pdX+jN3X4HAT1HsGosv71IPEb
Jj9NRYDX4yPnSdBC+d8fuE1fiWf1z4Q9xzOreenYckC+6oSIW8bPuVYeERER
UVbSPKAhs3r35COnLmBcuFB1LHjRcKj3M9b3qGlHA6oGywfLo9hmHhf8a9x5
wh1rt7Npl6Zas1NKt8FX17i/mcBvJWA9y+VrSKH6AR4/KwfDkfG2H0Lo2rAX
KfGv3bjpa1dsxVTPaStRx3JQiHw3Ad28rQKl2UBk8po9UEbStTNu+v9Srw82
W/x2rPz8P5myTOatwxV2HsFqrMhopNDzUdj90yruBs7Cf5y2IStdiUE7NYG/
Uh9JmBuSEhER5WaN+iFkftIy+UiDvuhvdOmIkKMR8TWfjFx2+BwsWjdS5aOV
UbVGU2WdH+SZGvKwC2KnHhzyG6Y7Zl5n4F3SBmhEjI1DKNLYphHxyGlMGNh1
FNMvV21Hrpu8TIbNln7TpGewdByFfkKjB1hDuEbxcv6Ysal3NHkaN72vtzJ+
OK5fe9n2mONq3PSD1VvFTqiPVOt7xNT2IyQgSH78VQbPlODF8nsoFuxoGzRA
ZjiHD5yBsJeVBU612Z+2wgzMyt8iAxMREVEuNyhE8ruh18vokZu0FH2YRWsh
52jy1JD5TtN7vqa+9mkPJEnNk8Xrypy1yU+dvYj5n5rN9FkNaRrAjNzl1gWh
q3p3qdEDXXke30m1ANz0oIaWSrZuxvl6smdP8eqFPkCfn5CZmw5Al2Dzn9EB
qGlQ7+jDJgPwlJ5Qrw+2ydbr6xX0fTX+aRrUxKgBSb/ej31RlN646X09qM/q
OUanYt3e0rAv2vOCFyasPl4VzZ69Fl2Lm/fL38fk6BmMbp+7hHx49TqCq8ZX
h6To7yeiXlDWTBzV/1ONyi/WQcHV0fOt940iIiKi3GnjPnQ5PuGOPWLGLUCt
bL3faxKeKtkAIfMLv3u+pmY5jZfGyvQVW62f1ej1XnP0cOZzxfKQHYcxiLxk
k/z2J2oEBS/G3EK96Z2JSxB6pyzDyHLa2+RlOG3EXHQADpwhfafKD5PR0xgQ
JF3HSZcxGIPuOEo6j8F9venB7uMxjKun9ZuGVTz68ukr0VG5chuGszUo7jyC
IeYTEajadOEy+jaT+hI1Ky7aiE5Lzc/6dWlG1WY7rbbDEPkye8dG/XD0f0H/
DDFmDoSfz9y3IyIiomwkLh79dXld0S9XsAqqstfogXCi+UoDp4bMur3v+Zp6
QX1hgUry4Te2K2/3n44UqreWgff/FWSFbYfQAftMDSTMCh1k8UbHj/KnT3O+
fviZ2kjN4fV/RKfuR76pOquJiIiIDJv3Y7z4+dqYfuk/0lyvsf8EujQfqYg+
QMOxMyjdoxE0aOEdushq9kAv5aOVsSu6TVNXIIXmccFAtpOLv4UV3BqlClXH
BkDTV+KI83PpiCVdmSdktbzfwqxQdDF3l1ElIiKidGhw0qgQk6LXceEGzNXU
rBi8GA81VX7wNXKjxs6CVZA20+kl230UvaBPVbttBZvmPyNhas4cMMOuX0Ym
6D8dtYBK1MOd7LJcOsGCBJh2M3q7OB+Fma4aL/UtfvszU96CiIiIcrCewWae
3Jy4NeHEJXj4ZiNUp8nrigC5clt6L+8wEh2hvoNtZFFNs8/XRsh80j0b7DNY
3h8LgvaGObod9yIyWl5viP9Bu5sfimz5ghcGyq32ISUiIiK6G1W7Yc5kEU/U
flQe32E64u6jEnUVC4Lyu2FNTTo0PRavixjZZABWHyfRZFKxk7ksyLVz5n4J
djF0Ntb7ZC+7jmKz9V+X2/Oa+m3QZig6MN9qjFVXTj4llYiIiJyTRghNkhoF
306sX3Q9FtM1X2+IheGSuKhEQ2bzn+9wkZHzsNdPgUpYL/ORL0oAabzU1Gok
TL1j9JE6v+wySp5k+RaM74fusdsFV21Hd+7ztTHbNuyc3S5LREREuc3xs+iE
1DTo1QsPz11CFcTPWpvPVu2GRejfT7zzdUbPxws1kRrbShrxUu8Xr8vpfJlo
/CIUyTxkj+1+Ll9DNaSXvDFTYtyC7LHoiYiIiJzWpKVY8pM3sY6lJPZkasZ4
oxFWBmnqeKU+uig37L2rS52MwOqeCh0QezRbvtcc4+ynLmRq83O7XpMwqH31
+v1eZ+EGdGAW88LfGlm5eRARERHlVPV/RK9jwSrYd9vQegiCZek2iItPumM5
zL12at1KkBs37d5SssFvGOYn3M+0ydORmEz7Yh0UWp+4BP93RERERPdJ0+Or
PhjXLuaVHAujY7At48veqE30sS+WlpDT0nz4ZbsMvlbz5PhFyJbF62JfzjOR
dm0ZERER5WJbD6IPU0Nm5W+tnzodKXuOZ7+FMLmNVy/sT5QB+0+gjMALXtix
fckmezeLiIiIcrdOo7FI55GKEjjL0U2hDKnSFRMe7smNm/Lz/1BA4FUfFNiM
sbUZKBEREVGG3YxH8SKjUrpdlidT1nPpiC2Z7t6uo6hZWswL/24/lGnNIiIi
opxuwmKUo7G5286ctag4pCHz01ZZ3iyyk9Jt0B19N27cRAEB/bNCb4NncmUW
ERERZVxMLOrbPFYZW0O6dJQF65PXid9KQLbUhJnXVYbPcWgrKaMsFvnwG+kz
5c5nHjiJkqdGByZXchEREdH96xFsLu15qAL6Ld9pisrqCzdgKx+Nl3pQg8el
K45uJWWI/hGh/6Ej56V3jv5ZMWoeCp+WbCD9p5sbORERERHdp1sJGBt9zhM5
88HyuD3sgsU+Gi/1vubMu+kHI+d0IgKV82evTe+Emj1QA9Olo+w4nIUtIyIi
otzhyGnUunmqWnLUNDo2q3bj3LxsTHPj6w1lva2Nyy0Wmb4S/Zyv1JcfJvN/
mYiIiDLR3jDxH4kNYko2wB6CA2ewfE32tnIbxsEPpqkMEBmNIu3F66JO+8Z9
jmgZERER5UoJ97ELITmPkNVY2HX2YqqDy7fgL4gS9eTbsXbY05yIiIiIcptR
8zAgnpQkY+Ok92TEy9JtZMVWh7aMiIiIiLKtH3+VD742+6UjoqTW90iYLQZJ
1FVHt4yIiIiIsq1uQVKqNe6s3YU7bzWWiUuw5IeIiIjIyZ2MkDG/y74wR7eD
bGk7TMq2Ry39NxtJeX9WWSciIqJs49ux8nhVlMG5diO90+JvYbg2aTshyhoN
+8oLXqgV0CpQrsQ4ujVERESUc+0LkyWb7HnBQSHytIe86iPHztz2HIvFXIHi
8Z0935rSd/aiFK2FPwGmLHN0U4iIiChH07BX/0eZtNSe17weK0ELUdY7nYqa
cfFS5wd50h1x9Nwle7473c75KHEPkELVsaEPERERUabaeUTea+6YiXmz10r1
7tJv2h1G1cleIqJk6gr0HvcMdnRTiIiIKKf78VekDkdt4hMdwzmZWWrJJszG
/GO7o9tBREREOZ17ALZ6oVxizU6p3YubNxEREVHm0rDxbjOp0OG2J1y8IkfP
ONFm5UdOS/sRWBa9l/WRiIiIiJzVhcvysrdUC7Dx1KUr0vxn1Lop7IFz/IZh
2YhjbdqPFeuPVJS8rqgiHhfv4PYQERERkU17w1DQxruP9fHoGCnjJ//3lTxY
Xh6qIHlcJJ8r1gftOZ7BN1qwHuUZ+0zBle/oRITsOJy8ubZBI+6bjdAkvT3s
Is/WlLBzGWwMEREREWWq0D3yTA1pOsD6eOshyHIPlEOcK+YlxevKY5UlvxuW
CB07gwpFI+aiDE6DvjJzNbpDw8+n9y5BC+WpakiqeV3F56f0zoyJRZfpc57y
hDtmih44mfxU4/54+SMV0e/6Sn20KsLRPatEREREZNPijRgN10iZxGJBfUvN
hJowNRZW745R6fhbMj9USreRIp7i1kW+bCcFKiGFauozCl1qCl25zbzC1eup
1pUcPoXQ+FAFXFBvhaqb3aF6jqZTY8j72g3UBr9xE32q+Vzxvg+Wx/X1vYw9
tbceRJM08b7qgw5VfUeNoNxum4iIiMgZXImRLQdQKfG7CdJsoNTogZ5JTXQv
e6Mee4eRMnS2hKxGnNOMpzfNcmcvJr9cA+HM1ciZGvY0AT5TQ95ohH//XQ43
vYLacRgHxy0wX7Jiq5Tzx/n6Lno1/feRijLkNzy1artU6Sq9J+O+xtq3GmMz
Ss2uxpnFvHBHE+nBcJxQrw8u8lhldIRqUtW2tQzM0o+OiIiIiGyKiELHYGEP
c+A7nyv+1ayo+VDvv+SNjsru42X8IqQ7DXIPVbAxtD1nrRSsgrynmfB0JI70
n26GzM/b4qHGy0cry1edzPOrd0du1Ez4eFXpNQk9n3rxJomj813HoSX6vhev
SItBmGNpDKnrmbPWoHqntk0bNnkZliA9Xxtv+uE30m443ksvuH5Pln1yRERE
RHRbZy9iNuOLdTChUdOaBs6GfZEMNWpqxjsTaY4+//w/c1xbA+GKrdYXce2M
sPeEu2zch3Co6v9onv9mI/PlGjL/2wL3z13CYLoGQo2OFTrIhr1mR6VLRzzb
bxp6NTVS7jyC8XeNlHkSO0i1VWr5FjRM36vTaPk9FC/U9ujFvx5khsx1f2fR
50ZERERE6bt2Q6Kuptphp91wJMbR85OP1OyBFKehsYin9W6Pl65gKboGP6PT
Uuml3miEPk+9Fa+LhxodNRy+1RjPLlhvTsXUfDhrDVayF6yCJPlZazw7c7XZ
m6oZ8jUfcxD82Zpy6gKe3XMc/Zz6XhpiO45CHNV27guTur3RPL1s0hRQIiIi
InI2Dfqis1ETYBINjf8qi8hXtr31yVsOICVq3vtugnlkw16McRs1hZ6vjZU7
vSYhOupFVNthZl59wQt5df8JvFzz4aet8Oyq7eif1JODFyNAGtGx2UDzykdO
46Be1uM7dLrqnZe85VYCpnH+O3FF0tLNmfrBEBEREVHGaWYrVD15J+sEC6Kd
ETIDgqxP/u1PczKn3jG0G46gaORMI2Tqq/QEY+j8/Ra41IPl0TuqDpxMFTL/
2o2B9byuWG2koVHP1PuaYw3HziD9arasFoDl5Hp941Uf+yJk6sOFGzLzcyEi
IiKi+1DGD0u5dxw2H566gI5KI2QuWG998pjfkQM1GYYmLrq5dgMFhR5LnIGp
ryrmJTfjMbStIfM/TXCCkVc1VU5aiod7w3CyPjT6SNfuMmdadh2Ht9Mzn62J
vkrDkdNmyKzbG4PpmirdAzBr9AUvhEx9u99DM//TISIiIqIMeb8F5l4eCjcf
rtmJjkcjGZ6IsD55xFxkwoJVZPshPBw+B6GxeF1Mm9TU93LicLbvYITMD75G
BH34n/5J41IaZfX8PC5S63s8XLTR7Bdt3B+5Uc80lgsZDoYjo2q2bD9CSjbA
He8+qJapEVcTqb5w7l+Z/dkQERERUUYkWDB5smgtLAM3DJ1t5j0NdUmdikl+
+xMZT2/Lt2CLn1fqIzT6j8RNk+TrDXGOBki9/4Wf7D5q9k8+Vc2szb7tEM7X
K3cajYfBi5Ew9YhXL/NNjVXnhv0nMI6vz/66HN2tGmI/aSnl/REvNQDrC2eu
zuyPh4iIiIgyIjYOQfElb2wTaWgVaOY9zXJpHTuDvXs0Q37kiwHxApXk7abY
tWfgDCRPY86kBkI9QXOjJlLjUvoWhh2HMQKur5q6Ag8HheBdiniiZpFRaTPl
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
SzPpAyAiIiIi+9PEWKKevNfcxlOb9iMBvuaDfsUClaTzPzuSz/0LsdDocizv
n+ol77dA56eeYFi7C/lQs6jePm+LIxomjfmZL3hhhdGFy+Zo+NMe6K7UIKpp
VlPodxPMK4SsxhUeq4xLEREREVF2YbGgiJAmPWNpeUrjFqAXsYyfNBmAkJlU
wsizp7lCPG3I1LD6hLss22I+XLPT7MbUMzuOkhs3UbnIeFihg3mOWxekSmP7
nm/HImfqe01cYj7bbxrC55PumMxJRERERNlIy0CkuKTOwyRVuqILses4rCvX
BPjhNzh4MgI5MJ8rBrVTZkWD5tVC1bHex7BgPSKlUTlzfihW9xhj5ZpRgxeb
5+w4jP7PIp7i8xNSqFcvXH/zP3Xg2w7DyXrEar8hIiIiInJym/YjxZWoJ0dO
Jx9cvBFD2EVrYWamnlDYAw93H5WvB6GnUY/rv3lcrCdzfuGHuLj/hPlQU6Wx
PujxqvJ7KC7yQOJMztd8MD8zid4/fhYljFRElPSenFwks+kABNr/NEGPKxER
ERFlL00GYJj7w2+wHvxMpExYjCXneqTdcDwbF49BcyNbalwsWAXzMwtVR2em
W5dU12k2EMXVI6PNhw37miHTqKJpbCuZ302mLLvbhnUdh3ds2PfOZxIRERGR
s4m6ii11nnRHd+VznrjzVDVsL3491jxh60F0J2re0+N1fsBe5281xkC2Z89U
15m5GuvNkyoaffA1CrYbOdNY/pPXFX2hd98teShc/Ecmd40SERERUfaiubHP
FFRBf7cZAufkZclj1oaLV7DWe9kWrAqXxE1/nqkhrQJTnRMXL3PWJj/UE4yQ
qXE0vxsedh5jfVkiIiIiyg3usptR8+TM1di4/HaiY5AtNWQ+WB7TLCcttbGA
nYiIiIjonmzchxmYGjIfdpGwc45uDRERERHlCIGzMFCuIbNgleRZmkRERERE
96NmDyRMvb1Yx9FNISIiIqKcokQ9M2R+2c7RTSEiIiKiHMFiwSZBRshsM9TR
rSEiIiKiHCEyGvsBGfWLxi9ydGuIiIiIKEfYdRQ7m2vIfKCcbDng6NYQERER
UY5wOlKer43OzOJ1WX2diIiIiOzmj+3YeXzrQUe3g4iIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiMgR/h/x7zmn
    "], {{0, 182.88}, {638.64, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{100, 100}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{638.64, 182.88},
  PlotRange->{{0, 638.64}, {
    0, 182.88}}]], \
"Input",ExpressionUUID->"000beeed-11c5-4c0b-bbec-b164503e9b49"]], "Text",
 CellChangeTimes->{{3.879453325694973*^9, 
  3.879453345518805*^9}},ExpressionUUID->"5d17ed0e-23ee-4f74-bfa3-\
542c23aff77f"],

Cell["\<\
If the net is a digraph without cycles, then it is a feedforward neural \
network.  If cycles are present then one has a recurrent neural network (RNN).\
\>", "Text",
 CellChangeTimes->{{3.879453391228518*^9, 
  3.8794534186037188`*^9}},ExpressionUUID->"61ce617e-b9d9-4ff9-8d24-\
aecf60cfb29c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Linear Regression as a Neural Net"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.879436487693315*^9, 3.879436488001227*^9}, {3.879436541352969*^9, 
   3.879436549009787*^9}, {3.8794366289137173`*^9, 
   3.8794366345237913`*^9}},ExpressionUUID->"6e8bc7ff-95d7-4053-aaa9-\
f3520f71cc5c"],

Cell[TextData[{
 "In ",
 StyleBox["Part 2: Generalized Linear Models",
  FontSlant->"Italic"],
 ", we saw that the cost function for a linear model is the chi-squared \
function\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        SubscriptBox["y", "n"], "}"}], "|", 
       RowBox[{"{", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold",
          FontSlant->"Plain"], "n"], "}"}]}], ";", 
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"]}], ")"}], "=", 
    RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], 
      RowBox[{"n", "=", "1"}], "N"], "\[InvisibleSpace]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["y", "n"], "-", 
        RowBox[{
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "\[CenterDot]", 
         SubscriptBox[
          StyleBox["x",
           FontWeight->"Bold",
           FontSlant->"Plain"], "n"]}]}], ")"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"c34c2fc6-03a3-44ba-afb6-718acbded8b7"],
 "\nand that the mean and mode are both\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold",
      FontSlant->"Plain"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "n"]}]}], TraditionalForm]],ExpressionUUID->
  "359382b1-0662-4bdd-978e-3e431016ddca"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "mp"], "=", 
    RowBox[{
     StyleBox["w",
      FontWeight->"Bold",
      FontSlant->"Plain"], "\[CenterDot]", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "n"]}]}], TraditionalForm]],ExpressionUUID->
  "d7ef6755-1cd2-48e3-b6cf-bd63be58a6da"],
 ".\nWe can represent this by the net below."
}], "Text",
 CellChangeTimes->{{3.8794366385279016`*^9, 3.879436638635118*^9}, {
  3.879439003524311*^9, 3.879439107228376*^9}, {3.8794398087481318`*^9, 
  3.879439816699861*^9}, {3.879455864269972*^9, 
  3.879455865997962*^9}},ExpressionUUID->"842431dd-7b98-499b-bdb9-\
e571a74eaafb"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yVdOdjXeVwxq7wPvm7fI591pEwp5H2ozr1Tk3DPJ+3ZnzAr2fFs2ub43C/C8
dE+YtDuSBx2D69OXjzqZv4nfg3CqGngfchHfF6tBlhCC1X2chaH1oOtCxEtv
Y2PH0BrQOQEc4Fyuab7iPLNDwrzveCe/UU413lcMWncPNVkWK/I55nPE9GEv
4v/y94PPd5kC52J/ScT3bc6/sYfIlcn1vVmg+8Ec27g6Xd8B7Gs9iXa/Q6tb
l2mtdLwXYQxAgn1tVyg/PzHtXhiSgNpBwPs2tbFjaEzoXhq7iq8DPEfp+UE/
gw17kPj9W58QX5sSNfIeS5j3PetkkpOxTnYz3lcMqnPe8/NKp89gt/uBvO8a
2oEO5xz/inTaH1jte6i3vQj/xvuBnODl2lufBTtluVQjQsfpUeLro0/i77tg
5dxP3w3YCn8Sb89PuL/tCLUFHZ52LwxJQGsqgPetZ2PH0JhQnvAquRv8OkdI
0Tp76iO8X3wM0cHia8LNyL/fSJD39aJ/F7zvFyd9jfcVg/522GPjhLzja4uv
Z406fdgPfvrIZyeT312R1w7sgIP97545for4fI9kb6OhoXsp79u4zyCzHzbq
L4Z7YN9dnvfp58vQxosYwXursxMaKofuG7lP2r0wJAGNAwHv62djp5mRqW8L
Xyb2QGihWGe9t0U5939GnX9bLi/InAtbH3IFj8zOB8ECtP0NSuSZeFvf6k5G
k/d96KSb8b58ZH7HNWl7fSbv84vI7bB/2wx5n8HudwZ/2yV5bAnaie7NOxf7
IT9FfpDY3TQ2dKxs39j3n9lr7xfa/H4pPQ9lal4+SM73Pecvaez7bFbounm7
tHthSAJqIwfvW8HGTjNCdR78oAPFx78PE+9De9zPi62AnNrGy9PGgzniJm/P
yzkXNgTUcovU8wg2ER9LdE3V7zj4W+djSztZP8PrPO872sl4JxOd3F3dRdoB
ysHwu8zN3xGcBHm6/SPnYA+3pYp8Xzjn7yMZ30RwAH/X4zr/rsp7rmxfTqC5
Dhs29r1nxjTyOiZSHinD+7YSbw+Gj/eG9v19uwJaT6nMHoqG5gT0rvK+JWz8
NCN0zyv4Nb+hPWtL8Xa/2aSp92hSfQ4bD+oM9cj7bDXyW9TyPbq07tfPzqdt
YMcaeN8pTlbKO/aqk6+dzEfOB7mHtj5wvyOqu0irQvcCQpwd9tKYOfd3Uh/t
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
4+4jr36FPBv2VcSFIJYAtRwQX41YPawLYDdFfQTECN9Fbgf/Qd7aUdfysPeh
lleL75NmMMQJ1VvgPHl5LaoPT+fYekqyPiGMeazFEMu8WZ6+Rf4ubARnJK//
tE4GYm64L47OYQXsebqnB2rILFiiLeE9ndf4etvQvoid9/UozNX0b9Qphm1/
/dp4X9Hz4Ecdx/k/xljFnGvAxnxK5q8gmN3JGCdT3n47CJ57Lpji/vsbJ3Pw
jL518L6/kscifnjV8ufXA80hmYU8a1l/Pc2PRs3OncmTwNdhZz9WsjUiUWMI
sYfYWyesTYBaWdHaWPjv53k8lBf5O72WJ6+Ts73Gf0N5ncfwHcReIx4SPvXL
yeWwhoBvCblyi/NeSsR+6PF/8X15L++zaTjXwNfL2qGGtkOHzOtkbieiIvzX
ywL6uaEAdN0HXXBO5BgEMeSw68Hunrfnr9a/xbzwUHa8ac0M6AnwwXm7gPfB
TvkmdSHqQaCmTJ/arqv3C5040HifoXEB23tsbWHclKhxo/P2N5KT76DnovYT
7DiIn0C8/V3kETj/SfKLPcXbkaRz+5qDDxvNSI5ffPdB6hL8+x/qnLslWwPq
fh5/gFwC/8IniLUfbGx5/FFrCRwbuc+ZP/wwePC334LJL70UTHnlFeV9k5xc
yXOQ879Sjc/xNMnmsT9PnoJje4nnZLCbLU2eg2cHzoZ46Rn4/MPa0N2pZ3EO
8pFR/wk1FC7jM8Z9D+I1XuDzfobPHJ/9l88Megzc+lp+F/7TU/3zUE6IPeWQ
9wJbHmIXYbObnTp0evYjlOn8s1W74Jw8t494296SvK+l2GfYAxCLBy7XI3Jf
Bd6Bip+t8N6QM/NW3mfg6qgHBN73Tm2/naGp0SGLOPmU0ieP9+3s5HMnD6fZ
xcaFji3U6cMabfvI8WOpM6Yt8d11JVMDT2vYoS7eSbWP82qgNsjH+N/Q88vV
0RYEeYanSyL7dRgMcSDOvI6SNVww3yOGYkju+Ne4zUHifZrh/iuTCgh4EGoz
o8bagrntK4f7jeMXYw518R4gb0FcF2q4P01OAwntUtBP8EuAJ95LPgAb00f8
7HDJ1pdGDclD+N/gNHN/8UXQ1/G8n+6/P5gyeHAwxXHAKY4LjvrTn3RPc+is
PaWmvTZ0/Qte8i31KNqBv+N23s9TkXuJyiD++7Rka9bjXp/lMwDXg50O61lw
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
9ztJDt58gmx31FhZ7db9xPaNSQha9/6YEp/Dr4va/tumz7d0frJ8XkMM0Dz9
vuXPq6itApL57GzyvrcKfrUu34T6Ob7ytkT1g1TYt2r8IsonLy91XoTXzenk
u2hur5NRTlatkPdB14TxfY+UOdlgMNSDDnmMMX4P0q/7LI+/Jj539336XMH7
hkp+nRWf7wvb3f20GZa7HuRfjOXbrNP5/vMd2Jcfxdd2MSQCtaHOX+Jz7B/0
lGR86WlCa1jvnX4/DM0P3WO6SK5C1W2JX5fqHq8bit93B/GDqL1yg/i6zAnU
ZdJ6xd+w/a06j4t6+F6mDdQhOLPc+RHud5yTiRHeh5i//zmZqjz3y8Qrgvc9
W2EHC7WBXFWrQWcwlEKHXCi+fgq432jN4fDHB5H3/cK4PsT3/beTTa9D1uH3
4S+es0LehxqByCNeoYDtEHm+d4iPMwTnnM54XxLQOntlapjpev/qxuBamlu4
Q2P0xdDc0Hz+OrmBcgxwPcQah3uf3Uqb9LK+fa2D/nF8HDPn+uCV2M8Mey+s
lxDvO8/7AyqKz5vqwAODOb/9Nvh8+PDg948+CoJ33w2mvP56MOHsszX+EDE6
f2F7sIOi1sKNfEbYAxf1Pz8l73u3wg7m92FV8Xu1zVT+XIOhjdEhu9G/O55c
bGkef4C8bwI5Hz4/tIBf9kDyxU/pNy53PSF/xDWvpH94BtoNt6D98VcnP7Ht
Cmu5GCqH1hTEPkrTlzgHgjqDuzUG19IaYts0Rl8MzQ3UU6/5u5ClyFlQjxP7
xiLPvHdnXqVrpieq41oV92M+8r6fyDML9bOIVNR+N9orUbezr/j6p2vTtog4
2zP4+RN8DuBsX00/fTBijjmCKbPNFgSzzhoEM88cBD17qq8bdknEIqLuzLgC
Mpacb4p43/XS1T0zvTc878dNRxgMZdAhizNuD9zuf4L9OfzxqyP+3d/J05Ys
wPuupW3uf1XE98FG+BltiagZg/jCL+jX/ZWfHSzhXiGGGKH6EbUMVyhz3uxc
O/dpDD2qvG+7xuhLUsjMzeuTVzxNWwjyECJ7gRnqA3hSTd/Db4A679h/EXvJ
ov7nVMU5le51s1Myv5mOzy/E76U4X2W8r6r2LycX+4n8EvsyYk+vkeRlY8nh
QhlLGeO43+RevYIAMtNMQTDLLEHgjuEz1DKEb3oYeSLqNA/mv8jlHUHeBx5Y
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
y0a0/tomaWgcWAz7tBmShON2WzoZm8f9vnQyWxHetz5531o2PgwGIMOP4CtF
/MM7tB1MIufrTzsb7H3wJY3iOagbcYt4Xyx44unkH2F7mIMWIUcEH3mZnA/z
11blx19OvxZ3spH4GiMz13h/wn6s7GQ/8XGHA8XbIdeQgrULmwF6X4hvXLf2
/mu+zcPSyYfYDAi2E19rPO2OJAT9fR/guLkk9z71szvI+7433lcvlB9clHYv
DKVBu96jkbouAfM9Li3C+zYm7+tn48NgANQ+h3kF8UNjJLsfG2x7O/Ocucnz
fhJvsxtD+wJ4Iexx25OfhW1GBbzvn5Ktv/yqk2nSHX+ZvvUk54NP+EzxubCH
iPedpZjTmnlu3fKeZaFz4cM4pvjnFV0LNtnjmlMn6m+3a3P2vRLo7/M611sH
5fE+jDnU15zMsWi8ry6ovfu8tHthKA3yvsWc/Bp03ru3QHyy+poQG7uCjQ+D
AVBb0VjOHRDY9VDraMu887px3CBe7gzyo5WzfK+THQIyk2icdCan4ye/pm4k
dLIH4h5RNxD2ywtoS6I9MLHr4xmuyN8C+9K9xPkcfnL4tV8Qb9eBT69v5LvT
kavOVbs+w/4rugfe4s2pEzXus4Xz9DK8D3lVu+etrWADh50PdvSvjPfVC12/
npF2LwylEYn1C/fujdZ1KbB3r/p3sE/bwjY+DAYg2NzJu+Lte8NE96esd497
nZMQBziUcxLsh7D33UO+iHisk8X7e2do3LGY8Qsf6O0Awfni8x+Q9xeDT1Sf
E3zXj9Je8wsFvwViGb/lvP6z+Do4Izi/gxsijxN16Heusw/4ne7uzN2bBeqr
X605+14J9HfB2gn2vqckE8Opdt73+Y6AE37JdVbaHW5i/H97ZwImRXW14csO
soMgsiM7grtgQEXjjhsaIxpRQQXERKNRZFGDogaNiuACNHFBERQBF4z5Nb8o
4oYLxsQVEqPyq/hHRRRFNrk559zTMzU93dM13TVdU9Xf+zzfA91dXX2ru6fq
63PvOUfyoq4MexQgO7a0d+/HKX08uHfvyWVr+tnxpA+M9PDG3wcAeg3heVyu
e9IomL8Lqff8sSmtAbNDvd9mU9pvjf/lemQRmqOTGrlHaIyJ50av0ts5rA2U
nloLjMtX4fdhpe7zLOPWoXQ3bn0k+7tDjIuzLtXr+zfqqWc5D5rz8bASptz8
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
Vt+3NGV/vP7wc13zNzEP3zfKreUB0UZyt4/BuRwEg61vXP+esAcCfCH1WTmn
fy7pL6TnNWf3dtKvnN+T7bprvK8zPlsA0pAwx1fC961Wz8f62iT7fJT1fQt1
3R/n5A4pt2+X43tHyn1cA/oL43JF+Pln67gSOv/Lc7175eH7xiAnJA7YS0hH
4lwOgsM2IjUIexTAD3Zn0h4a52tO6mtc78Y/kVZoLsdo0iDSC247AEA5/Po+
V/OF/ZdV37eqjOdz29Q2rn4LzwF/Reqcxvf1Jl2bch/P516jsb0Nqm/U831b
srYvd993QelvQRBdSvrshT0QEDtkvrCJkZ5tto/6i71Uu5N6knYjdSTtSmrt
0S6q1ilqlaLWOgfZVtVO98f77abzzrvra+9jXO+hgaTB+r0/3rhaVlyvdKSe
1y4mXU66yrgclT+Q/kiaQZpJmkO627g6haz7SfNI842rc5LUgx7N123m6nN5
H/RbXXKfb9LX4Rr53ON8uHFrbg/V8fJ71179dC0TeI0tm/L/EnEssIXez75v
Ec4TAGTA5dL62a6Bzrcmfd+NaWJ9g3S+ln3f2yVr/8ru5zSJ56V/jQOMqxXz
FOll49YTTtTXzsf3/Qbxvjhgx+n1JeyBgFggtT/ZV91Mepz0V9Iy0v/qv89p
3Ogl43o/VLVe8uhFfW2OYy0nPavjeor0Zx1vskbdXNJd6vNuI91CuoFEv6/t
ZON6VnLfsonq1ziX5dIKdJl6yQn63GvUT96k3m+O+sIlpCeNi7M973mfVuq/
L+j7yON9yLi43DTjeqXzmmvuvTPEOF+7n3HxO67Hn/TXbd152zY0JXVaM36W
HYzzzKxf6H4L9D0CIGK4fN4mPrbjmi/b1fexrzs4JQeDtUjneDnn99a0Xs3V
ds5jzjYXZF1Y60K+IqgK5Fp0MM7nIH9sPdI96pXONS6+xvE4XvOna4/Fa3D+
AMcBW6kPYX/RSb1Jdx/iOF5XVRd9bkcV76ud7rslqalxcbKddBy1TZm69NXh
e5/a/7KM+L1qYdy6Oo5ZctztRPV4/Ld7nfpS7o33hPrF5cZ5XPaJr5Je8+h1
1Ur1j6P1Mwjt6AGIBW4uto+P7foal9PBvo/za5umeL4DdG52m67965dmH5w/
fLfhXN7C+r6L4fvigMQfDsR5H+SP+JQG5b0LqFrS+sWaGtPbWX1wJ/XLvY2r
wfUz9ZAtQh06AHHBebbstZsTZqjO71r1dV7P103X9W1VLc2wjz4a7yswkg+w
c6FfFQSN+L5BuD4DAAAAeZAwA334vvM9vu9zjfftTrqC9JnG+XgeeJ3EBtPv
YwRpcAi+j9erNC/0q4Kgge8DAAAA8iZhepIqznl3fTiS87zJudyNGt9L9u/g
PNyxFeyD+/LWDsH3jXdrdEC0kXXpA+H7AAAAgDxwc7W9smzTQuN8P3l83k+q
rfrYmAqez/HBIQGP3CeSP4ZaTpFHPkfU4AcAAADyJWHa+Zjr5TotK42rzcd1
9bjO8r+N66/bu8LnJ0wHifWFgtQhqJd9O1C9Ed83AL4PAAAAyBNXp8VPPZfa
msexN2k3Ut0yOR7pn8NqX/j53ST2elcTAUSbpO8DAAAAQN5wzC+WSM3RmmGP
AuQLfB8AAAAQKNnyOyKJvRFzg3FAelHtF/YoAAAAgNjgairXD3sYwSJ9mMIe
BMgb6Tm1Z9ijAAAAAEB1Br4vHkifp+y9ZQAAAABQxEif8rAHAfJGes33CHsU
AAAAAKjOwPfFA3sTabewRwEAAACA6gx8Xzywt5Lahj0KAAAAAFRn4Pvigb2d
1CLsUQAAAACgOgPfFw/sTFKjsEcBAAAAgOoMfF88sLPRdwUAAAAAFePH9/Hj
3MOX5xFtZ1IvVzNE1E3vR8+PULGzSDXCHgUAAAAAqjP2TtIppF+TJpKmaA+P
6aTb1E/M1n/v0PtuUU3X++8jzSPN1W2n6X7Gk8aSziAdSzrQ9ZSwfUndSR1I
rd38pK3lfIt4zLDflAgC3wcAAACAbNhrSM01nleX1EB92E6khurHjI+YYA19
XidSP9IBpBNIo0iXaR+x69UTsje8l/QA6UHSQ6SHSQtVfHuBeknebo7601u1
Th17yit0vxeSziWdRjqaNIi0t8Yk2Ve21GOqVYh3MzxkfR98HwAAAAAqwF5S
OE9kKxL7y/qkJhoD7KAxQY4N7kXqTzqIdATpRNJw0hjSb0kTSFdrnJJjkneR
7ldPuYi0hPSI/rtIfSV7yntICX0O+9Gpup+J+r6MJp1OGkI6mDTASC8029u4
+e0upI461qTap5H38Y4ZntNGPWpj9eA1/fntkvd2RhV8YAAAAACIFeJBwh5E
QGT0lDU05sdxzV3Vr/XWuOD+pIGkw4ybi+a44Sj1k5M0tnizxtPYT/Kc9gJT
GqNkLfZoUYoW+xT70kdJj6uWkh5Tr+qNgd6nfpXHkoyD7mZcHDTmMU0AAAAA
gLhQEvdMetS26ul21zjjPsatj+yv2pe0B6mOxiKRWwMAAADkwH8BfStHNw==

    "], {{0, 222.72215973003375`}, {478.44019497562806`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{478.44019497562806`, 222.72215973003375`},
  PlotRange->{{0, 478.44019497562806`}, {
    0, 222.72215973003375`}}]], \
"Input",ExpressionUUID->"49e95769-6e60-4706-b201-cd552f8fe8a8"]], "Text",
 CellChangeTimes->{
  3.879455861074877*^9, {3.879635354721203*^9, 3.879635363514203*^9}, 
   3.879635453843635*^9},ExpressionUUID->"f359316c-7fc4-4e7a-aea9-\
785a25ff01fe"],

Cell["\<\
In fact, we can train the net by backpropagation.  (But pointless since there \
is analytic solution)\
\>", "Text",
 CellChangeTimes->{{3.879439129467409*^9, 
  3.87943914394234*^9}},ExpressionUUID->"54c4be78-7601-4559-9331-\
d5701f81cca8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Logistic Regression as a Neural Net: The Single-Layer Perceptron (SLP)"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.879436487693315*^9, 3.879436488001227*^9}, {3.879436541352969*^9, 
   3.879436549009787*^9}, {3.879451967977507*^9, 
   3.8794519794714317`*^9}},ExpressionUUID->"eddacdf0-9c89-4d85-bd07-\
b1c5684bebd3"],

Cell["\<\
https://en.wikipedia.org/wiki/Multilayer_perceptron#Activation_function\
\>", "Text",
 CellChangeTimes->{{3.8794395135270977`*^9, 
  3.8794395177078648`*^9}},ExpressionUUID->"271bdbce-c212-4793-b07f-\
422a363fc79d"],

Cell[TextData[{
 "In ",
 StyleBox["Part 2: Generalized Linear Models",
  FontSlant->"Italic"],
 ", we saw that the cost function for a Bernoulli GLM (i.e., for logistic \
regression) is\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        SubscriptBox["y", "n"], "}"}], "|", 
       RowBox[{"{", 
        SubscriptBox[
         StyleBox["x",
          FontWeight->"Bold",
          FontSlant->"Plain"], "n"], "}"}]}], ";", 
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"]}], ")"}], "=", 
    RowBox[{
     UnderoverscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], 
      RowBox[{"n", "=", "1"}], "N"], "\[InvisibleSpace] ", 
     RowBox[{"f", "(", 
      RowBox[{
       SubscriptBox["y", "n"], "|", 
       SubscriptBox["Y", "n"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "3a592773-d9b4-447d-85ac-4451c4ec0540"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"y", "|", "Y"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"1", "+", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "+", "Y"}]]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"1", "-", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "-", "Y"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "47704d20-7ea2-4db1-97ea-f29519de2dd8"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "n"], "=", 
    RowBox[{"Y", "(", 
     SubscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "n"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "3b24ab12-46b8-44e1-8a23-6de540f4d3a6"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Y", "(", 
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], ")"}], "=", 
    RowBox[{"tanh", 
     FractionBox[
      RowBox[{
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "\[CenterDot]", 
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"]}], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "93d85989-03ab-43a3-b8dc-47b2d1c68084"],
 ".\nAlso,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Y", "mp"], "(", 
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], ")"}], "=", 
    RowBox[{"sgn", "(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"], "\[CenterDot]", 
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "ca3295d5-902f-44b0-8cc0-7c88699d57dd"],
 ".\nWe can represent this Bernoulli GLM by a single-layer perceptron (SLP).  \
A SLP is a neural network that takes a ",
 StyleBox["D",
  FontSlant->"Italic"],
 "-dimensional input vector ",
 StyleBox["x",
  FontWeight->"Bold"],
 ", feeds it into a linear layer with one output, and feeds that output into \
a nonlinear function ",
 StyleBox["g",
  FontSlant->"Italic"],
 " called the ",
 StyleBox["activation function",
  FontSlant->"Italic"],
 ".  (This is supposed to mimic neurons in a real brain.)  For training \
purposes, the output of the SLP is fed into a loss function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " to compare it with the training outputs.  If we choose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "u", ")"}], "=", 
    RowBox[{"tanh", " ", 
     FractionBox["u", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "c9902d3c-3141-4957-b892-fbaafe83f91f"],
 " and the binary cross-entropy (BCE) loss function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"y", "|", "Y"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"1", "+", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "+", "Y"}]]}], "+", 
     RowBox[{
      FractionBox[
       RowBox[{"1", "-", "y"}], "2"], "ln", 
      FractionBox["2", 
       RowBox[{"1", "-", "Y"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "2ebaef16-c02b-406b-9e44-c212ab042e98"],
 ", the resulting neural network is equivalent to a Bernoulli GLM."
}], "Text",
 CellChangeTimes->{{3.8794366385279016`*^9, 3.879436638635118*^9}, {
  3.879439003524311*^9, 3.879439107228376*^9}, {3.8794396827459583`*^9, 
  3.879439887316127*^9}, {3.8794399226342077`*^9, 3.879439944737238*^9}, {
  3.879440032470443*^9, 3.879440057526783*^9}, {3.87944047277485*^9, 
  3.879440587172634*^9}, {3.879455780738887*^9, 3.879455795193597*^9}, {
  3.879456328298169*^9, 3.879456363599825*^9}, {3.8796360969371433`*^9, 
  3.8796360978067627`*^9}},ExpressionUUID->"11ed0ffa-a738-43f7-912b-\
391c8ad1c916"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qe4vFV1LnCvAopYMKJiosRGYtB4rYmJJsaoQWKvXMVuADUGDYJA7IkF
FAgaYlDB0ImIwYIKIqLYW2xY0JgoKir2BoplX3+znyWbjzlzZs6ZPuv1Gc+f
U6Z+e+31rvdda9/4cU954B5XvMIVrvC0q/z6/x742P3uuvfejz3gQdv++j8e
stfTnrjnXrv/zS577bP7nrvvfcfHXenX37zV/7nCFd7w639s8et/l0QikUgk
EolEIpFIJBYAV0gOm0gkEolEIpFIJBKJBUFy2EQikUgkEolEIpFILAqSwyYS
iUQikUgkEolEYlGQHDaRSCQSiUQikUgkEouC5LCJH/6wlPe/v5RPfaqUiy6a
9bNJJBKJRCKRSCQSibWRHDbxgQ+U8uhHl/LMZ5byv/87+t//9KeVB//85+N+
ZolEIpFIJBKJRCJxWSSHTZxwQim3v33lsZ/73Gh/+8tflvKxj5Vy8smlfOEL
pfziFxN5iolEIpFIJBKJRCLRQ3LYxJFHlnLrW5fyt39byhe/ONrf/uxnpZx0
Uim7717KGWeUcvHFk3mOiUQikUgkEolEIgHJYRNHHFHKH/5hKU996uhe4l/9
qpRPf7qUt7yllC99qeqyiUQikUgkEolEIjEpJIdNvOxlpdziFqXsu28p558/
62eTSCQSiUQikUgkEmsjOWziJS8p5eY3L+VZzyrlggtm/Ww2BvovX/OwOrC+
3ezdTSQS8ww+l0QikUjMHpdcUspPfrJ5v+F3vlPnoKZvcfNIDpt47nNLudnN
SnnRi0q58MLJPQ6O+fnPl/Lud9ezfDzWONbwd79byrveVftyeZq//OU6K7kf
pxWDPvvZUt785lJe//o6k/l739v8c0gkEolxIvlrIpFIzA8++clS3v72zeeM
xx1X88/vf388z2vZQF8yIxZHWE9rSg6bePrTS7nRjUo5/PDJrSmznt7xjlKe
+MRS7nSnUv7yL+vjffObg/9GvUq8wEf7IWZK/cVflPI7v1PKTjuV8g//UMqp
p5byn/9ZZ1TFGsBncda/+Zv6e3j7X/91KSeeWHlwIpFIJBKJRCLRxSGH1Lkx
//M/G78Ptcldd60zVLN3rz+cj0Jbe9vbqu49CMlhVxv43ZOeVMrv/m6tDV10
0fjvn2cCf73//Uu57W1LedjDSvnjPy7lj/6o6qFdfoprqsG89rWl/PM/135d
Z/d86EP1vlp8/OOl3Oc+pVz72nUu1S1vWcqOO9avN71pnVeFl1sT731vPT9o
hx1KufOdS3nEI0rZbbfK4c87b7yvO5FIJBKJRCKxHHjKU6oGshkO+6Mf1Zz1
aU8r5WtfG99zWyYcdlgpT3hCKWeeuT4nSQ672qBxPvKRVYflbdhIj6hZxjzC
/eolX/lKKa95TSkPelCdG/XMZ1Zt9J/+qZQ/+IPag9tdx+Ycq3X96Z+W8ld/
Vco971k554MfXL3C8Tie6wtfWMqNb1zvC9d95Surxnv1q5ey5Zb1cb71rVKe
//yqufpd5wjRbvkU1MGcb5t+4kQikUgkEonFA31Dr9ikQD993ONKeexjN8dh
/e3d717Ks5892Ic4j/jqV0v5r/+qPHxS0AeoTvC855XyiU+s7cEMJIddbdAf
73e/Un7v92rNY1SIGQcfXLVMWmcXZ51Vyj3uUcr1r1/9E/oJ4I1vrBxVPYqW
GsAr3detblX1YTqt53XQQfX3zU52hg/oe8WNabB+V2wQZ9S3rnWtUrbaqtZz
6LD771/11+22K2W//Sq3TiQSiUQikUgsNk47reazP//58H+D9+pZG2b2gFyX
d4+XbzMclh9QLsuXrFdukXDUUaUccEDVmSY1E5XGhZO84hXVj7leXSI57GpD
f/qf/3kpt799Ke95z+h/TxPdffeqk1qbXeg15fG9yU3qv0ND/dSnqi56u9vV
GU/AQ+x3+Ixpr+Y+WeN+95hjStl551Ke85xaCwL+4tvcppQb3KBqvWIR7LVX
Kde8ZilXu1opr351fUwcF6/9/d8v5a1vHS3OJRKJRCKRSCTmD/jUk59cyimn
lPLjHw/3N/JN3kN563o9l0Af1Aen/wzP2ij+4z+qFxAf7PbGzTPw/L33LuXF
L64zVId9n0cFzYqX0jwbuX5y2MQgHHlk5Zj4JI/AqOAp4K3Agc855/I/15dN
g6WXnnvupd/n4fU9Z/rolXU/OCu/8G//dil77ln9vvzB/+//Va77wAeW8s53
Xuot4EM2x+lP/qTOagLeebWyrbeu+uzrXle/J/Zc9aqlPPShpXzmM6O/zkQi
kRgHct5wIpFIjA/4qJyRZjHsXFK8Ve76gheU8o1v1J42M1f0xvXjTTQSuagc
Ve/cRnHoobWvDt8O3WURgG/rO6SP4v3jOlekC58hTQwv+Pa319ebksOuNv7x
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
+Jm8TZxt1738TUzGoeiReA+uI64Gz3H/+CEvG76kTi4X83hyQvdJK9APFXMg
7Q3ux5qXS8gV1eHH4WP1/D1PHjf5mpxV/5O4L9bwvN3nPpV/tj1Z8kC6jnq/
96S9v+i/aIHD8gK3ObVeNPqq98te4zXKvfBinDhyRzqLnw3jO6FtiI/Rkwd4
rfer9Rfbi3mI6R5iE82IzuPx4/fETLqsGSm04taryMfouZuL0j2HJJGYNfAs
HLat5eAm7T4stvXTFK1dWgEe2a83PiAPtG5pJtZPP61PfmktDutbs+7Fo67v
X0zB28S8eByPyz8hP52kL87j4ck8I2qXNKRpwOOq68nJu3UyubuaY8y8xVVx
1y22qDFLLUDNbRR9xX7Tr9awnp+oi+Sw9b23P6rT4nn8BdbionIluQFtL/oO
XCf2PeseF/IznFKeJF9Rc7eW7bM4buuhdd2KC7go7tStKSWmC7UVn9u0+so9
jpyP5rFWPVCe3PJVv6cuIV+bRb6Fa9t7urNKE4l5hJq2/M8eJM6azSDuyl30
itmP1LjVDaN277pWN+THol/IwcR03LD1/btvc331WtE/abHWhXWJ0+GpvHl0
kDhrUW+UMwTcv1yNp8XjuP/Nwt5jNnD0pHp96vlqpZ4zDcBzpa+2fWC4qtfh
ucol19uD9AZ5nJZH4pZ6t+gu8lN83vuqB01dVt4q1plL4n0cZpaKujfttJ3f
xNNMz2gf23vp8cKDqDbgv804ifzZ+++/zfW0H7f5nXoDvVitYRlmdiSWC/IE
sSR6AvpBPJu0hyx8b8NyTGuPXtzl1taevHgWZ4GKi2ZT8WNEnJwWxKxhcjZ7
kXiEw4rZszwzddE4rPitPotX+TrMWTjRg9zPh+Ua1vejl9lMLr4mMzY2Ogts
HoCTy11yDv/yAYdVX5jW9Wk/UBPszh6hWcjD1DTirEb7kzxQX7l1RAeh5U+D
R+LNaoW4qzxRTq426Dlm/1hinmEPwhFxR7kUTqp+6HqWH9AnaLP8wrHfWf/8
dDiXvC32NnxXLxUuHHV12qX6bNt/Za3KQ3C4HXaoe2D0yNJ0rXl7COBTnt84
dFjeHborLq1GbOawvTd6X/B4PBWn7M4k5EV05gQP2np5nfWPh4s/8Zppzu6b
7uocSTzVe+7xvbfuk0Ytd9RrOygfD/BZ00jb/jH31eWwauLR/yU/puXQ1um9
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
GntfgCbDP26ek3kT/k4Ngw6rTm0v1yPrcdU3fF/fXHt2e0A+oIZN512GGojX
rS4w736ExMbAM2j9TPLzjT50WqjcuIWePLUnuqd1ZiYKnwQ/Y+SmeK18lUbb
5ZXWm5oRX6G5qHSm7u9YsziuOqX6FM+KOeZqX3Ro8cD659fQU8+b7G8SiUWB
M6bUeObx/IRxg85grpS6VPQGJBKJRCKxGUyDw8pPaS98gWY2gVyXH9y8iC5v
9LtxHiRP4m1vW33H4Tm259N15cC4bsw6ltM7B4BWwx912GFVS/I48muzMlot
N8CraOZFy5EXGXiD2n5qUssJ/dv84pP0zeotN/vFja+3hT4IvsDgp+Y38eu3
Z33gmrTafud/+Bs8XM/7zW9evTTmQrVxAB/1cxzWz2i/ZjyJAdYrnwbeyp9B
g9UX389jkUjMK/R6LEPvyjBwXo8egOj7SSQSiURis5gGhwWzVGkzw8yw4h/k
j8JD5bDmDutl5ZGlD8mZabP6geTCrX+Kn1DP3OGHX+or5m/Ee9eahePv6cFd
vWlRQbvGO5ZBU05cHuay8PdO0iuub5VXl1exO+MdP6XPRs0H35WXtrM9+QBe
+cpaP+oHubu1ajYpnz8vJL9k1F1wdPOc8FvfN1/K2TlRm7HGd9ihlOtdr56r
oyewX697IpGYLexDfNO8E/vuW+dLJRLzALqHvShzpURiMTEtDks7sXcN4380
lxHn5TF2fh2fopkVPIhyY75fPXD2xZj3EjA/Ro5Nf9WT154nq9fWrd/sCvnv
Zs5wnyc4c8G8ycRyglfeWpjkzC5+PzxVLah7LqTra889B59tzWcRfayDQF9V
23J+D+3VGrRG1a/M6+M1pr06h8d6jjN+9A+Y5bfNNqVc+co1PsQZm4lEYn4g
TvFzqDOpFa+Cdzox35CH2uN4muyn8qXsvZpPyNfTU5hYC9PisDDs3EPaaeTo
5go7S8N8VLxWjx7/II3I3OK1rm0+y1Gue720yzLTlE49D+fuJSYDey4NdJIc
Vk+1nlX9et3HwRX1wo7zDG7rD5+VSzgr2lrU96pX4IADan8BzhxrWh6sN2G7
7epZ27TcUc7axrFx88xbEonJQl1K//wtblH9FLnmEoNgv9FHxndn9oJa6Dg5
jDxUT9lDH1pnA5ovaG6KOaGpx84XfO7yDXXsPMM50Q/T5LDDwiwn+55YI3+l
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
qdb0XdvyIvV1PNbP43zieA6uZT3AdAA5Da+8vm61fmvAPA75jPfENY9X85y5
dvUY87fJa/jSeMU28r7hrvKuft4H4FeWo13xivU1zMO86HnnsNBq54m14X2i
w6aXeHlB/9NPMas6hTxBfDVPoz3vEZ8VR/WLyhPUxWmj6k9tXoDzqlHSU53F
g4/jpLvuWuO03MN9uw91RPGfB0xucvrptacVjxW76bS4bpyxYG65vU/988AD
+3tirBH5kN/70Icu/b7ao5kfHttz4Gv2PX5mewE9gLbredrvEolEIjE+yI+7
Hki6lzmAcv82Xregk9Fp7UHqo2qN9oi253UQ1FDtH/aXLodOTA56eezd/N00
vdiz6TC4m3lOatuTnmcup1K/wMnwS8+HV9YNv3bjCebB0kc1iBvqv6a54uY4
uF7ImEeFp+LGcg85jRpLcFh8lK9NjkEj0F918sm1Nu+x8dK4/s2T9H3aNc6r
Zo9jx7l/9G08s1vDGQZmmMjNrAecuQs+ZZ4FHPZ+96u/P2ssAodNDAc6tX7Y
YWN3YvFgjzfPol98mTTwVfFTPNWHFFwOL8Ql1Q/5ge1N//zPNVbzT7RzJXl0
eF/MMeY/9jMzltVA7V1isfqjflj5hP3LfA85if1APyuNVew279ge59+8wZ4b
Hw0t2Kzjfj00vDD0X88zehO8LvunngXPWd1TfxSPGs5OY+b9sc/aWxZxRmIi
kUjMK+wD+kl4Y1oeKdaqeZq35Gfr9d7RynBYOpWcfhioxYrzk9b7EpcFf5O6
M76F79l3fcZ0Rv1B+mH18Exav6KruvZ4d82O3X77evNvnnRaqpxDrV1eMuh8
e1oyDmpelXp+q7UCbZM3mGeMNhvADXFoN3mQvMffeS/U5PHSyFfkQbe7XSl7
7FEfg6bAX+z9VMuRA+HbvjfqDFz1IDNM+M36aaw0Wp8NDut8q3k4jyE57PJA
zMYFsqdjeeEzPuqo2dQpxFw6pLogr0nMAVYfVBfE8cQ48Vje4XvdniTaKp+L
+Ur8wF3gq2be0ZrFez0y9hh6Lt1VfZbeK9bzztgL8GEeGnuMmM5bQwfuB/VO
/mV/E7OdPYZav1nJOPcrX1l5tBqxuqv9zX+rkZrFsJE+k0QiMX7gPuJEniW3
2LC38MeoYcrD9YGI7fYZ+Trdar09D7fQRynf50cbxDVa4Ejy/1nPpllF4GrO
OVA7xsWcMyA3kGP43rRq9a4t9XA1alomH9bzn1/9Xs5B4CHWH7Uen9ZnxMeF
w+LkXo9avVxp0Fwqfa9maeOl7Zm5vk8zcJ/hvZML4f1yoThfIXz2tFd5jL/h
aR51bof+Wnkb3t5Px6Ux06m33LLqwPPgW0gOOxxcu3LXefY06zHgP2hn7iWW
C7wb4qLPetoQ02J/cf68fV8dTs1b3kDH1E9qLxAHH/aw/nMezXPAD+Uq3dwT
r6S5ymX8O+YKuB+xWn0RV5bXeCzvh14avNc8SvwVv+03ryleA91WThSee3sT
bVYvrb0MZ1b/xId5l82xdL9mJsirEonEfEBcUO9Sm0osLuRV+IJaobnxdC/a
qxhMF9JTsp6nFH9Qy5Tb6wFZtFm2qwp5Ne2Ft0sNHH/Ck/bbr39P5jyDjim3
oJ3Kk/i51MvVYnjV8dN+2qg+Jv4xunTMGIHgjHzGwVOdIxhea3V1+WDUa+T+
ciE/461vtd5hYEYTDiyX657faD3xr5nnxCu9lrd/2kgOOxg+N3myOV80fr5C
NZV5rNnxduoLl5MnlhN4lxrzLM52wVvV/3BI8ZivmWap3sh7g8uK4Xy58hBn
zLc1xUDMLnjyk2ucbGM6/qinCVdu8xBf1Ub5e9Q4cUzxWl4j/tNofQ9/xTfV
Tds16jF47XmB9HrguzFrynuJH3ve1g5dFs/mp+FdVg/2+niN+mnHicQ44Vq1
DsZxFro1sMwak/yN/2IeZoskNgd7hXk6ek14ZdRAzUHQF9Llr/aDbny3P6gz
6vto5wgm5h/qD/IH9Ws9SfRFPUmL5nlyTXrerl08kx6Ky+J8Zm14jTy+XW4p
h5HbtP2/4raZImZDmS0VPUw4rJ5U35dn0XljLTiLkH6Aw1pL3bOT14NzHeR4
cp3uzBWz0NSY+Ii9ti7HnRVWjcOaL6PWYGYMHYfXUa2nn75KIzJngCbk+lMn
uetdp+PR3wjwB3n9oq37xPDQO6rn2Wc9beg10h9iHYi15jGJafYctUfryrow
I5LfV99uvzqg/DxmG+g5xVXFZ9/HM3ll6LTy0zZ34VFWlzdrAZ8OH4vaLd6r
p0n9Xm2SJ8j9Wr/4LI8wD7bH9Zx5dsJz76s9x/vqOXhM+ZDnELOS1VXlVTkv
LTFJyMXtSa59M8/4HDbKP+X5rlf7HN/GPPi+xg0xCYedxXyAxPjh+tcvg4Pi
tP084vIbdcZWZ6XH04jsRfTcjZ6PmZgN1ML5qfQy43zq4rjZpCEm4n2uH3GX
z0q8VKOnV3kOdNFRY7B4JD/SiySHwDn1/LqZ3UGHaPklbiu30mMaMzBpZfIZ
NXu+4Dh7SG8TvmvWlDkkbd+3v+VboDPIh0bVYc0x4emmMXTP/pEfqRHhsF5T
9+ezwipxWO+5z0htg1Yuz6a701w+/OHLnj8mdqqX8BLqYRYb5bRqhLSYeeSw
6iSTnuGWmC3MCOC78VlPE/IF8dhaoEnKF6whXhk9svhi5BviqrVllvxa68Tz
V0/Uv+SMHDEa37SXmLGBE9NKrUt5jXhvfiSdlY7q+wHvB35KizHXia/ZfiD+
qznZD/FQuq+cF4f1mFEHkCvxEuMNOLT/xol5m7w2uq55he57FrWDxOpA7q0v
UJ1I3ZS3bKPnfbiOrVn+SjX5ZTw3ZP/9q4aRcwxXB2qlMYsB7CU4gBlAdCma
3jzmZ4m1oQ6N29Ff1ajFwEnvtfgrnmpGEq+uxxdzcTick6dZ/q92vtHZRR4D
D8Y7ecX0Qnl95i7xhIXedMwx9Xtm/QY3lAu5nnmJ6WbBo3ms6bv4sNp8q1lZ
F3E+jzp/90zl9eBzkD/Jh9qeRLzCjBN5EC8xj/O89G+sCod1DdLjXSfmtLtm
1X1cIz4zOoweOnm4nJl245qjv4iN9kk5Od/hOHVO1zjtx9fN+r2s+VG9A4nF
guuS32PafnExDN/kUYkZA+K7mKfHtD0PW53I79KMB0F8NWtPD7dZSeK0GOy+
9Ljhn3JUc/zk8mIzz6/Y39Zq6Kh0JutSLdU5OLww9iK6rRwe//RY9GO9tHTW
6LXxmDir+QnivvqlGG2WAz5u1gIvUNb3E5OGa1HtRn4iV6BL0Cg2EtfVdeRh
9jBzShatt2wYWNfOj56kJiAeWff9NEF9aGKP2lf2X04e3mO9hdYEjzGvAi+P
OM9/Yz9axut8mSHvtc/ar/E18YpOud45rJsF/VKdGm+W16jP0zfxV9eTXiI5
iLxAfNns+pZ/4Kh4YFdDFUOcaaNGj1eLOWrqnovn1fae8p3QqtU51XNayIv4
scX9jdRy8GPvgdkgbQ3BWtOfThPmYd7o+bOTwKpwWJ8nbcft+ONr3qvPVU7r
OnU9+Fx4WFwX+K21pG7iWvP9cfYUubb0r8rfeQ7o9PLvtp97VKiLiN/j6KNK
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
Lu/FodzkDG5yJryXdh0clk6yHs/ipeBllotEbssrwgciN5E3zMsZVPMCngL9
3NOOaz4rWkPOeF9c+AzlnupSzoU3L8Per96LD6l36+G3d4pdvBnjmt0oPpr5
M67eHrzN85tlLjIr4GvqDbQIc+2jZu+zUzPt+orGDTm5/lP5FQ3FtaR/hGbi
OuKhVCPWX4PbTipW6dfRe+ix7Lu0l5jJw3dlTxrn/mEf79ZmxUO56KrERZ81
z3h6cYaHOj3OxeOWZwgOD7k7/to9c8ee1Pa6meXFsx21Ozmq/Ds4rD0Oh/U7
z3lO1V1mmVfyhupX5OXoztrhqZH/8onqw851tj5mxWHf+bV3ls989zPl578c
vMF95MKPlCM/e2T5wvdHb3ix5+gd5LnXv6BeiiNNglOqE8U5Vvr+7ePqKauQ
Y9m/5cZqjfJUvFTMiXhtnYo77f6P3/JimXFvrerVBZ+NHhNxx0yq7Bu5LOTu
9OlFr4skpgfr0BwR8UjPlrXFF64uzZdiHgntFS/CB9S5reFx+lHV9cwL7Z7/
txGIN/RHtbJVjQ/OJJGnqfXJ82iwetXVt8aRn4kva8UYXkkx2j4XM1I8vjMe
r3jFel3h1PxOvKetF04+z5fk2gpuu9HnKx+lq7imzbpSp+bfwWtxWXNKp8EZ
+L1WZXaDuUc4g9pEYjio+ThzQc0tfaHDA+fXX0w3HeRlpJ0410u/G+CG6mnm
PuGK4gQOwD8RM59mCXuxPka1x0MOqV4ocZsuxK8kfuGwfrYq/o7NYJIc9pe/
WjvRfttX3lbedcG7yg8vGWyuOPSTh5b7n3H/8p6vv2fjz2MK+b79GI9Vp+Q9
Nvdula4/r1X/udp7m/t673kS5Vz8ZfZ6OQv9Vs4sf+bDbs/X8/6pn+lvyLrl
ZfHyly/3PI3EeIHjmcPinEVrDd/AX3lT9PXhrvRY3hQ130H97psBzmn++jhm
A6hjy6XbdRB9EPwiq1DfURuVu6lH4Izm5srV2vMVh4XPW25NW1XzlVOJ2W5x
rm/L0fjgeM7pwDisnAtf9d9qIvIzOqjnY4Y5juczcf/yUjUS+Zn75teR0+nF
bs8ckferd3gucju5Z/e65H/HVV3DtFc+K3mqWgkP4h57TNZr7j3hXVRTcbPW
lt03hCs4S2hcfe2rANc+3s+zkBx2eMj97BfrnQvCryduRfzg+Y+6njx81rOb
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
5jm5LqJWqe/Q66SxqIECPwpfgHm0PK6t1srritO41uxF6810GoQ4Qxen11vr
eVknm7nPRYVrxhqcl3kM8g3XHA4rXzhvTtu8XPvWh36NYdZoYuMQc8Q0Wsqw
Z40lFhv9OOy+H9i33PHUO/bmLTkDp8U+H9in7HDCDuXwcw8vP/hZbXyki775
y2/u+W4f9Y5Hld3ftXv5r29VAkKbddNbS0t9zNmPKR//9sfLIZ84pNzytbfs
8dRXf+7Vvfv60g+/1LufAz54QG+O0r3feu+y43/sWLY+cuvyeyf9Xtn9nbuX
s7561qZnA5//o/PLBT+54DJ6Md596CcO7fX6hmdZb+8tT75l2epVW5V7vvme
v3lNqwy5DD4pr8Fd7RvisnzDv/mDaQL2ffu83MLPB9XC5UDmKei9M+PFnIb9
9ru83qiWT4uNczVWDTRY3rh5OJsvsRzQZ05XNTez3fNpdOZ0tuetWvvmC+MG
ehGtVXNK6V24Kz+n+8OJu7656GnEb9vzt2ivdFl8BD/oxw3UvfiO3Uc/nzDu
zFfqNaxCr3iAX0U9ge7A5znMLGYaNk4o9/e3bnG2qe/hm/Jt9+3zHSbWqCs4
V4bO3mof+j9o/LzjbQ8lDZhuaw6wea/85OqVaiXONMFt+dMB35WPmtnT+qX5
B1yHfl+dtK2Nhoc5ztbZiHZqj9PvYl6Ya5tmTPf1/tB9l+3cnPXgPVTnool3
+5pnBT6EuAZ42efleXWhZqTOF/M9EhuDa3C9OQc8OOKBWtcq5oiriH4c9gX/
9YJy59ffuef5/eqPv9rjfB++8MO9f5vB9NvH/XY5/FOXctgv/+jLPf8xf/GJ
/31iefJ7nvybc19prngnjXP/D+xfnnjOE3uzmnDYP3ztH5bfPeF36zmx3/hA
7/H4lPd+/97l7AvO7p2to3/2d477nd45sThkvzlTo+KEz59QTvrvk8qFF1fT
Gc761Pc+tdzw+BuWwz55WPnuT+uATpqzecRXOfIqvZ97nasKHJRvUAy2f9sv
uvV5/3bGBT+HfV5tfRQfl/ijJ1/+Qd/p/i0+bCapnitzjlcN8invy7KfG+Jz
V89YFT1tlqCt4BJdDkvzp8+ZQ9p69Kw9HMP8WfUUehfflnVJs+KVoNHKKfku
AjgRjc2ZJcFPQJ5h7qyeSHNFeTG60CvPa8yD0fUJ02A9dx5nz2dVZnjg+g97
WOWvdEse3mH6PsUOGjk9zWeEl+CGag782Obx0l5x12G5n/oC/upaaHslzS/Y
cceq0bcau3Neaa9+5trBmdUn+dV5g+X7cT8++6iTmE0f14dzefwtDfodHXuU
+/eY4VEeFd4jmitO7XnqhVE/4VmgT+Pr9rZVAk7vesEb56Wnk7dD/QWHFcfm
5Xl1wVMvlvIO9ItvicHguxOT1FLVA9TJ7DWrMLcvsT76cVg87i5vvEt56vue
Wr7wgy+Uwz51WNn5zTuXV3zmFeWhZz60XO/Y65V/Pfdff+Mlfs0XX9Ob82Te
8Ms//fLy/I8+v3z++9Vw8rT3P62nvTon5+kfeHrZ6717lfO+f1456GMH9Tjs
DY6/Qe97bvy6V3v11Xo+YjOlwGOaC8zTqx92HKD74un6buFbF32rPOKsR/T6
bnc7a7cex6Yd73nOnuXqr756ufpRV+95p82tGifowN/56XfK137ytZ7ePS+9
tvIjPkDxFm91o6XirvaJQXkivcY5g3gsPqrP6odDWL9xFrmH89nku2v5gtTr
5S96Q3+8Ykf18k7RsIZ5P+cN0be4Hnym/H/2e77yVfTsTRNyc72GvrY6Bq6K
A8gNWz8ELun36a24EI0NB3buBi8GnoE/mBHcni8v/zV/1kzi6GkM0Hbos/rt
+vnk+VP1zeM5bV3DtSFm0Mic78nLsSq98uJxzPClUephHbbmI377e/F9HOtL
vZKGS69s47Z6prnTfoZn4sRyT/zZDB5+G9cOjoiD44bOxFAfiXoKLqu3lSeZ
vhKfr2vF37oW5bct9NLSf+0lo84fEqM8b33gHhdnc/9irnqL8+Nc8xvhxosM
PMLnaw+al/NKXEfqN+oYZknOy/PqgodY7U5dcFVqbOOCOGB2HZ+NOidvhXWp
nsmTscr96YmKfhz2VZ95Vbnbm+7WO+sVL9WHqi/1Aac/oOcxxmGjH5Y2+5T3
PaU3o+mln3ppb3bvmV85szfv6SeX/KR3Hg1v8ee+97meR5iu6t8v/NgLexyW
prvLW3bp9d/SZK97zHV784rjLJ03fflNvcf0u/ptx4GTvnBS2e8D+/V0Xvjg
Nz9Y7n/G/Xs6rMcyY+orP/pKecAZD+hpsJ6jPtxxzUXGVZ0xdMoXT+lxeRo2
3n/secf2nkvo25OCfVrugi/IY8R+OY3aO51VHilvFSNwVlrHKLMd8Vg1Mz1q
bvQR998v3viex8B7zYSRl+lpW8sHIk8z+0PexK+8SjGMxqUOuWj7oH1IPxlO
up4uj6eYP6r/jRcxfdOTg7UjD/Red+cS61ekp+pjD+1TLUseS//y/TgTFNcN
bdWsYJ7Lrn7r7/Q+0v26HoroyVXz6v5MHJADxhlcAVxGjy6/s9yGlmu+udqW
17HsGr7YR/fUC+i9e897ZvM8XEP6R3g61TVaLYzvW82Chkrfdf2owdFZXQ/q
DjR9XnLXkzyfDuvai75Beijt0+fcXk9qo7guDb5b79SH4j3xs1FnuNsX/f3O
O9c+21Y385xos3LoeZnNOy3oE6CHx+c4a7juXD/bbFO9CK1GP2/Q563fXJ0v
/a3DQ54jFugzUasT69zo7mqe6c1OQD8Oqw/U/GDaJL317qfdvTeX1/wl/as4
7BGfOaKnS771/Lf2fveR73hkOfgTB5d3f/3dv9ErncPz4Lc9uOz7/n17va7P
+fBzyp7v2rM3K+m5H31uj5duf+z25WYn3qzHE/Hm8Be//n9f3+OMH/3WR3sa
sO/hkd2zfjYC97PXe/bq+aPBvOR7vuWe5Q7/eYfea3zt/7y2nPnVM8udXn+n
Xi/sbU65Te91jQNek/syN+tGJ9yoVxtwbg+9F3/f+bSde17n8DMPdZ+/rLzR
3oKPyiPkgnI+/WG++u/gpW7+m9dP3wC9BL8wq8Gej8NuNtZ6TnqR5Kxmh6jf
mmPq/vESz9Pjqc+bR6K/zlwGNfD19kivA4fl0VmVGaSAM9CkujNt5hmuA/mp
mT328vX6FfEV803pMbSWnIExOcgR1JjoeN15I8Fh6bFRRzDDlu+T9sXXTpPF
XXy24a1Ui+Kbs5ajd1XNjC5LL3GmaTfvUGfHhXGS7rwYuTNfhjN+wnehDkKT
w49ou3JYfZ24OH2PNjuv+ey4wKtAD5TTxUykWYCu6rN1TYjHbexW9+T3lG/S
4cV215vnfeyxdU/weeGwvOi0Ftpqq1fhJvRZ10h7feKarg391F0tWa8sbd51
MCrfUvvwPN269TN1OPsU7/WgGdrLCGtffVnv+TzUUMUAeYWYIgbo3Z6H59WF
PGq33WqdT50p/a/DwywsvfLqFPYHe49YwD+O0/J48EOsko6RuDz6cdiTv3hy
jzeaq8RPfPvX3b43W8lsYJzzOsdc5zcc9u1ffXt54BkP7Gmb3bNhT/3fU8su
b96lPO8jz+vptXRaXBdn3O+D+5Xbve52PT687b9vW7Y7ertev+y93nqvnr/Y
/fHz6sX1PK5/7PXLcecdNxa/7TkXnNPzCYdfma/4fmfcrzzy7Ef2+OqBHz+w
9z3zl80kxsOdmbtZmL3s9dCs9dnyLntfvQ/mW1332OuWqx11tR539hxb3dc+
LS/j55XnxRwkcyfkL3FGgn0WzzHX4vTT63/jifgjrUQvgb9Ru8YF7dOT9Gvy
DeKo8hR1XD5guYvcGKfRA6WuzcsoL/3RkHZtr4vP0eucx71r3JBbeR9p1Ivk
l5THxplteua6vr8ueEb9rnmjctB5PNvR+6/Ow183jbp66/0cp76o/mO2Dl31
sMMqHwngFHQxGqmamDzB9+QQ/Fy83rRPPa5089Cl6KA4rc+89RLLN+UdPBTd
9eqx5Xi0uZg7G6CFmePW3pfYJ25Ebd7zx7d5U+WL8uxl7xn3WdAnYiZr+/5M
E/Rg8ds1wc/cjU3iMw2VDuW6wFnFfbVMewNuq3ah3klX4d1t59fz89BF7XXD
XvtiJO7rMf4/e/cBJktZpQ+8gUsSJAcFWQmiEgQVJAkuJv4ua0CUjCiiq6Dg
grJGwoqCKyoqK6hESQpcgiRRQEAWERREWFb0IogkCQpIuKDA969f1Xzcuk13
T/dMh+ru7zxPPTPT06G66gvnPe97zpkKZmjUQ0fcUEyNT41LruK61EvDIbqP
VeESrVV6IFgDxK/KvRCqZPYJ2J82hd+VrH3jJ9JpiIHxfVw/40/ugX3HkfTZ
yRph2Jm3zsx5Sfpa+HHNU9cMW5y/RV6jd6njlwrLfG+ZPE8VhtVL520/ettz
+s7Amur8wqSH33h4uPfxe3Mt8K6X7Ro+cPkHwud++bk8x9V70evCrafMOiX/
H8419mJVg5gWGYb1Pg89Mf0A+/X3X5+/50/u+EneE4i+efcrds9rLb/hvDfk
HKn+uPD1wscsHD5z9WfyOsbTMfj1qj9flfPa77jwHfn13OOKPfK/cc5w/W6X
7ZbXfIZtj7rxuHD73Y/leDX28YPxaKvMW3Fsuj1+vr/t9fRV4lLwqbXTPluF
uB/ehQYWt8Nnib1zaIH4p7ib6Ce3a+Kw/Gg+9jjkwdmf8Qt8vWHSScJdcJJ4
ubw459/M3FNxDnpC3Jo6tb0ev+YIP9z4a/e60izgE9XAgbl6FQfGIYlPmeP6
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
FvGTw6ZpjD35YAQ5+saRdQCvhmOTi26N8x1hKNcDH2uvHXSc2H2Qh2GvgOmq
Wi8Jz2kfwZuqMWDNh92svfIqYl9D+4HD9zAG7RN4THFVh9h1rOmpPoo80Ng3
G6bTw0q9MX3I7FEOGNTjcLOcEDofY9a1w8niSt1z+6z8FBof44GvEWMXtAie
g0s9/fRi7IvjqoUg9itnxPvDvD5LbNa+hWMV+3FuztFnmzPGlHjXZD6M/Gs4
3b4esW6sAQenw7BV7gmcrH/WCMPCVntduVeOX/GM+tDgVOl46WYP/vXBuV44
Gt3vJ37xiRyL6p0jF/a+2XNrfuuxrBzT1/3wdWGrC7fKOd5WdZG87qp7r8r7
83TLvBdcfNC1B831XWiKfQ84Xc5s+X/siJuOCCfNOinnm3/34O/yPF7a5988
MPkiiotVM8p7ixGo7fSNG76Ra5lhebrtfX+xbx4XeKYKwc4hM+u8ddQa3SrG
N6yGH6TrrGIPgUbGzxHfhcfkddo/m+05av3Ys+iIaWjh9Va1i+xn/CuaJDot
GmS5gThSezl/oF2++tBDC1+VJlMekPix2DYcW94n5SPx5eiIcaWRt52ueX+x
bt/Be/v+uAX7dS85d34Kf4iPelfj9IZkFTT+oR6J4kKdagGSNTacqlr/OC89
j81DMSV6RWtK1IO67uapNU1NLfEmGgo8GtxX1h6IfcGHsAt87H/9jj/6PNhE
/qNcSvyydcvaIv6HDxNTo2GCt6xDroF1FedmXRTfcw1cD7gRFqnv8dxvsy47
JxjWucZe1FUzGhtjhzb2bz1MDbOWu88+w1izp0RM2mvdFlfV5xvf4jg+19j3
2FTdWD4cHpY/J+4NT9ubaa3F72itaX2Sm5ysEYZlcNqmZ2+ac5JH3nRkrhNm
eFBHPcaihdVv9br7r5uLQ42Ghyz3doUF1zptrbyXDnzcynwenrTb2lo5uc61
jK1h7R//6cd53WV65jK2dv77/3L/vKYTbhiG3eYn2+Q1m//w8OTCR5/z4zt+
nH9nOm31l/GurzjtFXm/HX12uonTx81ibiwfD9YbNS1jrAkxLDm/YrixD70a
+WLIzbS+uFC+IAzLfxTrbRWHsC/jRvBQ9jpaKvF4R+xj2O51EtOmd1IfUS6n
3+m48A7ixzGv074KWzq/+j4wZbOP1/cIaWXOEx/KJ+aTuV56UInT99r4ONOp
05Gsv+Z+GStiQvTs6gK321M7WXPDP8JCuG1rkHkolmQumu+uNdwKs8Kx1jMH
XEuTQT9hDYt9gPBp9iJ8EoxIK2L9kD+Ai1LfGK/W6Ij1yv1uHyv3eKfZgEFx
aPg65x1rAfldLqL/e67Xig3CT/IK5SnAVDSfNC9Rc0oHChvQjdo71ZMTQ9TD
3fjCv+Gl6db9FPcaNIYVd8TF0e1Yq2M9viqZueq6qpknj3RY9u0qmLFtH6d/
tj+bR8ape+5x82HU8u+TTc2aYVi1c9Vt0nMGVnsmTM/Juefxe56tUfTk00+G
j1/18bDSSSuF/a/ZP8e/w2DOX34s7hRXevatZ+d6aLnAuOt2bdZDs/LaVThg
mBh2hf3VyEo2PYN7YD06FzqdYcodncys5XygXsZzu2k0afJm+IVyYuvrI0Xz
fWKvEP6jn3y+yb4nP8pepi8MThZGpvdTY5c2uV2+2v6Ib+Cr0WDx8eigYOOo
5zWOaKboovmx6ls0Oj++FJ+R5ko9xXawIQ4U1odL+M58Zth5XGugJmtuxgqf
Hb6CoXBpg9Z1joKpl7bTTkV9ILEruYXwnXkJt8F39B3yIWBBdVXpKONhvxE3
w4FZA9QuoKvEI9F06nWJ44x5grhOGn7+uJzB8iFX0WeXD495Pj/ee8ij9H6x
3o8DNwUz+b/nep18d5/l+e95T7Gewai0oLhMOBtGjj2yxd8arVm+o2sBV+P4
Br2v0tHS6Fov5WBWMS/S/uReOM9zzhke/VQVDD6lI6YbVtcZ504bZbyrYdXN
2obJhtuaYdho3dK0znp4Vq63feiJh8Kv7v9VXhNpxRNXDMfffPxcvVerbHjU
mbfOzPW+etXuccUeuc6a/niy3jrJ+mfyS/gZYsj1Ne2G2fgcMNqw9ENTN5E/
CMOK+TfLuZRrY6+K9ZzwHWL9/Ypbw5wwrBqSfD+5QzA0/M0nNJ7wK2pI4mPo
C3G29X6cv/m2uBk43HdoJ0dObhKfGXZ1DWBZ+VOjqIdPNj1TvynOFX6dOFGy
6Rt9iHUIZ2rd4ie71urKyWnAdbcbK6DPtVbTt9p/6FFoKvCj4mtibnpk2Z+s
M+Jh8RBPc3i9ejbiltYCOdDiWgccUNQYgENjHqJ4myNia/+H8WhZ1MbxmXhb
WuKp4k95jda/qmh2xQxovmFYa3Q/NCudmhxj+wntqzjBMNWxqILJ0TWX4nin
YZebO5W6jclG1ybDsN2y2/52W96PFWf5wcs/GF588ovz+lCX39WEnKmo0RBf
eteled/br1z/lfDzP/98aDD4OBm+Uhwc1hiV+CcfB1c4LBhWjhU/A2ck16pR
fSL7Or8s1qjhk+A57V390oLLg6MfltOmbiPdF84Y9+GAveFMuibaQvUQG9VX
5qviPfS3dfA/8TKtjE+pfhW9GY0i7AvD2rdTnmOyesP10c2bK+IeVenXmWyO
mff0Ib2OwVk77W3WSZ/l917xo/hkXO9064ehRJwvfAJTw8RiBTTScnTpn621
xjmNgcPv9Nf2cs9TP8t+Qodgv8A/N8vrGKTJ11S3l85crCnla0zNjOl07ZI1
s35hWPmsesm+cuYrw3InLBdWPmXlvFePHjvJknXbYAM1kOQotdOjZRhMfJ5e
dhhq8dl36HJjPadm+a38GBo12A3HCe/CsLiKVvku/De1HtRvVMsLx0HDN5Xc
QJhVLtw66xR8LH+DNo2mGG5VS0J+mHxd52lcNdL5whP6B9BDwxj0za1ixjha
31OemesER9NNuQ6wsxpTKeacrGyxd7FYCn1oqklcLcPVytUU4xoVv9saJP/f
et4JVpRrYe+FOa2p8KnYMt2LNRQuhj9xlWKH1l81o+gL5D1abx1+p32hJaWN
sS57rnUShqUBr+IeLzc5amGr2r82WbJht35hWPbr+38dDvzVgWGXS3cJ+/1y
v7wXbNLgJuuV2Tfsk/S3o1D3RF1feTXD8F3gbBov+liYVN5VIz6cP6M/KZyL
i4y1PifDsDAkXzH6PzConLUTTyz40E78R/141ODkK8kZg4XlhtHOqeEkbiD3
zLmpVYwXaKQr1C+Br8ff8n70e80MD4FTh5nVOZWHJ0YRezHgZOXR4SRo0lLO
YzKmdo+YD90CvWisN5asGkZ3LI+vivmZUzXrqfVPDew72yw5SX8iNij/1niF
PeFTa7z1Hf60N4jFxMPf9oFYr6x8eCw+X5wTdpV34m91qCbrwzYIU5dLjUF4
O/UuS5asN9ZPDMvUAVbD6dEnU1J2st4av1/fEDlCfL9B16GYrsmLoqkahnrL
+FW1RPgbYunygeoNTqRP49PQHOutQx/mb1i0lRbP+8v/4h+svHKBG+FNNTRo
0jrRj9Or8bH4V3CxHDYYXHxfDF3eGa6Uv6Smivovjcz4onUTa3CfGvHlvpOx
6F5G/lXvBflmakDhfPmLHtPLAj6nyXb94PaEZcfbxHXEg+Ru84vTeKiWqSMo
l9X6NCpGX2Ldk4/Ybo6+Nc76b32L9Z3hUH+rF0Bfu+aahR6e3ladK7oC9bN2
3jmE97+/4H0/8IGiHpa1WA169cxwmxEP42btFVWscyhGaU/zHavavzZZsmG3
fmPYZMn6aXIwYZBRqO+k3rI8zWHwW+U40cbS1L785YXet2z0aeqZ+J/4uvqc
fBT8Ej9nsrrEMCq8yK/SNwL2VI9F/wp+ZCcYVp4VrIiHpdWMPd75T3RtfBAY
23m5BzjUVtaIA/YYbkburbxbGJVPx5fDVeB+YeDYxx2mdU1ga36bOqJqS9Ef
D2MshvbbufOBYXHxC7w1Pbif/sZhqeXpOfA/Lif2OvS41+FbXEc+IZ0FjaJa
POqlGmPjUAfL/bcGjIpWdZQM3qMtqSIvOFXTn0eeP71Kuzm+NO7WTzFGa5ga
AmrKqu2sxrH1Wl0r8cOYByKGR1dgDlsrxGtiz1GPuabyZ63X9nM1rlxrdQOq
OBfUBqMxgtGt3cmSJeu+JQybbNTNHqwnwjDnF9rLDzlkePJqYAq5pDAsfFiv
q5XHCqPRicGH8Kc6nOuuW/Cwk/WH7abBQc5RzBwPGk2tT7gWNwxv4mTldE0F
Q8Ji6jThjL0X/TAeVg8OOWb176luF98Opuaz8dP6XdeSXwgrGXviCc7JPYHh
xYPKB/zpHPFP/Fc8zC9+UeBxemicBL/TfYXHccv0EeJLak6qM+pxvi0tJi5b
fMKY8LtelXLb+b//9m8FV427Ue96ww0LPoaufJjneLLhN9y4OJqYzKgYXtk8
Ez9td+2zVlnzTz650JBYE8Sgxmlu2tPwxfB7yltPlqw3ljBsslE3fjf/l3+M
9xlGgxHUwRiWvBr9HF796jn1U2EZebxi6XCGvNNlly0wrLxTNVBi7N7rxOj7
pQ8TI5ezFXNho8k3lP8ac7XontWanIrhF+Rm08/pO0sbJ18MvzgI44vCpj4f
D+p7G1vwvJqqtNByr+lW8Qnw5Ne/XmBJvLdeH2IqDuMSJwKXqrEsJxinrtel
e0/jzZfTZwnW9P3FN8QN1MBywKFyx9QrEkvwGtcKj+Gnv3E6xobn633JNzR2
4FkaRGMHf59yRJMNysRuRg3Dii2pMZdqYHdm1kg5LtamKtZNTpZsFCxh2GTj
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
8TvDC098Yfjy9V/OcSt76pmnwkm/PylsfNbGYYOzNgg/u+dngzrtgRtsp48g
fYLalg7cJDxKAwyP8qvV5OHfqm0kDmQeNdvL8J6Ov/yl6P9g/tFI9rIecbTP
fKaoFQQvO095fL6fWlP0GM7fd5G3e/HFRS6s3z127bUF7lVLxxrh2tAk77NP
oa+sak/RZKNjfEh+ozE5CF/RHDFfo46Yjt6cGJThpVdZpcinH2SvoWTjbV/8
YoH3Rs30C5I3oD7/8ccXc4yGSW1/2qkVVyz+9+IXF760Wm/ycOzlSWecLFnv
jM8qn0/tUX70/fcP7FSoJ9+dHfNPYM2VJ3S/f8uO7SYeu3MCw95ewqTfzo7/
zY5VJv4+cuI5DxWa47ltwQXDlpnP8VC25tyZ+d+XjxuGvfreq8NxNx8Xbnl4
jsN16i2nhrVPWzvM9935wjsufEe44S9FIPWOR+4IO1y8Q1js2MXCmqeuGS69
69IBnXX/jV8slgqniivDbnSLsJo6R+qP4l0efrh4Pkwr/vPxjxe1fOHSdnxr
+M/z9S7E2153Xe99cu8Pb26/fcHHytGlLT7qqMIXpkekxbA3q+e0zjpF/Zz1
1ise09tWT57DDy94MDj4v/87hAMPLGLQ3Yx94aMTJk5WbzgP2tmfDSisJh+A
phAHq6aTvsiD0hGzj30shJVWKvZwa0+yZIMwGJaeZ9TMHm0vxLmecsocvZVa
e/Y/9f3t4auuWjxnueUKTaNYsdw8MS/PTdxssioaHwsnAf/1Sg/vM7rtyzlX
dUn5pvzvfvA/0cxnnxfz8LL9/3+z77dpCZtuO4Ff7y9yW/P81b9O4NObJ56z
cHb8fuI5m2THvBNa4acn9MQLzsXAZi7HCSeETZddNjy+/PLhGbrHccOwR/7f
keH1574+nH3b2c9ysbjXlU5aKcw4akZ4xemvCJfffXn++Bm3nhFeNfNVYYGj
Fggbn71xuOre7hUawgc/MPuB8OATD4a/PzWghLY6sy+JrxoXeEh7E00CzAq7
4iPlvzbrLaiWhT6pNPnwIDyqh02jeesxPUHVhKBJtP/JqWnWu6ab5rMPOqjQ
ROGP5ObqS6qHrfPYaquit4vHaSTl9G67bRFfVteCBlkNVHgW7rZPqxElHtbt
9c/1Tj1Rk5UNr2GOiauIIw3CYGg9fO0euJdB8cHM54pD44KsO4PE0snG1+K+
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
vKh+crRgvTZ+Oj6bFuo//7PgaK0/L31pgSuci5/iVupEqh9Js4YjhhFSXbdk
k5l6p/Ip1ReTs1UeM2os6LUY6wR2i4eFLaebX8uH1e9RPeDYl6De9LzRI1L/
kT4ab+C47NgjO7IVI3wwO96SHSsttljYaKJO06PzzRf2mMCk+NO3ZcfBV1wR
Xprdi1w3vO22oXbbbcH/6w9494vZMVvcGg8rvpW90+J9/ZYVMDWb1jptrbDO
6evktZU2P3fzvJYSXfELTnhBWOHEFfLc1JgL+5M7fjLX6+99/N4c7276w03D
+X86/9k+s63sS7/+Up5f+1/X/1e4f/Zzk7rVS97grA3yXj5ydNutT5ysfZM3
KKdeHLnZHmd/lgthjgw6rgtPww533DHY80hWLaMjUtPzk58s4rC91JqL9Zgz
NH6LLFLgVzwsfkQeTr9qSbUyMSn4FTd97fRSPpIlm7IZe7T13aoBUxWDJ9VB
149RPaY++8W5iSfTn6iPbH+moTTn4Q++LE5Grq6eX3rU01rBDDRMg851SFZN
o19Xp8xepiZ22ejb7bG0ADS53eCT1HSSfzvd9UEfW7Ecc7JZvMwc2XLLgeXm
51cL7r/nnnDL6aeH45ZbLvwu8xv+vtBC4cFTT83x7abZ8T6nmh3LZ9/p2bzX
/fYLtfvuew5+VS/qw9mRC2LFFaxH5nyGYRccxJccpM28dWbY8KwNw1LHL5Xn
v3785x8Ptz9ye/j8tZ/Pc2P1u1nomIWa5sLGWsaee+ZtZzasI1xv+/1yvxwP
q0t868O35q+BfR+Y/UC45t5rwod/9uGc+33t2a8NV9xzRVvcbrL2jRabTkns
LZsfTU1/SbmwVajLQdti3Rs1nyjZ9IyGbpttin3q61/vDU8v91Utc3NBjcbI
v6rj9MIXFvtoWXs1SDNn9e3A04hRJ0s2CFNjQVxH/+ZRMhpf/TTUAcXHDppn
Fn/W7w5O1avyPe8p9MX8WbpQHC1s6zE9atVRdV/UUVWvJ7lWyfiDesDKu9b3
sb4uIX2T/RU/262+FGKtMOx0tMTy39TBML7l3jfr66FvqrqPrXLzezkPaLde
9aoinxjWnH/+8EzmQzyz9dZBViQVpEhYtnOHlbJ7Udt111BbYolQW3LJUMsw
by17fRm/ZrM653ZviO+Pz9YbgW8ybnWJ2XX3XZfnper7ioc9edbJOe/5td98
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
6YoB+e6NMKz57V67f620xNZz89QaONn1aNWDyOfZt2MfXHuse8Mfda72e+uP
OIBr0+B99smO+bN5WcvWs1q2FuQ6Yj11svVAH9hstIXsLreu48Tv4AcYp/yM
RpYwbGOzVk5lj0/WX3N/rHM0VeV+XJMZH4sPI3e2qrUWnKN1sxGvkmw8jY8a
fV57Sbsxm7IZ7/beyEvZy2EGGga+P9+pjEvtW2I98JF4vs8Wz44+FIwJd/LL
ov/Cd+Gr8j34Gfw2vq74N/6ID2Zv54/xJ8TacYl4osgB0SCoyw0Xq3nhe/Nz
HDAZ3kj823maK+LEVazL1g+DwfimrlN9PxL4D68CV+CtcCe0x9YW/jH+hn9N
18c/4nvDfg6/u77+53kRe+F54Cm8l/vCt4NJnAe9F64m4jHjBFdO48aHjAf+
znjwHFjEmOI38WeNMViS9s+44Df6LHjS+IiHc/CYcYNzgxHgPljSeIt6RP6h
MWi88p19LpwYP9cRdbaxj0Q8d/ER5+/wOn6393dNnS+c6lz52LBvPPxtrOKk
jPPISbn+6mw5fFf/83ycmftnvNNZGtN8SfdzULVtzflYe9d51ceH4C0afjmo
7i+8Au/CKY1q7UQdpbEIz3dabwkGcP98hnsE6w1T3V/rt+vC93C9jEvroLmG
x/c/daLMH+PVGsp/h0Hpk/FRMClsAYfCjp6D0/Rexrwxa+4Zy8aY8WmMGYt4
WHPKeLOGmruxfpbPpXUxl+o5+sjTO/xuLnqeMevwOnPU4XePxfcxP+nJxZDE
X2BT6wrsTsNs3Ybhm/nazs+48h7lXhP2B9hYzKRVz6do4mSuER7W/tJp/hg8
ABd0ggmMzRjL4sfBffTt5odYXzT7rftd/x2j2efdVxjW9WsVp7WfN8GVHRmM
bfzY12kqXDfxAvfCumpdcw+b4PhsFQ7z4V7XWy/UsrFQy+5z3lsnOxbOjmzE
hUk7UblPfIlvtei6kzDsHHPPxQXFdOzT9njxjOn2F0vWO7MuiNnhhDqJt4pV
iWtXOddUbp8x2Ak2Tzb6xm/j69i3cV/+jrxXuS6L+Iy1jH8Eh8ApNEtwofUN
f8G/4Mvgk/jz/HQxV7jTXhv50jJHKpYOF9AEwiGwgH2aLwZD8JH4HfwdWIev
Cv/gxeBkWji4yj7bKeYcJn+1nwY38mvt9fU+kHER9Zu4FvcMLpOjhQuicYTt
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
XGRrp32DNV4cXE2r/kx6Fut9p5/AQHNgh5o691itL5101FFF1/JH+Z+0o36+
dHh/PVq51o6zWpMvfKHMBDcr3PVQro9jZH64GKljJtbr52IMcn7UGvtdGs5z
HCi0q37EPfXIGu0cc0yJp+SeNEnGHmKL4ntqVNRU9JT7uNVWZS8vlmqPb/1N
ksFiD8DL1PPSnJnhvI521a1ysejWj360eAZ1L2H1W+Lg9KyeTPqTqL9Rn5W1
ra1BbQK/Qe+W1FAjA2/MjCd5n52A6xOfSkxMbKQVfQg7VcPC8eEt+vy1ogZU
XE9fKOuouTxudKx13u1FLypf7TvkddGB7QBtLu6vflTOsR4hJ5+8ZC6tXGC+
al/H0HF2Hfnv/y7XFnreOnjwwSUnjrZVr0WbukapJ7ZXGzeu9GrW236ttcpX
16SB1naJvYpZHHRQ++bW6efE7x9Nfn6SJMODvbvYnl4NtGlPGvZLXypxVF6U
3KPcvyetgPejl6/9jPgzP2goqePq6pzsPWrdKi/YfkvPTLpVL+GNNor4wQ/K
9Z3OFefN8771mDOkB6rjPNCemPZichpHqx/O07Jv9RxHY5+YH/4w4r3vLTGl
dod21a9n++2Lv8VflAM62NzPTtawrUZtrOP/+teX2LccZXsHa6v+d2b2rL56
yZnlAQ/GRxxJxDJpVx4t39kequtcWrnScpP5zHWOCR3Me95pp3KM6GA1yc3m
8boOyW22bso3Vpcs/ifPu7/QvrSzfKJ29SXkBfLEc656kow9zHBznREPlR/T
KJfP2qb3oDiqfoR0R5K0Ar0qzG2gYWnGZuYt9Beagceg5she47e/LbNu5Anb
W/Fb9Wfit6pFsp8XD3f/Zuc3JAPDe8P/M49In+eeepWKrfF2etpnOW/oloHs
44YSNVriH/qfWmt5BnTiaKs7k0Mqlmk/PlC8N17vSO4l5cXylOX7u2bR5fIq
fJ4HOzMkNWzziPU5z3mEP/1p6c/+s58Vz5VuEzvceeei38zP6YQaAj4gLcpH
pWXd1NSK+dNY4iiOCb2oNsu1iHYfaEyLRpZP7HOrx5Y85/6e43Jw2zmPGHpc
q68ejbHBJEmGll//uvRUpU3lwzTymfTd0VdfPpB6ltE8/yRpL/QGUQdEw37m
M62bU969LxPdSiN31a2136pPpl4aajLt4TMnafiQw6j2izfTm4bVj5NPy2Nr
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
csQqsdUlW8Vdj7dgGG8Hoo8S/dhT7SZPUR6S3mhiMPJ9fbU/M2O6p35O9Giz
tbBihfLrO2UWjfwNe9RWzH9OkqT9oCP4BfYg9hH639lv6C/J25BbplaNppWj
Zb0YinmKydhDbNl5RsPav+pRa96r3M9W9GBJRjf2dHSPXI/B9FWiA+Wj8hXo
NueO/Fg1nrzenrSM/k9yTNTZtlpL8lrMndHLSW2m/lL17Bn1bfaq/u5QzCvm
g/IlmvVZ5BXS1AOdmaZnldemP2CjnD79ZuR577rrklxie2n1qnxqHrVega4/
fOrR4k93p9M17MxnZsYF918Qtz52a6Vlm+XQWw+NNx//5lh2/LKx3ZXbxf1P
9ZC8P8bRO9isr0mTitbs+tmX564PnVwGa5LPh9wjvZ30WPd7jfSpnBPzwcTr
5NT2Vgvgvj6D8kE6pR7MzHevp5m58kmSdCY8CHE5uWR6oeiHJz+lzruyH1xl
lVKfqJdOzttMWoE9Ns2qH7G5A/a3mS88dtCHQz903llPNavN4DxS/+ocEpdX
M8270A9l6tSe84Tdf4MNisbq2ivKume/N5g4ivNYvZm/r1aTj2JfKm+ZvuRd
igUORazG/lQOrTW8GW64oeTjDCS/xuswZ1Iusn12o/fRNUVNMG+8rkNR/yxW
ynNyTfH/tH5v80NGmk7XsJc/fHlsPnXz+P21v19Kh9KzN82+KS558JJK5/6z
yyKt9nWby7aJVY9cNZY/fPnY58Z94rH5TRZVdzjWHZ8POQfiQ2I9coy+850S
W6v7d1sD9GSS96YnmXWi/gz4mXp/NTdyDbqvF3SxOc1yGdyvt+unPZ6+bUNR
OzFSyPEwu0Av9SRJkkaoz1CjqPeKvVHO3kxahfhJXz1Qk86EVrQH490N1geV
M8LjlE/Ct6CpeJ+95czJY3Wf2ofVF5kGs9ekq8xEbbbH0WhCbIAW7KkOuBHN
amm6216ah62uV20JL11vcT1VG+lPdcr8JTm+9vQQt1C/KoagZsDx9l709Bj9
wXllTXGdEt/weJ63m3/7vj18f9ecTtew0x6dFp855zNVXrB/19wy+5b47sXf
jQ+e9sE44vYjYu6CJcGOB596ML543hfjZeNfFv9yxL/EpL9N6peH24mI8cvD
kCtPL1pH5PvyCOQ8yN0/44wlXoC1hw6T7+a+jTwCOUtqIrp+TsXI1HyrA9Bf
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
IQeZZpJ/SivSaHQKPUeffe5zJbZmdk3tq/Hf+J80otxQsyZqn687/BX35e3R
u+oj+Xg8ZTqcNqQf6Se5enU+NM+FBqJx3Z/OpDv5jPwR+0t7ULVq9qE0lb2o
fajXYr9Fc9PbtJXvqxOlp+xT/Z65O2bd2M96nb7Skt1zsh3vRntY+2/6tq8Z
aN5T+3galb7jM8mnpX3tqf1dueIf+1jR3G7ee9pTva1rQV+1q7zUOs6hfhpq
AdXC0rKeg+PAV9KXpp754T3baafyXvLL5XR7XjxZx5DWpUNaqSt4xmO5Hha/
uupX8bpjXxf73rRvzJk/Jw68+cBqbs7aJ60dG5y+Qbzq6FfF/z3l/8alD10a
f3nwL7H+6etXecSvPubVceY/zuz3bNlGPLPwmdj+qu2rx97rxr3iqplXVVp6
+yu3jzcc94ZY/ajV45g7j6nu1wy0oviX2It4jniM2Ead4++c8hl0XtGrzcZn
WoVzTtzEc9L/TFzM51+cxudPrbnb179eYi7WxmbnWdN2+jh5jZ0yT6cr1nj+
dKf0WU6SpKyJbv2Zc98T9lj2hi96UdlndGIsL0mSvqnzR+0DW5UfLLeNhtRX
h660p6Tjvva1JX2D1E3yJuXfqlGVt+xrXeNIR8oppSXdl1/H07Ru8ega9evU
28dj05x0nNq0Oje1ntMjP5fW4mPUeySvnSbzt3inakHpalrV3pieb3Z/2RP+
ll4v9B8NLo7Yn1w5r41ObqQv5STyUu2X6VVz02hUx8JrdQwcX7PA65tj7Vbn
QHsv5IurvfVYve0f5TGKOdib1zVr3l+av6595RV/+MNFd3f1i+WFey/qWZqD
vZYNtv/5WNCwv7nmN/G6414Xu12/W/z9ib/H9//6/aoW9tt//nb87PKfxVtP
eGusecyalV49aPpBlaakYdebvF5cOfPKljwHf/erF341tvzLlnH7Y7cv9f3P
n/f5Knd5zxv2rOplG2FtEgezrjg/rS3ibfx56wvvTt4u/5WXOdjPa6txrtPS
Ph9yl+lrdeO+198eeV6/HAPxwE7sY6LHgPhekiSdQz2vxP7QPqjZfneNsEbI
+6JhP//5xjPskyRJ+gtNI3eP5yDXVO4tDVlr01VXLbWK/FA5pR/5SMmno53o
In4gz5KG5J3Kl+PVqf3SX5iXKr+0kYbl8VnX5I/yB+lSuSZ0L29ZDqE8X3/f
XrLe/9kT0rs8ERpQvm0zebrN4G/QqoP1FPgujbQlX5bfawZl7SHX2tRxd/zV
0/K25fZutll5nd4fdXu8UDnjPG7Hn/6lD3qLZ9CM+gTTE/Xz8Ts8atcm+DkP
eqjmY9j3qxukBwZTGzwmNOzVv4nXTnpt7HTtTnH2jLPjk2d9svI9D7310Dj1
nlMrrfqvR/5r1av4v/7yX8/Vwm51yVZx9+N3t+Q5XPfIdVX/420u3ybueWLJ
IBg9p7a8eMt4+ZEvLzW5zzxafV+sRuxIrMN5L37jvZaPQK/KsaBhxZ+sOZ2o
5RphzyeeZQ1spi9du+H1eW3pqyRJZyKWL94u34KvIJ5f93JvFnktapHUw8qR
68S1MEmS5qGF1DCKf9N69ox0if/vj6/BY9x889JLh56kH3mvYmV0k54l9Kj1
i2/ib/DmaB3+nr1rX/tR+rJRfijtqg+QnGiPSR+rhZUjzJflechV5sXWvYjg
b6qdlfvXav/GXozPbW7MYKDfvabu67z3bNNNi17lVculpmcd6+22K7pSfiXf
WZ2g1yj+qRbQ66ZVeUSuIZ6j96AZPdD9+HteXT1RjyfeOlTaQq60uAdtTssM
dFbSWNCwO16zY7z22NfGr67+VexwzQ7xthPfFu8++d3VrB01sJ8++9NVb6Wf
X/Hz+NiZHyu1sBNWiD9O/2PLamFrDbvFn7eoZtPWPL3w6fjOxd+JVx71ykpT
z53/RHVOWxdoVvEwfZL4lupb77ij8azVsYJ4jTwUMbhOnIdozeCxWI+TJOlM
+AR6fNR9QvXOlPPm89+XlrVnkWsnn0z/UT027DeSJBl78DrUjNGU4lk8UbXy
PFJf5dXyQe2ZmomV0Ufy++hUPpw9qDpRe0+/P5R+iXpPGladLd3Nx1Ubq3aV
ZqPV5LyK4dV+4WCgpR2/nvST+k5+smPR20zbvuAxOpZ3N7DErPler95bPGpx
TVrVse5JZ7a6j00z2G+LUzSbr+6Y8tob3V89IK9errSYiPjEQF/TWNCw/NfX
TXpd/ODSH1Q6kgfL+7xz7p3xyDOPxOZTN4+VJq4UHz/z48/NjG2mFtZc12Zr
ZR96+qEqh5nn+6db/hQPPv1g9bu3z7k9PnvuZ+ONx78xTr/39Jj/7MIqPiHP
lo51zg9XD/TRjs+vvmV8yp76bLc71kk+c6fNC0qSZGnUFNmfyR2Tn6f+SS88
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
dxwVH57y4Vj1iFVj+QnLx9tPfHv8+LIfxx9u+EN12/emfWPyvZPj4acfXmqm
bLIE2lW8TmxMfbo50mOt3rUv6FexwtHUHyFJkuGD1pwzpzX7QDMlNtig9DPO
uFiSJAOBdyk392UvK7Op9eWRE7rqqkWXyL9Vgyr/dqRnfek/Zf7o974X8Y9/
LP0zPgn92tMWnZ9Cv6rbvGUUjcr0nOUo8i/lbvN/hnuOkWO31VYRP//5wOpS
xDvU8775zaXXTStJDds7+hFvcdEWseKEFeOFh70wXjTuRbHs4cvGcocvF8tN
KLeVJ64c7z/t/XHOjHOyNrYb8hxoV7129eYW3xqu2FG7MXFi6f2WxydJ2g/a
U/7uYPpF6pdx2WWt6Tlpbt/73x+xxx5l1kGSJEl/Md+L7/ryl0f8678WL82c
Vb2Pdtgh4qKLhi+ftS/oIzN0zHjpqXdTT/AP9KniNdKJyRLEVM1ZUu82EP38
n/9ZYh6Ob6vjA6lhe+fxZx+PvW7cq+pB/Ibj3hCvOfY1scbRa8TqR60erzjq
FbHaUatV/173tHVjyt+nPDc7diwjFqd/udiRHk2XXlq+PvHESD+z0Y2a+csv
H/lYZpIk/Ydf8cc/Dq6eXc/JU08teniwTJhQ9gz77NPaPpBJkowd5IWZuUqv
6hEnJkbPyM0dbf2crL3bblt0d3+1ll7LfEIzbMQik9bA95b/rC+VWEire5am
hu2bB55+oNKnh0w/JPa+ce/YddqusfO1O8dO1+4Uv732t7HTdTvF+NvHx4wn
Z4z0Ux1RaFRriDxhtebyHuQOj5YY3WjHbNhW1wokSTI82Nf99reDm8ugnoCO
bUXuLz39rneVdaUVmjhJkmQ0I+fVnnMgdWo/+1nxmNWaZu1F65BXKN/cXB21
yq2OD6SGTQaDPsLy4+VeqHOVV+JmHzc/Lemmsfbuv//z+8EnSdIemPO+006l
JmugmFthvtZ99w3++fzhD6WPJX8ha+yTJEkaYx/7la9EvPrVEUcfnfVcrYSv
pS+D3spbb936OW+pYZOBIM5V5wqrNVfHyUOUszaSfenaFfVvNKy64SRJ2o9J
kwbvw553XsSBB7ZmvpZeTm95S8Sf/lT6dSZJkiTPh++6ySYl5qeeK/ewrYM+
ePe7Sy8ws8pnzWrt46eGTfqDvZBcgCuvLPstOcM5G2fw0P72rt1nmiVJ0h7I
A1Yvpj/nQDEvQf1qK/Kt1K+96U1l7kX2IkiSJGmMWotf/7r03e3ezzgZHHoL
6gH2mteUnoU871aSGnYJc+bPiYefebipvkwLFy8cM3N0vEway96MdrXPMnsw
89Nah5ka6tdGy2ztJEn6x+TJEdtvP7ieltbW3XYbnJdbs912Ea9/fcThh6eG
TZIk6Q09qsQOR1ufqnaHZvjRjyK22abU2bRaNqWGLTz17FNxzN+OiV2m7RI3
zroxFi3u3VicPW92PPnskx2tY9Wz0lY+2+bi8F3lC+dc19Zj7TzkkOzpniTt
yllnFd04mDiUma7ykVvRu9GewfxGM7uyr16SJEky3NARNIT6GLNuW81Y1LCN
PNS75t4Vm56/abz6mFfH+NvGV/q0N2bPnx33PnFvpX07CbXscinsw9S66i1M
u6rTzDr3ocNnXC+XweQhJkkycugJoLelGdgDRa7VL35R1oNmEE80B9Ecie7h
VLFvGlaf41y7kyRJkk5jLGnYRf9cFHMXzI0nFjzxPJ912qPT4uNnfjxWnrhy
NT9HXnFf/OPJf1Q6dt7CFid4DyNmkaqxlrtmPvRll0Wce26Z92ze4YwZQxM7
SZbGPKLDDmtNDmGSJMOP3hU/+Un5LPeF2LSci+45LXob//SnfWtYvqp58/o1
6ZOhl+a99y7dl0APSDVIHlPPuCRJkiTpJMaKhqVfH3r6ocpvbeSdXvfIdfGx
Mz8WK05cMfa4YY+YNa/v5ln83Ftm3xL3P3V/9fjtgp5r6lvlq117bcSFF0ac
fnrEqaeWf/P8syZgeOF5672i13OSJO2H+N+Pf1xigX2hd5v7XnPN0v6pegLf
p2GtwY36Y9Kvp5wSsfHGEe95T8T731++7rHH0nMNv/e9omH1S+bTJkmSJEkn
MRY0rLzhGU/OiOlzpsfjCxoXc173aNGwK0xYIXa9ftd4dN6jTT02rTt99vR4
bP7ob3BkT8RXtccyw1XemnmE+jPNnJm9hUcSs3XHj2/9/OckSYYHvSv++797
no/FC/Uz99O/bZ11Sv1rV526++4R3/9+xLHHFu0pJ0a8scYabc3ecMMyr0Af
5COOiPjMZ8r39Cuo+c53ItZcs/RLbnUvyCRJkiQZacaChqVHr5p5VTz89MM9
3mfaI9MqDbv8hOXjd9f+LmY+M7Ppx7/9sdvj7sfvbqqf8Uhg/yLPjFaVI6x/
phlYcohzDtbowPuhf6j3KUmS9qM3DUu/nn12yRP+5jcjvvGNiHe+s/Qh7urD
mu/w+c9HrL9+6Sm87rrFc63rWfm3fu5nO+4Y8eCD5ftqaHmx8pmt6bTuFlsU
DSu/Zv7ovDQlSZIkyYDpdA0r31etq9rV3noNX//o9fHxsz5eadjfXvvbasZO
s8xbNK/6/f7o3uHAvoUmUjcldi9fWI5a7mdGH/o+6x8qjztJkvbDOttIw9Ko
euPJ7TX7Vc3sRhtFvOMdZb521/v98IcRb3xjyQGWI6wn07e/XWYS6Evw+99H
vOENJY9YPo3fMTdH7Stf1+P5njX+a18rjyNumT0NkiRJkk6j0zWsWtWbZt9U
9XLqjcFoWPBi1dqOBi+29l1r7Wrmgz1Q1riOXvgnNGzO106S9uTSSxvXw4pL
mXOz007l8+2z/rnPlVxga3QNr/VLX4pYZZWIj32s6N0PfKBoU7UG6gw22STi
Va8qdbNz55Y84+OOi9hgg4gvf3lJLyi+7+abFw0rHznrRJIkSZJOo9M1rBzi
+566r8/71fWwNOwO1+xQ9X/qD/pEXT/r+qbraFuNPYrcYH2auvqudfw+Gd3w
aY48stQrJ0nSfugxQKt27UtsXTYz61vfKj2f9IHXd+nrX4/44AdLT6ca/dw+
8pGIlVeO+MMfSu3HJz8ZsdZaZX1QH7v22hFvelPpZeB3Dzig/A5fV85wPQdW
v+PNNis+rnzlrBlJkiRJOo1O1rD6N90w+4amdOXVM6+ODc/YsNKwO16zY781
LPQ21jtq8T+HfsNgbySH7L77Suz9+uvLHopu1Sckfdf2Qj9ocxzv6zvckiTJ
KES+i/mwt9yy5Hs+z//5nxH77VfmuEK+7xe/WHSndbtGzq8aWbrTevDAAxGf
/WzEq19dHnv77SPWWKPkGm+1VdGo8o2/8pVSMzv3/081ErMUz9x004jXva7o
3+6zY5MkSZKk3elkDXvbY7fFPU/cEwsW9y3mLn/48viPKf9R9SXe+bqdn6tt
VetKz6qnnT1vdq8zdO55/J6YPmt6PPnsky17DV2hWeWl2SOpudIH6Lzzim61
/zEnZ86c3K+0IxdcUGY83n//SD+TJEkGwsknl95K5r7WyIdRl6revc7nPfjg
iK9+teT6dvVsd9454pWvLNp2+vSieeUcyx3mu/Jy5RnTpZ/4ROnZtNtuRQd3
7XFAy+r19IUvFA/XnO+8JiRJkiSdRidr2GseuSYeeOqBpu578YMXx3qnrxfL
H758NVuHbr1lzi1x1B1HxW+u+k1sc9k2secNe8bU+6f2OEfn6WefjisevmJA
Hm5P2JvQNXQrzaq2yb6I1yo3Tf5Zzq9vf8QizNN4oLnTNUmSUcYxx5S+wnfe
ueR7cn31W7r11vL/9OV225W62R/9aGnPVu+mFVYoj/HQQ6Wnwac+VXxYMUr9
jFddtdS96i3v591zbXiw4pjWEf2L9X+in5MkSZKk0+hkDXv1I1c3rWHPnXFu
vO+091U+7O7X7x5n/eOs+PbF3441j1mz0rXLHr5srDxx5fjQ6R+KE+4+occ5
s39+4M+VZ9uIBYsWVM9H/yee7ZMLnqxm13ZHTyZxdHshMXZ5ZXLJaFZ6Nutb
Ow+xCfVu9ayMJEnaC/Odf/e7ElesMe91221LbQfUpupdvPfe5b76F0CsUt7w
ssuWdcD/qw3R00nusPxjWni11SK23LLxHGn6WF2JPk/mfcslfvOby3UjSZIk
STqNjtawM6+OB59uThRMvndyrHPKOpWG/dGlP4rPnvvZWPWIVeNlh78sXnPs
a+JdJ70rXnHUK2K5w5eLT571yeqxG+lPWtis2O7oczzl71PiV1f+Kr7152/F
Dy/9YRwy/ZC4adZNMfepeVWfD/sSex15wnpX8ubE0PX5Sd3a2fDV9Rd9qHUW
fpIkw8hBB5Xc3q69xeUN06y0JX9Ub2K1sXxUOrbWtnzTj340YrnlIs4/v/R+
2nXXMgd2ww1Lr2P3p2f1dfrjH0tejpzjOkeHD3zGGUXD6nGsb5T5PV17HydJ
kiRJp9CpGlbdql7Dzc7IOe6u4+LfT/r3WHHCipVefdUxr4qXjH9JrH3y2rHT
tTvFcX87LjY7f7NK16521Gpx5B1HxjMLn3ne4/Bv/zb3b0t975FnHokDbjog
3nvqe2OlCSvFy8a/rPJ1Vzv09bHFKb+OKVfcFZddvqiKtatd0o9S3WvOcR07
nH12atgkaWdoTNqy62dYDFL/JfpywoSIn/60zMnhv/Jtaz9VrvF660WstFLJ
u5k2reQRv+IVETvsUPIz6Fi1tf/2b0Xbmr8jv1idrNrXeq6Pult9iM2hXX/9
8veSJEmSpNPoVA1LX5p188i8R5q6/+G3Hx5vPeGtVV/iFSeuGC8d/9JY/ajV
Y68b96o0KCbePjHedsLbKi/2V1f9qmGe8pR7p8Stc259rjfx7Pmz40+3/qny
eN943Btj3VPXrW5rHvHGWHbPt8aKO34k/nvSxLjl3tlV7D0Zm6SGTZL2Zs89
S182PmiNWTfjxpUaWJpSbyY5v27+XfchNyfnve+N+Jd/KVr4u98tWnXddUtO
sTwcaT96DNPB+j69732lL/FnPhPxy18Wrdo17qnPOf18883DehiSJEmSZFjo
VA379MKn44ZZNzynP/ti/5v2j7UmrRUvHvfi6kbDfv78z8dNs5c0jrzo/ovi
g5M/WOUXf/Oib1Z1rd059Z5T4/pHr4+Fi4sgPWfGObHBlA2qx97+qu1j8j2T
48x/nBm7XH5gvPOYD8Sy45aPL1/w5ap/1ECQM5YzdNofGvb441PDJkm7ss8+
JZf3yW5t6fWTv/LKUiPStf8ebSm/GJdeGvGe90SsuGLEW99aZujIA+46k6fm
0UdLjas+yG5yhWni7qUt8pP1O585s/WvNUmSJElGmk7VsObp0JLN+rC7Tdst
/u2Yf4tlDlsmlhm3TLz8yJfH+NvGLzUn58qZV1bzd+jbL57/xZg+Z/rzHmfS
3yZVc2IXLS6DFPa9cd940/Fvik+e/ckqt7mGT6wuVu7yRmdttNTP+oPZDPYq
OcO+vdGz64QToqqLTpKk/eC30qrNxhR5pvW8HXpWPSwfVp7wJz8Zsf/+g+/x
xr/Na0OSJEnSiXSqhgVd2Oycmx2u3qHq2fSCQ18QLxr3ospvNSenKxc9sMSH
/crUr1Q5w92ZeMfEmPbotOf6Pe1z0z5VDvEm52xS+cI16nW/d8n3YpUjVonP
nfe5uHHWjQN6jfpc6uuRPZ/aG7MzTjopPZMkaVfkUuhjMJBZrHrR08ByguUS
82Xl2CRJkiRJ0phO1rDXzLym6b7E216xbawycZV4wWEvqHou/eKqX8T9T92/
1H2OvvPoeMdJ76j6MeldfO8T9y71czWwh916WOX/1sgtfv9p74+3n/j2+OP0
P8b02dNjxpMzque28TkbV3/zp5f/tMd5PH0hV0wfj8wnbm/kIMoL7J43mCRJ
e0C/ds8jTpIkSZJkaOhkDXvtI9c2rWG//9fvV3Ng/8+h/6fKIz7+ruOrea5d
2fm6neNVR7+qut8e1+8Rs+bNWurnZsYeeuuhS9XQ3vfkffHjy35c1cPqcfz1
C79e6eUvXfCleO2xr403n/Dmat5sox7HzWD+jhmy2cO4vTn99IhTTy21bkmS
JEmSJEmS9Exq2OKf6tGklxMNu87J68SlD1261H0em/9YVb+6wsQVetS4ejxN
uH1C3Dn3zqW+f9XMq+LnV/w8Pjzlw1Xv47WOW6vSr3oV//rqX8c9jzcYWN8k
5oqaw5Aatr0xLzI1bJIkSZIkSZL0TSdrWDm95t/8s48CpfmL5le+6AsPe2F1
2/IvW8Zdj9+11H2m3jc11pu8Xrxk3Eti7ZPWjksevOR5j3PejPPixLtPbFiD
a07tuTPOjYNuPih2mbZL7Hb9bjHprkmVT9vX8+sNvYBSw7Y/5mzQsbNm9X3f
JEmSJEmSJBnLdLKGvfvxuyuPk0btjTnz58Qm525SebD6Oe13035VXnDNE88+
EdtduV2sfvTqVS3sVpds9TyNiyNuPyKm3j+1muszXOgFdN11qWHbHR6sfOKu
syWTJEmSJEmSJHk+naxhac/bHrutygPujTseuyM+euZHKw2rn9OJd51Y5Rdj
3qJ5VV+mdU9dt5qpY/6O+Tnd61efevapOOSWQ6q5OoPxVfuLXkA0bPZ0am9O
OSViypTUsEmSJEmSJEnSF52sYWH+zaPzei8yVPuqdzANu9LEleK0e06LpxY+
VXmtcoM3PGPDWH7C8rHs+GXjqxd+NW6Zc8vz/85jt8Yxdx5Teb/DCd2jp1PO
1mlvUsMmSZIkSZIkSXN0uoalKWfP710YXPzgxZXPSsOuMGGF+MllP4kDbj6g
yhnWg8k8WHWw65y6Tpz+99Mrb7Y7F9x/Qfz1wb/GEwueGKqX0hA1lDfcELFw
4bD+2aTF1Bp2zpyRfiZJkiRJkiRJMrrpdA0rj/iRZx55Xg/hrtwx94741Nmf
qmphlxm3TCx3+HKx3ITlqj7Fyxy2TFUD++6T313Nd/VY3Vn0z0VxwX0XDKq/
8EBRR2k+7KJFw/6nkxZiNqy88NSwSZIkSZIkSdI7na5hoSewetWe0PNprxv3
inec+I5YccKKVU2s2lee7GuOfU1sfO7GMfH2iQ31K3ivamrnLpg7VC+hR046
KeKmmyIWLx72P520kBNPLP25Huu9dDtJkiRJkiRJxjxjQcPqMfz0s0/32mvJ
PJzDbzs8tv7r1rH51M3jq1O/Gj/46w9i7xv3jmmPTot5C5+fP1wjV3k4exF3
5bjjioYdxjZSyRCQGjZJkiRJkiRJmmMsaNgFixfE3Plz49nFvTc+onF5qWa2
PvTUQw3rXhvB4+3rsYeKY4+NuPnmEfnTSQtJDZskSZIkSZIkzTEWNCzozL7m
xLYjxxwTMX36SD+LZLDQsGedlRo2SZIkSZIkSfpirGhY8Er1X+okjjoqfdhO
4IQTIs4+O2Lu8JdUJ0mSJEmSJElbMZY07OJ/Lo6Fixf2WhfbbhxxRGrYTkBd
83nnRTwxvKOZkiRJkiRJkqTtGEsathNJDdsZyAm/4IKIJ58c6WeSJEmSJEmS
JKOb1LDtDQ2rL3HS3hx5ZMTUqRFP9TwCKkmSJEmSJEmSSA3b7qSG7QwmToz4
858jnnlmpJ9JkiRJkiRJkoxuUsO2N6lhO4Px4yP++teI+Z3XOjtJkiRJkiRJ
Wkpq2PYmNWxncOihEVdcEbFw4Ug/kyRJkiRJkiQZ3aSGbW9Sw3YGf/pTxDXX
RCxePNLPJEmSJEmSJElGN6lh25tmNaxxQjw+9Zbmtzz+eJlF6t/z5pWfJyPH
IYdE3HDDSD+LJEmSJEmSJBn9pIZtbyZMiLjwwoi//S3illsibrwxYtq0iGuv
Lb7eVVdFXHllxOWXR1x8cZlBeuaZEVOmRJx+ermdc0752WWXlfv6veuvLzN7
br894u67I+67L+LhhyNmzYp47LGifZ9+uujfZ59NDTxYUsMmSZIkSZIkSXOk
hm1v+LAnnlh0LG16yikRkyZFHHVU+Zl+t27+7XtHH11+7nbsseV7+gmpx6Sj
/vjHcpPb6nu+jhtXfv+448rfOvnkiFNPLfrX36SLL7oo4i9/KbdLLin9iS69
tOhidZ60NG1MX9NqvGOa+7bbIu68M+KeeyLuvz9i5syI2bOLT2zOjB5HixZ1
vkZ2nMUfkiRJkiRJkiTpndSw7Q09SfssWFC0nnxh/65v/amv9Lvyix98MOLe
e4sPS4Oef37xbenj448vuvfww5fo3oMPjjjooIgDD4zYb7+IffaJ2HvviL32
ivjDH8pX/7/vvuXnXW8HHLBEM/OUaexaK5922hKNTKPzimuN3Js+9rxvvTXi
jjuKNq495EcfjZgzZ0kO9ZNPFp3MT+7PrdHv8KMdb8dwIDWtjmXWNSdJkiRJ
kiRJ36SGbW/k/j7wwEg/iwINzTel8eQbP/JI0cMzZhRNLN+ZtqQzPW969IIL
Is4+O2Ly5IiTTireMN+Y90sfd9XGdDBNvOeeEXvsUb76f9+vNbIbDe0rfUxf
85n5yLUHfcIJ5W/VfnLXG93c6Nb1PrR899/x/M84o7yWWnOb99pVd3f1puV2
1/r7oYciDjusaO8kSZIkSZIkSXonNWx7w0tUj9rp0Me8Tv6pXGO+aq2N77qr
5CTzMfmxtOLUqRFnnVX0Jc1Kv9bamOdL2/J/aeRaJw/mRi/vv3/RzvQ0fb37
7hG77Rax664Ru+wS8T//U/7f92lw+tv9r7uuPE91x0mSJEmSJEmS9E5q2CRJ
kiRJkiRJkqRdSA2bJEmSJEmSJEmStAupYZMkSZIkSZIkSZJ2ITVskiRJkiRJ
kiRJ0i7QsP8fcb4wng==
    "], {{0, 226.47169103862018`}, {708.6614173228347, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{708.6614173228347, 226.47169103862018`},
  PlotRange->{{0, 708.6614173228347}, {
    0, 226.47169103862018`}}]], \
"Input",ExpressionUUID->"a8990080-4815-4aee-96fd-3d6df3f666a4"]], "Text",
 CellChangeTimes->{
  3.879456309067049*^9, {3.879635721476503*^9, 3.879635727260026*^9}, 
   3.879636165994405*^9, 
   3.879636202738356*^9},ExpressionUUID->"9aab4917-cf82-401b-bcdf-\
cff50a941f03"],

Cell[TextData[{
 "In principle, one could cut out the intermediate node ",
 StyleBox["Y",
  FontSlant->"Italic"],
 "  and combine the two operations ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Rule]", "Y"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "85662784-3256-44be-9f43-648fa2204ab5"],
 " and ",
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "\[Rule]", "f"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9aca1762-7039-4eeb-9b65-8aaef979ba53"],
 " into a single operation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Rule]", "f"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9dc6b761-70ea-4a56-a05d-24903251792f"],
 ".  However, I think there may not be a layer that directly implements the \
function  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{"ln", "(", 
     RowBox[{"1", "+", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "y"}], "\[InvisibleSpace]", "u"}]]}], ")"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aedecba7-9148-4897-b7fb-a03e9176edda"],
 ", so one would have to code this oneself.  There is no real advantage in \
doing this.  Moreover, the node ",
 StyleBox["Y",
  FontSlant->"Italic"],
 " is useful as a measure of confidence in the decision."
}], "Text",
 CellChangeTimes->{{3.879636312241824*^9, 
  3.879636545835682*^9}},ExpressionUUID->"6d68a275-e98d-4909-9859-\
e0c41c9ab198"],

Cell["In other words:", "Text",
 CellChangeTimes->{{3.879440600374241*^9, 
  3.879440602087389*^9}},ExpressionUUID->"0f75720a-e234-4777-bb50-\
b5cdfb7363c5"],

Cell["SLP, GLM, and logistic regression are the same thing.", "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, 3.832098392759328*^9, {3.879440604253366*^9, 
   3.879440614561019*^9}},ExpressionUUID->"3f6bbd11-afd7-443f-9625-\
f734456d4e3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Support Vector Classification as a Neural Net"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.879436487693315*^9, 3.879436488001227*^9}, {3.879436541352969*^9, 
   3.879436549009787*^9}, {3.879451967977507*^9, 3.8794519794714317`*^9}, {
   3.879635748293866*^9, 3.879635755875836*^9}, {3.881750250923628*^9, 
   3.8817502513027782`*^9}},ExpressionUUID->"dff90cd4-7c08-498c-a2d3-\
932b6507b8a6"],

Cell[TextData[{
 "Support vector classification can also be represented by a neural net.  The \
main difference is that in SVC it is not necessary, nor convenient, to work \
with the mean ",
 StyleBox["Y",
  FontSlant->"Italic"],
 " as an intermediate quantity.  Instead, one combines ",
 StyleBox["u",
  FontSlant->"Italic"],
 " and ",
 StyleBox["y",
  FontSlant->"Italic"],
 " directly into ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{"ramp", "(", 
     RowBox[{"1", "-", 
      RowBox[{"y", "\[InvisibleSpace]", "u"}]}], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6b777ffd-5f99-45db-b4ce-8974361bc335"],
 " with arithmetic operations only.  This makes feedforward and \
backpropagation faster.  "
}], "Text",
 CellChangeTimes->{{3.8796357576479797`*^9, 3.8796357617484903`*^9}, {
  3.879635998839388*^9, 3.879636102722748*^9}, {3.879636555371805*^9, 
  3.879636731547502*^9}},ExpressionUUID->"b749d63a-665e-4c2e-a4fc-\
a87feb74f1e9"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQncbVP5xx/XcM1TZnGv6ZrJkDG5xkjJEJJZpChJNAshJIUKVwr5k5Sp
UKYuyUwoRaZ7UynJkDHj+e/vs55zzj777H3O3vvsfc4+513P57Pufc8e1rTX
etbzW8+wltr3Mzt8fJyIfG7W4J8d9vnCJoceus+Xdpw3+LHTwZ/75AEH77/f
1gcftv8B+x+63r4zBhcnzSByVvDHTOJp7FEt+Pq1BYM0c5AGXRlPnjxVimoJ
Ke39ftYpT136WW9Pnjx58uTJk6exRLUNg/TLIO3k5SxPnjy1Uhk4sxdsmBVj
epzpyZMnT548efI0GKodHaRngnRMdjlLZbOlg7RKkMZ5Oc2Tp1GjbvitLJzY
y7seZ3ry5MmTJ0+ePA2eaqcYzjw4B86cM0jfCdJNQZro5TRPnkaNisSZvWJD
jzM9efLkyZMnT56Gh2pnGM48IAfOnClIuwfp80Ga28tpnjyNEuXFdUmYrSyc
2QsNC87Mi6M9efLkyZMnT54GRbUfGc7cKwfOJM3gkidPnkaLisSZReggy8BX
RedZFhb0ONOTJ0+ePHnyNGxUu8hw5s5eZvHkyVOT+okz89alVypTN5pFt9vp
fre8Pd/25MmTJ0+ePFWRar8K0n+CtNXwySsNOQub3cWDNGM6uas2b5DmKL9+
njwNM1UJZybl0Sv1C2d2649OeWXN25MnT548FUtF8FvPtz2NRardGqSng7Re
ueNe4wRNsfKw1V24ILlu2yD9IUh/C9L1QVotSHMFaZH2uVxbNEgXBunRIP0p
SCeKxjLy5GmQVMV1p1eMmQVnllmnrHn2Qh5nevLkydNokseZnjxlJ/WtfDBI
TwZp2XLGvc6nSUG6L0hPBekRw7WXSOxZKI05uEKQNg3S6hKre9RnlgzSY0F6
NUgvBem/QXogSDcYjlzWnh3n8qj9xp6h/CeCNF003q4nT4OkKq49HmcWX69O
z3erU7f8PJVLui+6ULXmqCdPnvpDRa3RVVzrPXkqk9R+FLz11yDNl33c61wZ
J4lxgDT/dxvu+7c09Ie1O8Vh2/Vj5C/u/zBI06xe/I++8sggzRLJ/3TDl/8U
Fy8X7AqWfT1IbwRpa3vuEsvzv5bne4O0gDgd7vYZG+3JUwlUNR1VP3Fm2raO
Ks7slF+3MsL3PZVDtRWDdFeQ/hiklX1fe/I01sjjzOGtt6fBkq6Z4LKHpOHb
mOn9mYN0UpD2TbjPmSfoL8GY+IHOZOP02CA9G6QTIrISdfi/IP0rSD8L0o5B
+myQrjR8uHvo2fnF6SPBmd+xa+R/T5DeFoc117XrN1odwJlfy9hIT576RFXC
mlXDmUXUIU2eWSlPXbL0VbdyPJVPte2C9HKQ3gzSjzOOWdapPYP0HnH2QyXX
1ZOnsUhl80SPM4e33p4GS4rjwHu35nwffeXDQbo64f4h4mxa/x6ktULjdBtx
MW5/1Ryzen0Pcbj3liDNFnp+Q3F6zcNCee8XpBft+eVD19GVvm33VrBr9wfp
f5bHgvna6slTP6gqWGJYcGan+3nyzEqd6pWlP5LudSvHr/nlk65z+P+/YWvI
/CnHF7Y+PwnSP8TtleawGfLkyVNnyssPszxfBM/VfaYhPWferzue8lLtOHE6
vgtzvj+frbs3xdwjXWxr888i9/C5RL/4e/vN/JvDMCKxbzljBZy5la3TlIF/
54RQHlcE6RVpwciaD/a44Ezwp2FKzRP95o/ztdOTp37SoHl6ERgzrs69vBv3
fq9URF5pMWavODMpT7/m94fUboe9SvSan+re73r/I7a+8t6vpWHP48mTp+Io
Dy/s5fncOHNVcfZ6Od8fJPk1x1Neql0apBeC9PWc7xMbYXqQbou5J3YPfLdl
5B4xh7CNfdCwIX6adxluRL+KP+Wf7Blw441BWjv0/iziYsay5n8zdH2lID0n
zr7pMXuOuLPoVF8L0ofytdOTp37TWMeZaTFWUe0sIo9uODNPP3Urq0hZyePY
ZNJYdk/benabdLSB1T6bJ0h/FocxeW9d35eePOUlnTvoAj/sZL7aaUHaRxr6
wV55YVbemKsN6wTpd9IWZ2QYyK8JnvKQrpPYkz4fpF1y5rGMOJug2xPuYbv6
Svu80jUbfSM2t/hkosucKg4f4m8Jhrw7SGcF6X1BGh95f6I4fSgYebuQbEec
of9amffZNWLWvmHXFs7XTk+eBkGD4u1l4cw8eXd6r8h29ppHmjJ6xZmd8stb
ftbnxippP7BGsV+Jz8eKXcb4qbbmvOL+9uTJU3bSuYS+4NPi9BLPm4z4sv19
dkj+I82Qjmel5YlJz+dqyxribPbmz5lByaRtmz2+jX5d8JSHau8UpysEr62U
Mw/2aNmrjbOb3TW0Jktkzq5m5f5F1IdFr6HDBDeeIS4W7Ljk8az7Qs9Z3qvZ
M5yZ+We79oyTCfTZz4jDry9IYlxcT56qTv3k72XizKz5d3qnVyobZ+btp271
ytIPHmcWQ9oPnxQn36KjPKGDPLaWrYuv2Ro3b//r68nTsJPOJXyzLjV5rx6P
g1iPj4uzU7ukOQf1+S8F6eAOvBPbOfzF3tU6f7Pw5Nw4c01RXzFk77JJ8fZc
2eqrffML68NxkXsJyZOnTlT7gM1d4sGO7/58bB7YLZida9u9r4jDd3+PWYs5
VwQseH9ont8sDgsemkJ22sDKZS1fMsRfyJMYQsRs+Lk9e3SQ3hLd+/LkaVip
Xzy+KIyZpn5Z8im6/UXl1W+cmTU/jzOLIe2HBcXtzWI7yznNM8X0IdduFIdF
Wc928f3nyVNW0rkETuJMvBdNtiPWM3ZyYE/0glPF6STC73xX3PlDC8Xwwk+I
8+XivfEJ/BL7OuTLw4L0LZMfJ2fjh4lrGGf8IfNOzNMj2Ygz/ZQP7Zie/9T2
EhcLBR3xzJF7CcmTp06kcQ2Yv9fkfJ+EbRC2CyfG3OceOPPhmLX4y/beVaE5
eJOty4d1Hr9qQ7G8OPyK/cS5QTrCfiMDYGd7tzRi/uB76nGmp1GgfvD6fuLM
tOUm3e+FysaZvfRTWTizU51HHWcWNmbY7wdD4p/x3ph+/ZitqzxDPHV/lkkl
SWMITxh0LTwlkc6ls0wmJE7HJ0P8CH0leomlY9YI5D+w0p6R6x+0fMCru8Ws
L5zRh+/nhUH6UZAODNJm4mJ5XSQuNmW3+nZI+gz6QuKOLF8+T9BYJd+TxjkP
qd6hD9C5Lpp+fchcr5zveRpO0lgGrIc5z5PU8UIMvWfdvG27D/Z7VVrOLmm8
N0Wc3cNuoTn4A6vPdRIbl0/txtFdzmq/sa+t21Kw5mOHe4zdO0Dc3tecQfqi
OJz5Qr52evJUJSobB4xVnNlLm7Liwej9Tu/mqXOavLrVd9SosDHzYWniyHMi
/fYOcbEFsJdFpl1xdPtzmEllCfRhnMn9wUHXxlOUdM5sLM5GFlz4qcg8Q/Zb
NYHfoetEt3F26Hmu4VOFrzQ6iFki+XGO/E/FxYJdJ4anot88ob2stjp3SPoM
uJWz6lfJllcvVPZ6maacuGc9jT7pfsU/bA5vZPNwcXF7IOy5EDtnC3HnVi4h
sX6N6j/5R+MFq8XcZ80F402KGY/Em+XMkhlDc3BtcTpJsCN7VZ+1eblDkA4S
tV1oyR+7h/2DdJm4/aYdW+tZW87K2V2cXvVFV54nT8NORWG7rPkWgcmy1iHp
Wpo69yIX9NquvOtyL23ttMbn6Y9RosLmBzHr8DXBdvYJaZyJqQn5l71V5NkE
/82xTNofrNszlT/W9DshN+wt7XEENzCZgP3n80oo3FNPpGMCuQ79wc+kLbZP
Uqyaxru3War/PlacXzUy4H6RZ7cVZ0eLTe3MCXwXGXLX3tYTfeaDxjtWS+bt
cXnlpcR6IJtzVj062rk7P9stryzvhn97Gn1SmwLWwv/ZWvlPcb6OYDzsFF6y
xDwH+31P2u2157E585Dj6T3XifQxy/NpqxN7UPh5r9tDvitYXmBijzM9jRD1
goOy5Je0/mXBPGnrlrWMIrBXr/mlaUe38ru9l/abdKtL2vqOmixQVJs0n5Ol
eZbmAXaNuCLY1KDLxDYuYwyOsUCKF84N0hesb9jHPkfcPvFmBX8jcAFxGpBP
1ojc31fcGduk4wso0FNuiuWPnFWCvZvpMLLwZP19tbj4W8zB+Swv5iW2BiFZ
VfcbbpWGTWwi/2S8vCM7/2zj1cjdnLe3avKaEJdXXoqtC3okZGHkfGwRsRPu
su/T6zoZ1zZPo0/Yyuo6+YbNv3r6n6VXQ/+DN7FDmBjJg70f4oB9M7aI7HWq
J/y3iVH0IXEYcVyPc421jbi4KxZTT0+eqkhF4ISu62TGFJd33vJ7Xet6LSsr
5X2/21rd7ZvkrUtR7a4qJbUnTzsb53KxZt5ma9Svpem32UVuLYPavt1s4uIW
zSuZ4qw33t1SXKwE4vntLc7Wb1yXflxMmv5dxGvhLIqJobFKvuwjE4sB+2P2
uF+0xN8bFNNnWpez7Xuwdx7FmeeJw5joM7croMAxTr3wjti1grGG3fn90qLL
TI1pLhC3x4AfJL6c7Achy4b2FFQneo3Eyq9p+W/W9aN2uDjf0ZgzkbLy9G4U
Ww/64zFpyvXsiyHDz9G5zCzrTuMa+ACMP2P+seFpuEltYeG1vxUXz+tKcfsa
Z4o7g/Iocf6V3xD1eSR2VVsepDmlYWvgafRI97nm9t93GKgIjNRLHp2e7ZZX
0tpVRErb1qIpT/9F3+uWX5Y2p/kGvY6fKlO3dmfO7xKT1/A9OURcXDtwDfEF
OuCxIknLwMeFGJs/ERejCJ8T9Kn4HmLHg1z5Q7dWp8oPnHintedVadoB086f
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
+Xp82FdNRkIuZT++fq7XT9O1Xfkj2Ay5Dt3eOp3fSapzrvaBn5AV0SVgq4dv
JPFmOc8DmRe9CDqUFSWVXa3mOUGcDI48iH0euoe5EubjLuJwHLLyos1nNB9k
WXDmv1vrr7rFuj3tipF3fifF4czv2XfkG9uegeKLB+ybY/P3muszT8VQL/O0
a57gS3wDwU4pzgxSnRbf900bo+uF7jFv2Es6PD3/SNU++Mjd0nYOn947y+YV
Osmf2/Wf2PwgjhY+yezb4Ic0VRTvNWxrD7BxjD3trNKx7Xoe7V9tfN+dUP/v
2DwDE7/D7i1h7/06Js+drO+/Grq2qLWFfTpw0302356Q2HNGtdwPiuORf2uW
WxRp/vh6w/8+2/4NqkBapxvFnV866MoUQBrTaaVB18LTKFADZ35p0DXxVDQV
LbvnLTttXXpNVaOs8le/21lm/3Wqd0/fGSyxnLg9eOQadCHIcZ+wtJ8lZCrw
0VGhMcgeOPZqYEbs2Wbr3m4tkzzQnSB3xZyRkKZdadrdkhd1/Z2VS4rGmK3H
fEXGxh4O3DxPiraQsIkjRut/LaFbAVNGsGrjDFHK2Dv0/mxWNjjzrsi3RWYF
YyL/LxZpe91u9ojex5vK0nWcyXhAJrrQ6sW1adZPv+mel6d0lIc/dZr7bc8d
JE7nxrfrIKvrsxdLU2/+VzcmG/exOwU3faR7vdLyPsVd2GNfkJDXvlZ3cNlZ
dp0zW540/nGcpU+Ji3sRinmhvpPMse91ro/6a6LTe9jK+UVC3+LL+ZzN7Q/Y
NfSe8LzbY/L9ofGQjULX1rMy/mFtB7NiI/Db5Dqqnrdua/uuDp2Zgxptm0ti
z1upAilfJBbvBvY7w5nGVSS1/126+3OjROprM5vNtQni1kp4ETGvPiRur4N9
oYMtsZ/92Zj0GZvrnxQnnyCnsDYSrw+5ZWvLc7NIep/N2W1FY4vpnhvvftz4
4yGRVC+nLvtQv02s7sx55JV3Dn4sar/iP+Bx5shRUfitKmnYqOj2FNkXZfRv
mvam6Q+1Q1ve+CU8Gn7+RXGxMQ4UF0+De6yDYCH8kBawBE9Fdwne+ENMOUeL
wx//lI6YsaVNF9g7j0vjTPKs7c/yjD5HOcQKARcTQ4QzKok3Aj7Exg69ArJh
Xa5D1t6lS2PC5SGvHS/N+JR1uXVC6Fl8oK4J9eU89i561PqZJudF2lfHma+1
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
D3s27DbAlHZOk8ox2Dlgk3KJXZu71G4ZGYqV5cHvxE2vny+xQSjha0VsnPqZ
t/yun5Vb/593Fopfg4ZhDS2KUuOUglKavLOW162OWamMNnV6J2vb0r7TUga+
VGAq9swi9vm6t4IvPT5m+AaAJZFv0J2cac+w54Z9Cj5n2GotYPOP/Xb0IDO1
1q3qpH0FpoZHPzD689zT8JKucezrTJaWve3SykPuwcd08/g5URSfLZuqWk+t
B7qIr4SunSgu7ht+5eiXN7Xr2Pmit9w39Czx/LAj+UmkbehBwJl32W90w5wd
EzrfRmM+vGDPfTahfqwVyKpLV6O/eiXF7xMHXQtPZZHa+vejHGxH8Ls/K0aG
u7I5n1V/ydxkv8jijWksuH/Y3A2/ByZF74id/hfE+b3zHufVcX5DyLdf7Sss
1nZDHwaveMP4BL+XNH6BXGN63m6x4cYyKVZnvxV9Y93HsW6ryv4UMXCw68CP
kX3e2UJpDvsO77D/Z5MWO9auZXdJo0T9wJl56pAn737hzF7zyfNcr+NP447B
e4iREXMWmsYZ3EucLwF2WvBS9sV/Y/fBkd8Whz2va/Iv3XOD1w2Z3anW/0br
k5tHc257Gn5q+CSDDdgjOl9KPwtN9aWRPXBdZ01eGZZ1sap1VJ0F8urXQtew
f0VH8ajx3boN697i5MZvhJ6FN2NHsn9rm2oHi8OP91l7KQd/9ZCdsdrtPWPj
6ciE+hGzBFl38er0WS+kONPrM0eW1C6pH+Vgg8oee0zcIdU/Hm5/LyJOz/iA
NO0N9jc+vm1kzq5vc5Y4E4/Z3AUfLhzDv9BlEsPtwNC1eryKC+03vsj4RmGv
sMdozN8ySe325rC/B1F+yjTslAdnxr2XlNew4cyqfu+eceb3pRl/bNaY+9hs
sH+9ufFHbGjRXd4ZeuYCe9/sVHQ/5wnjfROGaz7ovtOD1ic/Ha66exobpHs3
yB7YQLHfDc5Ej7VNf8erznX2qZYJ/Y5JVaOq1lH1HezXhXCenlONLSz2IQeE
rsOPie1zVujavXZttcjaG+SnNrF32m9sUH4lDTlKnyPmD3bRyKInJ9QPmxZs
chcpqMEDJl3LfIzNkaW+4Uxia+PHvlOM7Mm5Qp+2v7HzAv/V7ddJn7Fr72t9
V+3I0EeCCw+Sxn59lF/p72tsXtZ1mchf08Xh1Fvt2keNB7CPtFF1eF5VqR5T
e9Drw6jjzTRtSYMppcv9Tn2UBqem6ftRxpnSY/lqjwWmYp86GlMCXeXd9vdm
xrvwDcK+P3Qeuur/8M2s24Lg0/lP459LDL5/ooQ8l3hvfqs7fdIn/w5PnrKQ
xpJAhgBj4uuxvc21T/d3vOre+g/ay1S+wf7SjNWcP1Xj33Vq+FceG7qGzg3f
+WnScp66+v2wj/d/9nt248Fgxdki6yMxSpBXf2W/0aUQk3KeUH5nitO1/Fca
PhFt9TtKnN4mxu5lGEnnjceZI0sa63XG7s/1XM6e4nDmGhG5c1YnP2F7oL/X
trn87dD8/IrN2w0j7+5uc3GadIzpppgSnvHLED/b1Mp9xuoFb2Af6RVbM1aL
z8tTk9Bn6v9Svb6qKg7JQ/3EmXmwYrc6Fr0HUGWc2QspzkQv8oeYe/h//cba
iG/mw3adcwbuCj33oPEzw5RqY/u8ySTjq9U/SecW6D0SNvns+b3s1ocq1d2T
J0j17OyDoPvClnUtk0d27u94VT+VKe1lKh/gzKV3VnP+VJV/6x4XPDNsC7uj
ONu530aeRTeCzUgdZ3KmHnrtiE+5/k0cTHQZp9lv7F5vcuU1nuGM0YuNb1+c
UD/8RJFpFyisyQMlxZlLD7oWnsoi3SeOsdEqvJzjm/OiRQZd1MlVtffb74+a
XLFbaH5iC4uP0ZqRd4mfTwygpzrzUZXR2FsKneGifvQ/MP4AT3i3lfOq/V6y
OjyvqgTO1/+len01SlikCJwZfS4p37R9lgZLdrpXFs4cZlLZAd3IL2PusQd2
vrUTn3rDlmpre2XoOXw78UHH5hSf6HtNrvlJtfpI69KJZ5PONH7MXuDK1am7
J0+QzrE/2Bj9iV1DJiEORJ/Pm8DvqGVvfj77H+y7gvvfU3qKxZlHibOfOyPy
LLpkfDbPtt/Ep0BXcWtkHeQ5dN3oRuqxJyeKizdU96t9h73H+ZjIodck1A//
zD9Jix50mEntHJfo/pyn4SS16S85pqrOJ2I33xYjg65qfHk9+w0WRKcYtmvH
tne6uPODwu+yH/6wyWZfT5aj1FcCnLqLPTODyWeftDnOvP+s4x+qT/inZD7n
bSwSOmr9X6rbV3kwVJUobX3TtiUvzkxbr7IxZqc8h53UN/1giT1HrHaONOJn
184N0qV2Hb8WzhvGH2BN42XEL5xs8spLxs/Wq1Yf6f715Pbv1/g9QZxMhv6A
uJoVtfvzNHZJsQhjlH3xehzDyeJidPV5vGrcmWNC82i2PhY+gtSwmz0pdO3z
4uwrPhZ5Fns5MN+p9psYIOgir4vwtQPt/SeM14vxOWRQs39V3zDsaNFzPup4
eGz9sGnBtrYPOqJ+UO0jMjK+pp7aSfdoFiy5DBIY85J23qv2q+BMO3tI9+yR
jUJ6T43l/xdp14XW68/eEfbxSTG+97K5vbG9g13DFSZ7nWxzH5tabBXAmdOl
9Hhxo0ANW2cZjr4aRrxZFM5M0+4smDPNvbR5ZqWqf7MySM99N78Btc9YPuYZ
bGjfMn74jPFR9sS/Wr2+Utsw/FCJwYb8hu/T6uL2HT9m/B6MiQx/RPXq72ns
UYPn4OtDDMITTF5Ax3WvzT/sttbKkB/+OnP0Pr4V03zO/p7F6tdDfmOd1K/y
Pvc9G9f4TttIG4ZXvQWY7+v2+xvGg68KrYPoldn3e1GacSdJ6DOIpW32GrVT
pHn+AbLw3dLmq6/54aN/U/y9YSTV+cw76Fp4KotUBlm05DLQO4IlY2IOqd8m
+9V1u4EfiYvXFjqDSu1Zb5fG2ceN62L84Eqb19jDT4wp4+Pi7Gaxja2fd06c
obnF+QAhk00X5//EuvFQ0T0wmqRnx8w0nDLgsODNfuDMNM+keT56PW2eWajK
36osUjkGW9g5u3xjznZ60/gn9hv4Au0mmc4L6hep7Qj7e69aetl+16+9Lg5n
0u55qld/T2OHdOyxzrEnfo7JMtino7N6y+Yce9T72pqIHLFshAein1pCWnkX
9pV/MLllp/xjXPfEwSPERdxL1H6zW8wvLQv5Z6X4+aW/aQNnKSF74U8439iZ
g9p+7EL2S9dmPcv4YPub/kemvCL0rbE7Yc8P25LVIuOA54+3/r5RXIwSrq9s
dYixedZzxS8ppKmVID0PYvyga+GpLNIYO4uXXMYkcXvXB7XPWT2TiL0gi0XE
GTr1WImNZ3azuRiXNwkce67JVtdIm81rbVdxOBKbBHApdmY/liZOfcjWjHp8
8rtiCvLURnX7kWGVAbPiqkFQt3qlrWsZOFMSrqUt1+PMdKQ4cbPubVV/RvjX
ZHF2WTNWt59UZoUHI6/jJwGmfD2U0MWCk5evZv09jQ3SsUfseXAEGIE9HOJs
oY+/1MYu18y3TPeCwI6fCPFo9rbZ5wafmk+y2tyCL+v7LMTvmjfC18G2a7t1
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
yiBIzwWbUUZibSiT8uLNQa+/o7T2exoNyiNz57mf9V6nOnoqh6qOM4uiXnBm
Yl7IPJ8XZ4s1c+dx3Pg93slFanubse5d65OxHVUmbcON4nDm1EHXZjioduKg
a+CpTNI5cfrg5rb6ENRtZH8R4jXgTPSb+FIvYs/il3l7KwbTZ3kPbAjenMfy
vM3NceKiKe7El/NHQVpBmrae6CjZnzM7VY0DTnnoUc+0/PGRAGOCB/GXt30/
1Zdy1iZ+9VeK2+NLuW+lZU0Wt5cIPl17OHkrOFP/l+Gsf78pq4ww6PV3lNZ+
T8NNWWTtNNgv7f202KVTXp7Ko1HHmb2M+zTP9TKnstQ/a/uGmbQN6ETwl91+
0LUZDvI4c7RJ9VGD1GeCJ18RF9N76xCvAQOCPcGB6B/xobdzSFrep/7E9kJ/
SUwfsOBEcTgOG1rwJjgW/4Y7be5/wsrY0PL/iji96q/E2caC/S4Ut893l7hz
r7DNnT+Bn2MjcUtM20izJPB2zrt6ydo0pPEhPc7sjbLKCf2mQZfvyVMeOTut
PJ2nnKR3OuXlqTyqKs4sCr/lHe9p3i2ynmnqn6V9w0zaBmS6+Ye/Lf0glbNP
GHQtPJVJ6l93ygDlWHwUOVuceDyzhnjNUeLw3V9szm4sLn7b7pE8iJmGLS2x
WonXhk4T3ImOEb9H/LD/bGMZH/j/E6fbRE9J/KG/W/s3tnyID/d0kC4L0nri
8C/2sfsmyBTkC1a8NnKdWHSX2D3+X9HaZzYnGtuc9v1oeHlrbR/7X4az/oOm
stf4ouvnyVM/KY+MnUXuzlNennp7KpeyYqlB1ifruCpqrGfpnyLXoTzzzdPY
Io1HcsSga+GpTNJvfOIA5dibxNmxnxvhNzeKw2G/Fhezh7jH4MblI3kQsw0s
abHWVPe5f5C+G6RvBulqcT6XdQzL2ZzEBUf3ubE4/8yfi4sjBD7FPxQ/UXDq
560OxL+NOStZy1/Iyr8kch1b5Hpstno8I/Snn7Q6E0sI/LrX8PJWjzN7p7LW
9zLq5slT2VTUfEh6Lm8eHmdWm6rER/uFM+PuZ6lD0XXtVv+0bfM0tkjPiDh0
0LXwVCZprNWjBiTHgv3AcOgzdw7xGur0lOEwzizZVZx+ERvWSHwctU3APvbi
BL4F1nzcxjJ+7NjfEtsVe1p0oODMOywPYiuvK02c+T1xNr0PdOCV+HuCGX8c
uoatLJj1QcuPWLpgTmx3vyTOH7QeO2iF4eWtPg5QcTRo2ShNnTx5KouKlnWL
yKdXnOmpf1QVjJmlLkXgTJH497OU2S+cGX23Smvd2KBarUYaF6Qlg7RCkOYe
dJ2CWq0RpAMHXQtPZZLajn5pMPNbxxc+mGC5xUO85hxxekQw4KLi/CfBbefH
5EEMbvwub5fGWVUt9z9i+ewYKWN3cWfogimJ8wMmfKfViVhAV1o9iC90RzIP
rK1v738vdI1y0L2eYe8taL+xyz3NUv1spZmHl7cqXp7Lrw9FUhXkpKS6jAUa
a+2tApUh45aFVT1Vn6rCP4ugorGpx5ljgxr9ydnwnNmq5xYGuHKZIF0VpH8F
6dkgPRakE4M0u2HQQdR1U2nzh/M0WlTbIEiHDGZ+s4ehGBPdXv08413E2Zqi
y/yOPXee4bTDY/IgEVPnr+J8LqP3sbkFT1pcn8Z1dJvoR8GR/xNnZ8t1YtVO
E+dT+QOr353JPFDrC1YNxcvSWLTUdy97Dx/YX4rDu+hdp4rD0bcON2+t7SSN
sz6HtQ1VpkHLS2Nx/R9r7R00lTnGPc4cuzQqGCYv7ot7JivOTLrXS/3TtM1T
Mqmc3OVcA+1HYpGcanIosvGUK66oLRDgyEeC9EaQ3rTE368E6bIgjR8QzkS3
s8IACvbUN6ptLi4G8yDKPt9w3hM2Nz4oLi4PGAz95Hz23FR7ZqOYPEjoD+8X
p/NcI4ZPXi8uXuzckevg07fFnb05wa4RdxZciX8lZ3G+aPN07gg/BF+xD3OE
uLhBIT9mPaeEuEar27PY6RJ/CH3m5fY/bTxnuHmr+rJOGu42VJl6lZM75VFE
fUaRRr19VaIixncR+WeRuz0NB43KN0yDM9NguKRrncpIutdL/dO0y1Mr6bnu
2I5xHgIxLDlb4cwgLRfzLGkpcfIzMibyNTaD9/7tb7XDDFu+FaQXg/SXIP03
SK8H6fkg7TAgnInvWMozAT0NJ9U+FKQ9BzO/1R4VfSGY7ARx9qrMifta55Ce
NTJdHF6Ly4cUYFDVT/IsZwmvZPPtveJi74AVD4zwT2LdviXOR1RCaUqQPmN5
PGnzlbmNfvMiKwd/TuIHHSYOZx4cqg/4kji5dV0fPqRTLfEO+lrsZg8fbr6q
sXNX8etDPyivTF7Uej4W5IFRb19VKKvMXFQ53Z7rVj9Pw0GD/H55cWER+XUa
w0nXOpWRdC8tZamfn2PxpBiTGJf/NrkRGZm4Hpwtj9/VbqFnScQ2QQZ+1WTM
G4K0bZCWDzDkdUF6O0ivBUnl1eD/XYP0cpBeDdLXBoQzV/bfftSp9lFxvov9
Lhdb0mnibFaZD8T9AdNdKs52Nfwsukr0kTH+l3q/nvCDRDd7sjgMCYYm1tBs
4jAe829Ve5azOsG3xPjZIsJXt5ImfvqqzXHqCN580eb7teLs3innadePjfow
1x+zvgVjbm/1xyf0l5YPMWjfP9zzS2Mc1XW2g67MGKA8sovHmelp1NtXBeoX
xowrK299/HgYLhrU98uLCYvMO8vznZ7rlE8vde5WN0+tpPEx0YMgp6IPQrZE
d3KDyZDc29SeRQ+DPgSZGhmTcxVm1TvO9/IOw5n/DtIcdm0Z89MEa366O87U
74TN30RxtmxzFtBGbBBn7z0fT9UlPQNk8/7PcdWV12PKcr7lp4L0Lmn6aYaf
BQdu3SNvfrc4nImeEbtY9oJ+Jw4rRssjtk09juoMbh7XzhJ3Rgq2vuDH8fbs
ydaOrULv43uN3vMCceey3CzOvpb5iQ0v8XXBpisNN29VnLmyXyMGRWnWao8z
01M/2pdFphslGgSOS5N/WbjA0+BoUN8vy1gqoj4eZ44+qaz5C9HzElquz26y
JfoP7AKRWa8ShzHRZSKrjm887TDlkWY3C87cJ0i7B+kXhjGfCtJqKXAm5/sR
6wSdEPoW9CnHubLyfj/V/SyS82VPQ0FqH7p+/+e44kbi/zwrTocp5fGbRr6c
bfINcVgR38uFei9PcSZzbsPIdWxi8elcU1pi5WjsnzfFnYUyd//7vUjSGFLe
P3Ng1Isc0au8MIrfux/tyyLTjQpVRe7PUrdR/RZjgQb5/crGkVnGat71oVsd
yqy/p1ZS3cT4hHvYkmFDiwz9I3GYEx3Gw07mDD3pcOZMQfqV4Ux0mM+ZnyZ/
n5Iu3qzqVMGXxDR5wxLlnuy/oadkqn0+SGv1f3xgH66+mJwJcsHwjk/tP/Z0
JkWuY9+wRHu71LcTn1D0qgl2wMNCtU2kGT9p0JUZw1SUzJE1/7JpFMsbazhz
kDJlrzjT03BSmd+yn+Okijiz7Pp7Sk+KQaeJs5FFlgbz4be5TezTDkfOHKSP
BOm8IF0ZpIuDtK9d74Iz9RsdYmWhW5kuTnf6hv1+p/+GnuJJz85ctc9lkk4R
ZzOLXu/s4R2fqvPHbmHJlM9jswvOvL/cevWD1J45dCapp8FRr3JHL/mWRaNY
Xl55bxhp0DLlqPWnp3SUdqxlHZP9HstVwJn9boOn9IRvpPpn1vWK6DIvL7G8
ZcX5m6E//Zh9s3Ok6Q+6t/+GnuJJ49xM6v5coWWSOEcSfTvnmJw83ONTz2NZ
N+WzP7J5+dNy69QP0vNKF/FrRJUoj1yRVRYbVZzgcWax1MtYLEImHbX+9JSO
On33XsZXv3lhEfNi0JjO48zySM8vR7eI3gJfLPzQStQZKVZANzRNXBxPrq1n
19BrHu+/oad40vg0S/W5TNJUG5/YzX557IzP2qLifEP73OdlkMeZ1aey5KpR
wX39Lm+s4Mxu9e8VYxaRhpWGvf5lUi+4q9f3iqYiyxvU+B8rc7LfVJtFnG0c
fpJgTPSZf8mZF4kzADn/YB3LW2LmALEwX7Zy6+9h04Ycz/mEyLXzicO/q/XU
vIGR2iJz1gS6o33ExSfdNUjbiTvHb3lpYmzxYzYt1Y4U9bHra5mke8XpM/9t
37O/VfBUACmPWczPt6pTGbJVP2jQMlE/yqh1uT6MlKb+/cCRZadBURXqUFXq
haf1+l6Vadjq66kz1Y42+Rl8h08mOJMz4mfJmA8xQtDz4L8GXsQmlli1C8bM
gS/bM8jsnB+4nDh9EbpM9EXL2HMzi9NBgNGIX/IFS58L0kFB2iVIK4rDdIX0
RjGkcTl/Zn2Bnrh+/uDzlp61tmM7fI24szr8eSypSHFmSt/CwspkbP/F5gjf
7T3VGm+e0lFtYxlIHCC/TuajrHLSoGWqsYIzh1FuTaK09U/T1kHjyLJTXhrm
8VE29YoVk94f9vk6bPX1lEzqB0nMV/yvOKuPs/LQa4KLPpMxL84M+Jc048e+
afl8N2b+EOfnAWnGHcJOF4wJ3j01eVw1xhxyP/gVnemB4s5+ALvuG6QtxZ2j
yRkQM/Z/fNZmExdr5cQgPRKkB4N0jzh92H1B+pO4eJ//FIc3X7T232ntET+n
OpHui0zoc5mctfO4jW3iVC3mv9Ewkp5JumL/55hfK3ujtHLSoOWpfpfZj3b2
A4cMivK0pYz2Dho/Fpk6tc9TO3Xqv176P+76sMzXUeEvY51UT4iPZP1cEfAh
Mf+3sGuv27Vt0n9jPdeQ89/BVZwnXz8b5d6E+YMO86fidH51/d4l4s7VTFtm
OIErOe9i+yAdIE7veYI4XHJokHYXPTNQMe64TN2VibQuk8WdQbqNxM8Z7Inx
e9s0SKeL81NF34keeUc/rzrRQHAmZ8w+IW7vhL2DAexfeOqd1FZ9rf7Pr7LW
y7HGJ7LIVYOQT/pdZj/a2SvGqCrlrX+Z8zgtXhuF5Kl7v/TSr3HXh+Ub+DEz
3KTy8VZBukUcDgRjPi0a81Xvk44Th3nQL4IbjxXnK9kpXxKYDuw6k/2+XJye
9P4u84dzBtYP0kqhd/O2Ly6hi+K8e2wdwZr4fn5T3PkY+H++K0gL5Cwwrnzk
2Jst74S2tNWRcwuxMUavCe7e1s+tJNLxuHify5zT5sLbQbrJf5dhpdr84vZ2
pL/fsKz1cqzxiE7yRxVkk36X24+2jiJ26KXuZc7jQfdl0Viy6LGi/HvicI21
TtStT3rp12GYr1na7am6pN8I7Ia9GLal2Gxip4meEYzJGQ17RJ4Hi35WnP6G
Z/EnfEhc7B4w6nwJZV0rTh9az4dzILCLvbR640T9ObF9xMYWP090ZJxVcby1
fbt8/EwxLf6Wx6SfH43+wt72x+Kw5sOjxU+LJP1Gi/S5THAmey/EY/6h/y7D
TLUdBvP9il4zx+oa3A95toi69bs8jzPTUa/1HmWc2Y0GjjM3F2crt111+ygr
jVWcmbXdnqpLtVmD9H/i8GLdb5L0ss3Xd8W8U08TgnSUONx0mzjfzdPExd7B
5nUxl7++A766S1w81frvP4vDqHsNzzhRe+JlxMUe+qS42EPYAxOnB13oRqK6
z6T21HYO0q3SVf+bWD72tL+yfvvO8PRbP6l2kqhvbl/LZDzjP4tOc0v/XYaZ
ah8ezHpc9fyGhaqKeQZRfr/HbdX6PCsVUed+9e8oUVHt0jywRyPexVaj109R
yoszqz5Xs2LMQdfXU2eqLStNv7I6vsS/7EAnOxdWDvrBO4J0jo2Lg8X5eaI/
nWe4xknsOEfXiF/n2uL0IWDOnS2Bu7HF44ySs8XpfSVdm/W5ZZs8UxPxlPBV
vXu4+q1fVPt2kN7R5zLFvv8anu8NO4X9n/spP1c9v2GiqshRg65Hv8uuQp/3
QkXUtx84c9SoUJxJDMiTTD5afTT7q05jAWdG61LF+g4xTZFdg9Qd602RSUH6
YJBykOrn8GcDA6In+1iQ5sqTU5dySPg8EscG3ec/xMXl3H1sjBONQUTMH2Lo
fl/cmZkbd3mHtI69c31oTvHNiKVETNohw+j9INWpzznoWngaJmrMLWSUHfKt
3YXVoeC8xiJ/6Pe366X8Mr9PP8rXPNhnxc5ngeEcd0X1Sdl8Ydj6NS0VzvsY
j5eY3DTvaPYZNIoYE8rarirUeUhpihwUpIldniGdGaTLc+JMMdlq5j6sd/iw
gTWxL7xRmja0JZZbJULHpvYckyPX8XclBu6E0DUSsX/+KM4f87gInyDWDL6z
y42d/ktLtTPdmPbkKQ3pfJrDZBOxuSjZUmH1KCg/v/5ml7V6yTOrHJdUdpZx
lqYNZY9ffZ8YzcS1I/48+8jY68w/POOv8P4oIJ+k/IalT7NSKbx0SXG+WqeP
jX5Lal8W/lQVGsT6O8I0RWZPxIdT5GNB2rgjfpwiMwbp90H6VT6c2W/ScTHD
2BwntVXEnY+5cuQ6PpfESELPu5xdq8cLwm+WGEuhuDbaZ8Tq5XzNtcZO/6Uh
7Zspvk88pSedfxOkGcs6AWeWXo8Cy8qLS0aN8mC6tPkkvZtXPsr6Tpq6ly2n
6R7pDeLixr9uCd8b4tXHxCmo2vgrek4U3b5+9JfmPSlInxJ3xjjn1/V5n7aM
dmpenJdOHJD3VWO8DYrS8KcqkceZfaMpsnmQPtsFZ74zSE8E6dfDgTPHMunZ
nODMmFio6n85zdZn/PyIR0v8UnxYd4s8SyLuLDFnNvLzLEyKGc6oXp94/lhd
UluO+aS5/7V9vDxfej0KLKsXTDVKlBfXdbufBQN2upamLnnlrbLlNH13sjh7
G844u93Wt1csXSEuLkOXOg2SqowLi+irbu9rHEjisxMnA1ur84N0qrScuVb0
uMxTz7ykvP3KIP1W1GbFU7E8oCwqenx5SiTndzmlC85cJ0hPBelajzOrTrXN
bB1OiIWqe4n4rWIry5mlnF96rsTuLda+Ky4W0MeD9C0pNGbTMJPaa51SPd7j
eWR1Sb/DDM1vkYQzy/5WZcin0d9jaeylbW+/5OmO8n6G/NPWoQws0FZnbBLB
mNjMLuZkeY3zwDVion+ke90HRWXUpcj8iqhfp/drswfpAnH726yZ8xU7F/LO
jSLHhOaHfpbYlp8rMOMhpmFZC4riW2OIpsg4w4SbdrSVbX3nHUG6LEjJ+zBT
ZLMgPROk3wwMZzof0dWD9D6NW+TxbgLp2U5/CNLCCffZ+yVWKrZHnMP4Z0k+
i/QEcVh0P3G6za+VV+9hIj1T9ITq8Z+ieGXjHWIb+BhQpdAgcGba8aD3Z5CG
nqgTZonLdyyt0XlklLJk6Y7yfsEpb76dKLHe6MCwmf1tKK9FxGEXrhNfcMbO
43FQVEZdiswvT/0yjQ3OReOsgaMk1peprHGZpt5FkrYNP6N7xcXIKDj/YaMq
zcG0pHLdAoOuReVpiiwXpJuD9PcgnRCkmVK8c26QHlMMl/zM+wxn3j4QfOcw
5tJB+qO1bTePM5NI9ZngzEUT7uMfdpk0cebDQVoz4VniAoEz9xCHOa4K0qrl
1X1YiP6qfbV6vLOXNTg2H/QGq1SvnaNAtW1jZDIpt69Ty2vwiIuCdLU0Yq0k
5RVX92GTL3qhXmTfomWxTnmVJc93up8XB7RcQ2YnZjy6yxMj+R0hznYWv491
qznWypC3i8ovy3jNNTbw4ZkmDn/NlC2PXsdlmjYUSZon/pnTg/SFao7FflGe
b1MFqv2fqP+wpxaK6iCnyJJBuiFIj9h5JZ3encHS1CD9S+MBJT+LfvTZIP1h
gDjzy0F6xdLRHmcmkZ57yRklkxLuHy3OJ/PZIP1SXDxZbGhXiXkWHwr8M7e2
358V9Usc61TbotprSd51OPb9+arbzmGm2vsjMpl0/kZpv2Mh8uJ7xe1DvRak
LdvzKlL2G3Yqov1F9VuivN8h/yzfsIi809S/5RpjEdtYYtV9KJL3RGn6fhxa
zbFWxlwoKr+04y7PfFf9HvvSjwdptZTfHyyK/LJKfh6Wpb1Fk9YfnTv69zmr
OR77QcO4DmgdiYl52KBr0neaIjMHaS7DWdF7xOb5iT7Teh2suaLqMpNjzC4S
pEuDdH2QbjXfyxM71GM902c+rLFn+02u/TcF6Y0gvRyk3T3OTCI9gwScuUnM
PfSS+FuCM38gzi4O7AjWxPYoYjOg6wQ2L8vab2L7XdtcN8YqqT/QZ6rbB2XI
vZ6KI3ynVZ4KX5Pkvk77PQuTGbGRx9YBrPnB9nyKxBbDTmnl7l7yyVuXbnln
rX8ReWchfQc+S2zZ/7h1qKVssMyj4nSa3xr9sVanIuZWlvGWimdE3lf+huxw
fvq66j4C8e3vFrXHKvp7ls2XGuOV+Bd7jZ3xGCXtB2RLYk1yVsEK0qLPLqwM
bOfxi8WWYa4C5gPnJo1FnPl5w4PztOAqh7u+ZnrLJTJjrinylSBND9LJhjXR
Z/6iw/MrBenfQfpbkObP05SeyGHtvxvORK+6jMeZSaSxz+DTX4lcf4+4c8eI
2/cz0XP8Gve+ZmvC6ZF80HP+wfGIxvUjxcUHKrcZlabaQeJ8VgddkQTKK/cW
Iet66k61pcTZXoevSXxfZ5LtOtwL55dYL7E1GzvFN8XpiT6cXKe4PMfauMmC
03rNL+u7nfLMU/8i8s5C+g7nZGIzO01cnO/wfWTXx22cluDHUFVeWERdsrQt
LQ9qSexVsX/9nvT1rP1O3P7WC1KKv0bWdTBXGcSpYu/j2uqMl36RtpfzoT8t
Li406wj2BuwdoOPdITJ/2UvI4Q+ptvScK0dskcesvzmvb9MevhsJXcuhOTMY
XpoiFxm+WiYGZ14VpH8EafkEXedqpg+Ny/dnwhkl7u8rgvRP870cH3pm/iCd
Je7czD8H6XXDeegVj+gb1nNtXTdIL1r5D5q9r6cW0nmCLpN9RPT/UyP3ifX2
hK3bs0fusfd0rDgf9hXt2gq2TlwaeRY+ekM568CwkOLynard/qzyapGysqfO
xNm2tZWSZXJJuJ43RfOLrROJ/WH2qLB5qNsq7pZcp9g8OpQ9ipS1/7O8l7U/
0+A9ifyfpcxu17LcS0P6TrCOKc68Oyb/Wd36pDLmCsWNt6rzwiLq0qltnXhQ
t/c14dP9lyDdKi3xmTrWB7mCeMLgTHx6JhXf1/36jhoLmT395aoxXvpB2qfs
nd5pawd7P/hN/02czyr2COwJrRh6BxuE02LGFTbHh4juUbSVE7yv+xHEFUGm
RZ9J7MsfG6/oHpMmvv7wEuTfseefOUVODdKT4mLIRu/93uxdV41c3yJIvw3S
HUE6PgFncv90+/sSw5l/CtKE0DPEFLotSP8xHeJbQXo7SE8H6ZYgrd0z1gMv
tl9bOUibNPJ2OPPwIP3PsO7Peix1BEkxH2dcLmzzFAzEXs/k0DMLicq2se+T
sEHivOGN7fcnje9/MWbdAWedUZ11t9+k/HGzare9SLnXU7FUW71dBknq77xY
pFN+sXVibWcPHn/sH4rbiwZn7pEhj4S6jDJlwWlZ38s6H9PgPYn8n6W8tHgj
zb00pGvSg+Jw5iUJ+TNu5y12vOXt/35QT/3ZJcU9lycf5RnosL6evp76HX8t
Ln4wOrAliu/rfn1Hjd3AXl1FfYaLJu3PpYP0kDh8yRryI3E6D2IJouM8zMbE
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
eCe6FoOf0Z38x+YRMvTR0oJD09Y5Uz06vKP32PPGVnmBfGXo8/jaoM/MGBdC
ccZ0+94XFv8div7OamuGHDc+hj+SzjBeeOzw88JUvOUYaZyZlzpfxho4EzkZ
G1pwOTGgQvsuGpcSufT/empC53qQOE8ePeo8CfeZt8hB6FZni3mGWO3Y9J5i
fOub4uJqMqcWtOsP2BhnL3bb8tqTkZwdJ9jvFHF+lP80jPi0Yb4wzsR38/aY
PEjniPPPrMcT+obhuc/YPfR3LxrGAkdyVgr2s5ypsojls6hhP/DtCgXhzA+K
OycFu15iG90TpO+IO9+TtuFv+itpxgDat6ByFw7SXqbHpB+J3ctZoocG6Wzr
59esLxZpvqhjDd0/+n7wInHFjhO3V8nY+oa4uFrgSTBkXSc5W7nrWDdqlM1Z
CmDC+21tI/3V/idWF/urGeN1qe4De5e9hp+fpiG1f7paVO4ZJtLvhL7pTeOn
nZ4lsa9Ys3U/Zi0tpY4p5KzGs2JtgpeDccaVV8fGOrO4rTXv6G0uq13qJpH8
JT7PPJgg+l6nvGLLop3oJMCZUT8Z9iseNb4Rjfn3Xnvv2jHCC1KkQdYja107
5ZO1TV3l0g51bPx9lfGfB5Pr0ksf9+ub6Vl/11v+B4jbw8FeANmWOAffE7f3
t1PXrJq8KIFXKh+cJdSezW0+HtDhe2DTeKTNa+oFBk6wfepaN/arHzY+kfI9
fZe9NzAG+uvji/8Obd8Z+S0Sy0/lo+0k1Z65xqaAP26T0KcnirP1+OFw88I0
80OvL2nj51/WhwnPtrw3yd5BXiZu5cvi9Bxhvf/F4nDmBsW0J7YepOvE4b+Y
eaVj+Vxx+13sC0XkP5UHiIOLfPWSJcYG+wzo6H9vbXvVxvf/XHsrQlNkR8OU
3w/SXabHPMqw0YuGxZaxZ3+smK09j4mGUX8apA0NZ3K+JvFkbw7S+4L0mOG4
NwyPgvv+ZFhzYcsHv84/W9kbFoT31rd2cVbnWkF6WFys3I0Mz54vTteKbyY2
u6v0XO4UeYc4u+DzDVNuYm0L+2sSDwn75Odkv48gS31I3DnQ4En2HTnzA7tS
fJEWkIbfYz9li15IY3cgm2PPg73Baq1tyJQXaQtx9rPLD0f7eyHlOVdLi//A
MJDqnNhvfEOcrrLTs8uKw6M1kzuk/O+qa87lorGHUj1PIj7h342PL5pz7Io0
/FUTcRnY8itB+o64faWDpWHTnpfC9kVF4oO49zrlFVvWRHEyH+tmZN9VZTPW
2yNi8kMuJVbDzaPPB6As32OQdclS337UOTXORO5DJpsac6+Huuq78PGtxMW8
O9zmNno08CC+dcRqx8fgAnE6/R78KxVH3mw87nGbW5+JPMNeNJili52MrtNX
u3rF3kd/BtZbyeVVu0ucnA72izljVPsCvwjwAbyUeC7oI5GRkfnnTd9u9f3H
9vDW7N9H9+7BZcjoJdiato1zxtTRkflxlX2bBSPvjpMW7Knv/1HcGpmEM48w
/vmL4eaFafmD3jvE+o+x9q7u7VY5g/HyVRt79NfBofsL2/3fSrn7yDPb97wu
YX6cLg5fontlfUPvGj6fZRcbu89YHszPG60v6meJvmTX/s/y2qekxmSnKbKt
uBg45xoG42yRjQ17vmJYbCl7Fj3ndZH3SfgZfk2ItzNFlpamLe1c4uxfZzf8
+obhuSl2/2bDeHOF8rva6vP+gnAm9blXXOydww3bLhKkBa1OD4rzF33TMO/4
UP3F+oI4uD8QZy/c3cZ1ihwkzvZ4cwnbF7fmu4acNufzssPnX5WlbsfGlHit
E2XM2IZmJZ2L2MpdLLE2BaNEupbCR8YPuibZSPk+fPwN46lJz5E4H/VtSzdm
lxly1Q8d2kO25tSvYYd+apDeH8P/Z7E16DVx+vh5MshD4sap6u/Rxd9u/x/R
lDH0GWyk0ZcSX/gccTYLyHGci9ajLXGlceaKtmaydkbi76k8yB70RjF5E98I
DBqJST+qVAXMlqUuVZB3045XnXvMa3Dmed3HduY6IDu+aPnXdQ2v2u96etXu
Yd96ieNHucqDh4FbL7I5dZkk6yPnjanr8sYX0X8eY3V7JvQM2JO941VsbmJT
cIbxt+ni+DlY8/Oh/iXPd9u78D9kYrORVzush6yuJ6bvZ92vZv5fnP3bKJ99
xcrcsPix2jLuwCzg76Mi4+oe++YR20ndYzwokhftxAdlmfi66t4F6+2N1Zh3
Ucq6rnTFjGJz9lw3NlWPN7Hze9p37Ltcbn1Fn4b8x1TnzFjOcA5rHlJf6eni
dPjh6yT8y8CW4EfsX7F5f9bxj8ZzR9u4DdkMqz8a4+k3Nq4fdHNe9Ts3SOMs
lwqQO7cSXHeJ4axbTBeJ/err4uw7l7Bnr4/BmeBI7E5XEue/OUtMGcSxxT70
LcNz+9n188TZsc4QevZ4K3OrgnAmtrJ3iIt3hM71KrsO/sOWFV/Rup71VxE8
OEmcHha8/aph1MVT4MzvWv+tHfusK2Ntw7fobtcrpK0jT7rfiy3Jsd2fHWbS
/d0hw5nKLz9k/A6c+dtknq3Psqcd/KE48/v9WyfV9uSCkCyE3INMdXcM/9/Q
1qbXjW9LBnkIOQNbtudsTWR9Qz7DfxkZcAlbE4hlcanJTch4X7Ny8cXoEru5
ax0Kxplt+afML/Ye8ufzltaJPAOeR0b7sbj96AnibKbWt+/AmoyN3pDZleeh
KuG6ouTFsik1zsT+4t/Gs6J6J+mtHfo+MiWYgn0qZFnswImxji6OPSd0W9cb
LwQjouuc1DXr+PLwVUHOxDYEXeFqKd+DTxEnHrwNDpwuTi5/2/GsxnPYq4Ob
iZWALolzBMGON4rjqYsaf7so1L/oDLHZXdvazzkkYXvbA2z+syeZEOOzrb7v
t7xOyv59tO6v2jfvElewBS+S4MUhm5SO75Dms3YdEuoPEv5E6J1Wjrx7vfv+
jd+U9YKNzdniy1RfvRds7HSqS8EpicrMu6UM7ASIk/iMjb+5k9/V9WOaJfZz
rop8j3PEzZkS9h1a6oFOmnn5ldZydD4gK90tDXspjavCvtMPQ89h5w3OPNd+
47uLHLF/kHYXJ2cwL9axsbpAiY3JTs6m82nDWPgSXmkY7I+GCZ9U3Z979iLT
Dc4S0tF9RfWT7u9lE3AV1/9lOBPsuopd58zOcyLPfihIj0s9lm0xbaRN+J/e
L8SblUbdiZv7mmFMcOTBEZx5mDRjFxEn9gW71q28L9g7347Vf7prJ1qe4Nh5
Pc5MQzoHVzDe0kN86arT0OJM9HDIVOCy8zvw/hmNJwYPqF3QV/r3LXXv79rQ
2vZDqzP2KqGz2PTeSXYP2eRz6ddCfZ+18PcmB2DHgu0cGPIOW1OwoQM3XW4J
TIWtfEbf5Y512CH0dyQVkn8Pearf5Qu2nsbobTX+BXIp9tcP2f+P2/9Hijvb
YNNCmlFZqhqm64bdqoI3k8pvw5nrS9OOMiYWVc91wKcKfckWJkOOL69flH88
be25PEMdv2K8mH0wYoVzRi0xBcGZD4ae3dX4FHbGyLf4E2DrMd34PrgI/VLI
nl1t/+Fp9fgtZ0bGx4pWZ+T8JdP1i9YNnHhIuudb3iWmKHuK4OFu56/Bk26x
Zx+z/9kjuMba1AHb6PvoXVlTtg31xzjjYXE2HHe7b9j4ja/Ua8YfJb6sWiDL
qr78rs5jvYqpU127tUHvISPhbwzWPKVDHyEv/s36iX4PxbXXd+6wb9vle/ZC
jXnGON8h0kbWOda0D4baeJB99+NDzzHe2ZO50n7vLYqN9W9kjdutjextlBDP
tkeaIusYBrzF/v+x4aDzDWeih5zdnt3VcNEx4mxhwYQ3NfDlFJk7AWcSRxb7
W/w9H1Ido7uOjeoGkWcXlaZOtag2gjE5TwWb4FXtGukMw75vWduXbCnTnfWC
Dhc729PF+W+enQJnLmVY+YmGTrM1gWfxe+V8k+NisainBNJ5iN5sqjTO0Rs1
0tjZ7LsNkX2wfhf2GMGN/7M1MOlZbEjYWwRnovv8ROfvqHmzRi9q35xzN7HJ
Cu2Np64nviy32HvgynuMf6MjWyyyBt1j9XtGMvsF6/vYkLHvP39oDdnH1jbk
lbPtO2Mv90kp3GaetaulPlKd+aK4m3XxqdZ+b9wnofNFf8GeEjZve9nYERsH
4ISUepthpKrhzCSqWh21zBWcnKbxDvBdxGbiDEtn2tz7nc1v5HnOZT3H7p8s
zr6d8baujbWMcmi/+0B572vGq7ZJ+Q5zaZo4PcuOobrSX+DMG0LPYsePLDvd
+gW5GVkYGd7iWqueFn3dDKF34GtT7dntWvtBsSXzH6y5Sro+0r06cObO2fu0
cabJrSmexR8OXMAeBPjkBWliFcpH/8iakGCbqDLKI9J6thRj8h/WF+E9QGwl
0RGfGrr2PhubDye3U8c3dbqt/ZlB48gs4z8WR3bJR/+eJM04k8vGl6H9/4zN
DcbqO0J5gFUfs3HdpY69kOaNrcLfpfXsJPZ02Jf5caSN37U5sUcoj81t3LDX
MXNM/vgsPWrjFbmlpLMlcpLDdX81XAQWPFbq/oPu2nmhZ2c0Hd3Dphsk7R+T
58yR37uZfu+H0hJbNbY+pM8X0bRQnvhYPtLSFnf9M9I8b+TsNrw3RU4Vd7Ym
f7/X+meKpMGELt4u9sgPWvuXNLz9U7uOnhS/z1k9zsxDukfK2pox5twwkO61
goeG6FwT3c+GB4IzXza+GPccaU9bQ5Fl/idte3xt74Ax2eNj3w+/BXAhaz37
uB/M9v3V7voeq8c6tk4hD/xLWmWCpY2vU8/7JXOMgMR1EqyMThXZCwzKHjv2
tSXsKei5Rwu016cKpPrhl23tzzmHdb9hCyc7jCJ1lbOkOt8TqgLebJR1kclc
r3RIzO2a8aFXpIkpmPfona50sl6c3WJW2Tlv29PkoffuN97LuQazpquP2goj
g383ch3cwllTp4XeP16a9gTETjnc+gs/ALMDUTsjfs9o7xAXH6yJ/IuMHbFV
1ThC9XNXUu7jqR71KeNtKZ5vvDeb8RrWm4T4Ri3Po3vmHIyPiMO07It9Wpwf
H7LHDtIxRrria/pqkdCchec9YvXfNfTsutLwbW1cO9a+Z0zcGL1PmmLf4Ibi
51ZZmLLXstreY8/oWRtncXnjn4E9EjZW17fmo+OPcXlp7/2n+c6UcA/ZCFnl
IWmJ9aV78di6rxq6RvqtNDBpI4+5bewwX6O68HraWNx+OWPiF8n1GQA5jMP5
li+Yju0DDcwzReaRqL+lixO7QZA+FaT3JOQ5fyT/b4nzRfxaCl0gsYPm7fJU
dnLnqMwZuUb7iO/DmZkLtOA9h6mJSbSMXV9TnG73qylx5njD1U8ZrnzS+vc5
03N+RZzvqMeYuUjnK7LEycXz2CqQ8r53DroW6Un3ZJ+2tfGZdpmi8RzpbHsO
+e5l44+d8kZv+X3Lvx4/A7mQPWaw7ZIZ6km8D/a1wfKcEcR+5jWW96Yhnv0J
K4N90NPyrZ+x5SPvgC9vsnKxRftYARnHlQUOWzb0W6ozV1Ru5dsjg+aM86fr
NzG5Jxddu2rQsOHMMA0KbzbKAB/UY7oi490dSVx/1ngQcih7Pz+z9QRsubx0
9MerxZWZIWVuT4f39N4zxlNPyVAPdLjo7FYNXWMuot9ELg9joR9ZGVfZ7y8Z
b7wq9C5yPHKzyYxqz8EZf+Cq+5v92agz2A0ejmycMuas8mLqvG665xvvLW/1
51sfleHFcB6h1OmeJmyGwdx1WxbizYEHr7b+2Cv07t7i9JwfDl2jL9kHOatD
eWCJl23c5mtSJagnnLmfzeMzE/ppM5sXjNXDW/PReHOMpSm99Z/muUCH+cle
wzRpj2n9S5uD4WvY8KCfxecmghM1fgP7YFck1IG0h43z56RFHzpgauoufysu
5uysPeOeKTIhhNdINxm+2nNoMJWz271V6nF/nF4T/e6WKXFmHatybszF4mIR
kd9pQswkTz2SzinWDvZ+PjTcfDaO1KdvxUHXIh3pt5hsax5r4yOSiB30Ousv
++VvG9/sct625o/tGjZTJzs5Qe3a2FcmFsIyGep6hpWPbTL79jea7AJvDp3/
pvITa9OL0jjDsa1OtCVy5njX8pE7wJfIteDNn0tbHJyiSPts1XLy7pVULgDH
/yF938Xmg3xKLISFi6xdNcjjzN7L7fjMPTbHb2t/Pq3M2619LdfR+6G7Z68p
S0yZLu3SmDOvW9ogXd01gbcflRZ7AtXx1OPPbBkqY6pd/5L9PsnKOymUHzgK
nY3FFah9WVx8s2eNz0X7DR9+1ow7MvBPdK/g4HdnG0dqf/+ipe0zvCjStf9j
n0Gfia+cxShXfRvjjHUL/e3HQ++C2cGZ77XfrBF/tb75Vofy7rRnTi93TpVN
Xcf3DAnP07dgbeybvpnQT6zpyBro+FZrfaaBM3vov7BPTOIzk8XZS0XiHSqW
PC4yJ5Bn2PM+OSYfZI2/2f33dyjvOpu/U7O2plRymGicpd71a+6cyvGW14SQ
Lm/VIcKZ1P9y03WCLYmB9DvTt3qqBOm83NPWt4WGm9dGSfeu1hyONul3QKZA
ZgNnRvboWp5bz9aFtyyx75bgW1FKXb9jshC6y+m2xh9ustA3rI5zGj9HjmKv
PcauU59DN/qmrSEd9jNb3lnPxiv71WBZdPI5Y0x2I+3Xd5WTd6+k7WYtvCXt
t6/Vao0UuUPMjg/HvjTUNMw4s05p8VpZ5SU+M5PNf2wjfpIwv1PUOfGZmdyY
VF9H5D5sKNh/myYO26FjPUecH15M3ORMOHNX40PgwJmTn2vLnzphDzIu9A57
eS8ZX94w9Dx+guwJmg2b4kd4/R6hd6dKK87Eh/NWy+vrkbE7vzRjgJ6Yfiwo
rgVnrp9t7KgN7ytWl9VTvpOQUj27ifUt56eyjoPpsZHBdhaccEDo3aPE2Umu
bb/BGnU/zm/Hl6njq+6P94Xi51E/qev4xl6Z2H3YeP3IEnu0j9mYnC6Je9Uq
l7xp/Tlz6zPqK0m/X5S9/7Se6ClT2F6qfMHewv6R8tknOCY0L8bbNWSP1Vz+
bXmdZ9/8Zkm20z3EnmGvojpnmxRNzh/yU6YbJa4QcVX/2LATHQZyGHnhIJ0g
7tzQy0zv6+1cK0W6RsJ3Qj4mo0C6x7becLRH+/0yacbUOC5hvRD7Vsh2b0nT
xnaJ/rVTZRrkvRNC69NOVo9zrI7vNz4NzvxFQls4Sw59bM3+T+EvVKuXf5Ot
k+RNfICS9NbqY7pGOXn3SmovjNx3X9pvn4wz9e5uMlR25mloFHBmncrAm2ny
TMSHi5vshx3l8Qm8Kk0+SYm9D2RY9GdgG/axwBf/Mr6DHSlYDVucObK3reW5
c4yfPpLcl7H5INNi52qxV1UOv02aZyS8296d2er/VLOuih9fl4Z8rwnZ9wFp
+meCM8EC8NYPR8Yuff6S9cdK6b+/4jRwZoyNScf3kA9Yd9BfpTjzIesYbXsW
HAgmID4v+trz7dpxNg52C717oI0VbL2Xtz6s700k2HTqWU+M3//K0NtzdcWZ
zFUw5hPStAmtx2gAv2/TYdyvYv3/hZi5M7v1Nd9olgxjcMH0Y1bLPNfG7NqR
8hkTV4ba/WmbYxfZffZGOBcX22Cw6sWWD+P4jxLLN/Q99ilesWc7x8MZZpoi
C4mLEYQfIjFmidN6hMdonoonnZ/L2ho3ebj5bZjUxiKjD8qgSL8BtqhvGn/b
OoHnz2trBfIJ8h24lD3bRfvXTt07Zh/4t7a+IENtYGvWNdLEwq9ZW/ZNWPuI
V1+TJs5Mcx4bcYfqMYCQDfGrucDJCaW0FVlkrXLy7pUadrN/S/vtu+BM0nZp
8xoOGiWcGaU8eDMPrkzsv2BeqKyKPu1jMfM7TR4d6q0yLJjiO5Y/+1DYvbH3
g+3DuOR3O9Uh9hnwCDjz6tZnuvbFZcaP6zGcibGK3gdeDh5b0/JBb/Oqu97I
G98yZOK5QvnBU+8J9Q+60Tq2DvuAIm8/aX1/YbZxrHHf4BkfzTb2ldcin6OX
XazDcx1Sx/zjEjEkPm39UPetOFfcWhM6k0nXDtaiepylB62PDpZE30tsfxux
b5fO1hfDRtpvzBcw417i8NfHxe3Dp4g5r3NxhvZn9L1Tbax/MUU+fKfNJNPZ
lJonsulj0h4Ha0cbj3uL2+vm+2MPYPZNauswTdweD/tVL1lijn4qobzFbP4y
1v8ssTHBRohcLNdpZjP7M43B4zGmp1JI5zJ7OMSfTTjTeNhIY+WsNhxt0Vho
8GpkHWS3iQk8/ZMmW/zP1seUOFP9MLBvvdS+MfvE7PHliFOq+WBPMt3WfK6t
bPW/w2QD1gSwMPLRwgnr/EbicNLb1oaE89gaMgc2OsiBv7P/Wa84u5OY5ug4
M8QySt1Wzg1Ys/h8iyCVO9Fppj4HrzPO1CeWtLW5uGoOlDrJuqOMM7Pgrtw4
cxdpxpeNOaM9K85MqmsvlApnzhDivUfH1y0xHWjv4tvGGQtgnYeMJ/1dGr7d
uj8Gz74kVC7PvydSHrqZUHxUtXFFPp4uTT/FCeJ0MfDOv1o+GfpKZfX6Gbop
39H3rrEy0V/FxKfOMx47vZ+YJ3pgMPYKkfeXERcn4MfNftVE30+MKQ98xFoK
luhyFqineNL+ZQ+lbqv6XTfmVe/MvVndd1K7dOTLjSQWr3YsYyYbc9jJz9/6
rtrJss8MlmS/B3z4gcgz27t5p+OGMYydLXLh2VZv9mmwx2aP9VvS9AWAtx1V
QCdVm5zukrM8VvFxVT2VS8oT2LNCfj9gNHiuxgHKEN9mkKS2Pshrbxq/nCnC
K0kzmxwDfnveeG8dZ8acn9iS/8a2ntbPKXjR3sP2NGNsasU1YFwwpO2JY2+p
chV8PmwzW9dvxuUz3mSdX0lDj5Yoq+KjM9XWmhvFxWFkvWIP8wcmXxAfAh3p
Qtna07GtyHAVtZvNTilwplibt5W22BHDSKOMM+uUFhfmea8jRvyi8ZJnpIF1
suQffSapfr1Qp3Ibz8xmvBecuWt83RLzmdv4EbgHzAfvPtB4JLKv2fOrLo49
oY3j69b4DV8LxUdV3oYe9F7jd/hU/sH6Hf69V/Z+0ufRpV6c8T3qBV//e0x+
MSkrpRqzi1sfg5M7nImSqrx6DKALRoMPDIq079AHXyHNM87QyaObZ8/kHHFn
2GSwq23Jf0HL87IEHgOWRX7Abuqd6b9l7avSjJ9cP6cJfPmaNM81mT1HhT15
8pRIOj/ZC8L3bQRs0nUdzWCfMUhqxJoFZ97Xziv19/72DHyQvTnsR8Fy+FpM
6sxb1d4WHMZ++a9sTQCHs7eXMYaQ2rDVY+kvaXUj7s/j/9/edYBLUlTduwGW
sAtLzuySc05LXJIkAUGyZJT8I0Ekwy6CJAkiCD4yggiSURBEEVGCiJgAleAC
kkTJOfZ/T9WdeTPzOnd1nHv2O9++melQXV3p1L11S3i9pAtp3S243TffY+w0
knzHF+bz4tJPYWyF9VhY+3QWtffQMufCrgL/OmjWw2TstYbtI1rrnNLC5E3M
mBfVR7TONEeB89m2oO5IM/5t+YjVCUn0Ye85UdcKvOe5MkaDD9qY4Oun1Zku
EEtnQivCrw5zdmv7py00r6B9YAe5RtoitGmYN8Sc2DLJns20a4t0pAHtNNp7
6CrEm4WfbUvbn5Au/8zx20lbOnP8c01bjHgv+3ZcJ4RJESuvd5V3dUeKG3Re
C/0W5kkxv7BjfuWvX2DezXDbV5rxwf+R1ZYLZCsT5tooo+j/M+6dMuS60L2n
Svv1rrRlLd+BU0k1pkKRE0wfeZntN+sMY/tDv5xRZxQF03+inYPO/IXPWAx+
sVNkLPSOjGcw1435N2i+NYrrK80YBff9U0cfgnLzmIyD4EcGnQn7Zsw93Ybc
A+Ot8+SZn5VxFvbym0SDGrOTsBdgLe6aMsYb5ehZca1l3Vwr8l4l0jc9iNPQ
AK2ZFGb8UTOd2UKW9+13fui9rqPB9XpBa7ci0lAJnYnxMcawiF+dYh1B4D0R
w2dDijVeDUznQzQ4l/iWtPVoE7+W/N123Q9lHDGCD0j/vKXoTNi04MtzQqok
D15nH8lL2KBT9lGKYmDeF8p7xFx6quuC0MK7k40TBG08m5YHhSJPmHqHPQPh
87By2alJD+NHek192guzdgFjNujIq3v6XGjm1rw2eC9ZOx7WwMN3CnPb6xT3
rMZHBem4sWe8iHS9Q4O+JwnjU3TdA+sn4CvzkoxjsY/JlyhyzzzXMDozYP/M
MnWhS4Y+/y6U2K+67iiyfOWJNO89Udm4V+r6H/yPj3P/LLokDuI8v/mMdmWE
m7S074E2GnFXpo2XNt/fMb8GnYl1Ad8l61c7X/r63HX9cWTXqCWMgZO1TYl7
3SG/Ib2Yu8SajQyx2cy14DeMvipDH6VQKBSKdDDtLmJYwx44ddmpSQcTK96x
n0WeMGti4Q8FeybsgvC3gv8UfGWxjqQVW/YVGoyDjznpk8n6lSbwf8qcVviJ
wf92w57x4oCksbUP3frp+3Dju4h9u66QvBmb/5jUNx2Yc1kq3tiqrgx9fqx3
2SZhptUEUXlQl7YjDFnKQGTZwH4I0Jl3+R8b555512lX9SDNPZOkI/A68A3B
nN067p/BnAM/EPg5xvDvzTMfo65jvkOsJWjDRylw38NY94JvEOyY8L1ZI9/y
p1AoFAp/GP8hiWVZR5iYmSfXp/8w894YU0CjfSz9KfykWvoS32FdyoH5jpES
pbnj3uZvxJD/TIi48inX/ReN0HET3sviycarReg/Fwi/1+AaTjMOnaOABFUI
TRt7pilzkboD82HQmVe60Rd5oAo6M+29jT/vG5LHPmvoXTxD+1zEBIe/IGKH
QodNH3BcwmdInA6f65nP8E9CPAD0iydlu5/xmcVeMQH7OisUCoWiGJi1bvdS
LeOgeHuS9bcvOyExYfo7+M5ijhXz1x8LW7HPECt/N//+uCrPiD3JzdqZt23e
Vw2dPrexudzgGK9qOjEronWm1ZrYw8CMzWq6ZjEN6vD+0iBJuY3UmYgnJvvQ
qc4ces8kafC9DnQfYqnBz8Vnr7Ei2py888ustcd6iIA4Cu37XS15gfI2f8by
hjWeT0vbTs2t6wqFQlEHGBvV7eS7X1aVYTTb3vXpQ9r9KWxnZ5PV94j7i1jy
2P+pcy/vUlMaDKPjsHZzN6rk3sa9cW1jccXBcU1V8z0t4upM82kV+26bhKrX
p7SIq2uyai9TN1DXZ6yuzuy9R9E6M8u9zRp12DLf8T8uN+2XIq2p7gN7LeLX
wh4+Yug92p8xBsH8JXTmD7Klw8RFxzqUCs6DKhSKcJi6jzVVB8sYGXFktmte
H95vMGNztO1XUWA8gyrC2DJ3r2f5y3uOul+R1J5pzoG+mquExBaAeDqzQ2ti
newiRaUufzSxjiXVCEVpijjpLeo+RelML+C72PwCWZ+W1+K9O5fpLqI8GB/d
Z8muD8HeztjH8nCye5gixh1ijCJOT8t3+Ek5J0NazHpMrKepSRx6hULR0Qat
LPNEmHuDnx/mn37XrD68X2H2F8NelNi3cHjZqYkHs4f4DvUrf0P69hH1e4aq
Is14yeyV4ngP1rLG9FHp6Pm1Q2eK/yzWbB9acCJzRNN0ZhaNUJbeLOsdFKUz
MxFrP7A2/6V4OjOtTixaX7bvizjqd8iYsRVLHfEIWr7CH3R8jzzYLFt6zLkL
5/tMCoXCLdrtEPaceUHaBazNgp8lfB320vrcFJiY4neTmW+sA0z8923rV/5M
fYLdDX6yiMdQAZ1p1tBMIruvJ9Zk3UQ2FjH2NcEeetjH81vMr5Ddc9FR/J+u
sQ58JcaT1X2byrvdnqyfLuLaIi7s9PHHU7HTsB4NiYmRFVXQmH7p6Pm1R2eK
1tyAuUXBCc0JZee/S7jSCUXrDdWZIcRcKeLCPeOfPmf3iWBeMNfHGtRzye5h
1fKN/YAG9SZsmX+WNj9jmsy5GeLUKhSKfOHNJOO5zantO9Ued7Rib8P/AbGn
KzA2VriHtypZf+iNy05JNNp77padkITo6uML3isyCGZ/lb9L3/++DzEewPwS
YvhNYd5J1md+xhT3AjHPDX9V7CF+Jllb+h1C7HsGfQsfK6xd/Q5ZDXwIc2ey
61sD9uJJNe5mTeXahl/GmC5OOnp+9dGZojW/bvuDuqMpOtNVWfI7P+9yWsY7
KPKZsmg57xSyOvNv/scUpTPz0qRd5yLOEeLybC/tPmJLYe/e1alr/rDudVWh
UPjD2CX/SjauNOJ9PSvjPNgQMA+FNQQYa8Kvso9iEvYjzJrHe8jGRnFs53EJ
Mxe8pfZLLmDW6O5Kdo0utN69ZH3iH2DeTzZeEfQf1vEi/tLS6fPdjCVwL+ha
zONj3c6jcq9fkd2383rmD8nuXY4Y99+Qc2DrDLGlptKZW7svQ67Ha67S0fNr
sM5E/Fno+pr40AehKWPXPHVm1D2y5l0/6ky/43yvg/EUdObv/Y8pW1O61KVl
tH8KhaIa8NZl/pP5S+b+ZGN4wl7xKvPfZNdnfyS/T5XD/VvEfsKwcYzXtqhs
eOcxL2HOR5X1Q/GOY26k5aRuMHX7MGlznpQxFrTthWRt1PCXXYusfy7KHzTP
qHjjlFQ684v5jkH9vitKd6bTmaI1J5L1k84pbUWgCeNal2UmaR1yec+kv2VB
nnUsi7Yawslk12fe5Z++RO1YzahQKPoH3pFk12N1xBo1Pg5/IrsfO+bb/kdm
3JfL/UH4P/5D7oN1oPDnD/CNU+QPExcImn8hsjakshPkA+NLuU4106YIhqnv
M4iGQdwH2M0D9iNJde2E55q93VLcK24ayhx/RV87QmvCT3m96tax9rPBDxv7
0MPOjjmKLSTtiJ8LH73dyc5JLUN27gJzmrP00GcOdcj7GSFll4rJk7w0X5zz
Xd077PgiyrzreyTJl8j6vgDZ9e8T/dMYN915tTGqMRUKhQuYONJz+nwPHzZu
FIzWvCHH+yMGCfzmsPYT68QRyxZrww8ia8cYpm1TWTAaYN9q5r93Itm1HWUn
RFEZpFnvmrfO7P2uyPFYvOuF6Ezsfwef5Rz31s2SHyamAPZF+AvZ9R3PkfXB
eaGDnZ/x+7/I7uHeyafkGreS9eO4Svq/B8na28FHmI+T9SlfPL/8iJs3Lq6X
5f5JNVDU9V0hT22TtIzmrcfK1niqMxUKRRaYdVMtnblljveZS8YC3yUbh+Zy
sjFHEIPsWLJr5bGOAXbXzeX4/JLT9zBjS1mXaexMp5Mdv4+kxD60xsaQk9+t
WbdXUVurohwYuxYlKxOuY0mF6qKETHKvOOPcgKsE6kzzK2x/hxU7Vo/z/Gaf
PMScbq3l/a70F/uRjTWyMVk7EeybsGViD4kTyK4JQB9zBdn948GrycY/g0/N
FCHWD8On59EOYq0y9OaijjIj6hkD6PJ6adMQ9zphvxepA/O8tqv67vrdVAlV
TptCoSgeRldgfSZ0Jvxm58nxXvBl+klHG4Q56ta88xg5Bv5K8OGErx32Vzib
bJwKjCFGa7vlEkbLY17/HLL712C+4W/yP/gXGW/dLmM0jNtOZR7DPJi5D1k/
NfjdnkbGNyiXdEJnrprPtRX1RCtGUCKduYXb9iNvndn+fSxzWWkv4T9+GfMh
sjG8EKtp2iRjuxCdCSLeVkq7b17jbJOes9yMx9vEXkPz2f7Ob92GmYO71vY5
eaMI7ZConsRk0HlR13Rx7zw1V5Znj/P8Sa9XxDO7QpXTplAoyoFZgwL/VW4Q
TAygHGPBGF1y/GDbY9qhx8jGopwh4ByMoVYm61sLnQPd+VXmYjIWyC+5jYf3
Y+ZrZOfzEYP4D8zfko05+lv5DL2JeQD4omHPm/+QnZd4Vf5+WY6DT9sSOaXz
aOZK+VxbUU90rvOMdTx0xQaO00DBacg6TjTfQ0vDvgjbG/Y2n0LWH+R1susN
3pb/YYuDzyviKUX6EwfrzPZ9D7D1LXDMjHusSHauCXZF2BTncDvO7joXc47f
i3FcSvpeC+s4b6VCYq5XVTskzb8k7z/rPfPSXHleP0keqs5UKBRNgelPsZcJ
dOa7Ka+BeXZowEUj+hD4Mp00eIzxfcMYCja0ERH3aHEeGddgr71LyfpTYUw0
sjptmkkn4lQczvw+2X0DEdt3CarMPoqAifmJfQsx1zA8oA+DfRn7L2MMizWS
iOeCcR/mDDDOhK15XbLrnJbLKZ0LkxnXKhQtJK1HZv3x6o7TQEPT4GKcaL5D
u3wLWR2J9ezwLfittHnQdrA7TiI7R/eWEHM+mDuaMypvetZm9v6KtfJHDV6n
6zfM+yFeMNY5tvbGwn2flDZ5Zv/7ZhknGz/Y78c4LuL6Se5vfG9uK6adrsLY
vH3vYSF9QQiJwtMe9xnT1h9XeZe3jnPxfGWWkyjUIY0KhaJYeFuRXZfJDYIZ
qyTcR9G0JYjTAv/XtcLbFRNb9qqOfmlhGavckuKe4HRk1+bAl7M1/ppAofvu
5Q2jd7HOFDZA7HUPe+HrQtgkYCvcnbp83cqC8Us+OeIYcEnJ67DjbqZctWDT
dabJ5zml/MJ+P7v21UFIM44xczyO50GS6Ji440XzGfN295K1VyIu91nk6xtr
ODfZPRMekmNxDuyb46PyJlhnml9h/z2S2j6lZn917LWONZLYmwZ7r2PNNOae
oEn/yHyFbDydlQKeKyTPQlP6NbL7uUYdF8LI48Zato9Zl3ljxA0bAuM/DC2P
/cyekr4Le+p+Q95767gYDLxHzGOL1ltx669LZNWW2icoFIq6wJuRrL8kdObn
zPfJxMpIdI2RMsZ4Sq4XduwOZG2X0IVrMs8nqzN3zvQY9trQQRuQ0U1m/RK0
Htb1zFFcm2za/wGyehJ9NtYx7iH99Y/I2m6hO/8rebYLlWqHNTboYyKOQVwN
2Cq+FfFuf8FcIb9n8RbJ6cIlw5QZ2JMx/wK7EHTCO2R9kjEnsQ0Z+4JiEKl0
Jvw8HccOzUVnwpZ4S0cZ2Cfes5rf4WvwjJx7Y9Q54TrTHIE2GjGooSfPlvZ0
N+paG9sm1s5jjTb8erFf6vpD8yYw3SHPZY5BGiJ0ZtIxedfvmGuFPoZ+nl9+
x3fXRSSsoohd7mC3xNwv5kCxdgb7OyJGw2fyN8YD99s8yaqBsh6Xh+ZKUn9d
QzWlQqFoOsw8JeK7fEB2XSYI/1noxQQx9sy+UFi797voNtH0a/tI3/WEjEcQ
W97RmtB2u4z9UzA2gr67mHmBjFWWpNzG7EbnQrfBrjAxoL9o2QSQV1jfCL15
JxkfrTJg1lQeFPI7iPHlWzadgcdNK+90+fz6RPjjNQ0mfxeXutCa6/mMBvey
BaE7r6a2PVnHHOnGYMbutnC+6QjVjzGOM3/DhghfWcxHHRr/WdvHbELWrgmN
ukpU/gxdnznkCMQIwxwSbJTzBqejfX+snX9O+pGJ8dMdmkqszU+hM0Ov2SLW
+UMbf0h2nmeC/L47mbmfqiCt/grlrmT7/1ZbA23ZGgu0NCf+/g217elJ05f0
mCKQJq/KvLe2+QqFok4wc9FY2wM99L70M9AID0pfi34FuhHrKLHe0mfdpDeu
4+91ZExzbYK+HX3WIsKcYvl0tdPwR8RcPPx7MX+7P9n4jRFrQmPfC9eHXj6b
AuNgdqUHNkyscYR/G+aSp5D1DfM5L094P6dQW7JJz03M98jM9QceB9897AGw
tPaJQTA6EfUJdp49yK5rRR3D2Lblt/6xfP6f1MWWbQH19Bwdc7SQZgxm/CAd
7lGRx9jQ+INg7g32yMs6vsf8FGyVY3zOQbmaoSNNWF+HOLSYn7gmTlr8daY5
72jpF1a1bWXs9n1HsloTMd4W6D4vTV6ZWEgD4cclzXtzHPqeu2hwjvXXZOYo
ze/79ryDhrD9POin/kGDc1ooc5jz3EveH9btox2C3sQ84xeT5X/Y+yhTR2XN
tyLvWXTeKBQKRVaYPgQa8k3pW6ExsXflAkJoz/fkN4xtYW+DrQV6BDbBr5Nd
9zOq45pbk7XNnV2PNtH0r5jnP5CsnxfiCEHzwRY3U/JnMHt8Ym3ipPj9QrsP
wRoo2EBfER5VXN9ixo2wq64bkc77pSxcHXLcih3lyHVCawbzTpeTeoH6Mpn5
bbIxsLCmbRspf9CciKP0rtQ3+I/DZgSdAL2BvR6xjx/Gv59K+Riv+QukGYeZ
cbJje6ZfWrLUX7OuAG0zNNocHd/DN2MKmZirXcdjvu4GMvG8utKDOGlvSFs/
39D0xEmv8ZfHmopdko2F299hHuVlaRtjxJUJzResP7go/LjE1wSxJhH6CloK
fdjSHb+jrg6EX79KTArjE422Bz4Ur8vz9l4Xc58YI6D9j7Gvamdakqa3iH4v
LC3O89cRFQqFoi4wsV1/Kn0LbCVvymfZL9O0a1gndhzZ8QVslJjPxFjhcenn
F/O57rZk1yN+s57tohnTryJjDuiCSWS1J8ZqsHlOH/xcxj8X66Cw9nKWZM/f
1Z9gzRN0BrTE/gX1ubDBYj+SpUOOAZ+QccZ3Q47bXMrMbM6TWUmYcTNi8EJf
byljNIyFsSYYsagQW3g95oJk19v5XQP8sdRFjPMW9xlnYM0bbA6fynjvkHrW
MddIOhYzcyqTycwjubqHmQ8YJfUIcwJH2zriXUF2j2DsiXF7B39Gdt3ldWT9
oC+V47Ge/EBbD007At1zfc+90M78nmxs1+07vkdbBT+ChXrSjeOxV9HbUi59
nifs+cx3iPdzbbxzfc8fLs+LNG+d7PwheT2Z7Dxn2DEJr2vqJ7TlJ1IHz+r5
Hb66A/7nJrl/VfWG6a/fl2c/IOC+28oxmHveJcZ78klrVTRUVBpcpbMq71eh
UCjKgJmjxhjoCuam1OU32tXuYVyGtf/QWbC7TBdyTfjNIj7d5vVuL7ueHzYp
+IpB/0FzniRjneOFx8j3GDMi7gZ8ciPWr0TeH2NV2B+eJhuH18lThdwP41rE
Ilpd7g09Dc2NWD4T5PuJZOcZoHFgd4VumsbnWlhz+xfy9eurIsw4HLZr2KLH
S34vJnkCmyLsR2szv0B2jIwxFvzoDpV3jzHa1+V7lP+FqGv9ZKxxLng3WVvm
MyHjHmiJj4WXFVPHzN5By0ieFHC/9n0xF4b5mnFkfeoRI3YpSQvaouU6uLwQ
72xJOXZRKaPj5BnmlneM37DeEXM4G8r388mxrfeOOYM1yLaReOe7SrnGO8fc
AfQgfO6vIKu/ELcJccxul7ZgObln67qLS9qXl/qEcoI2F/NXe5Ad20ObnibX
wTwX5vPgo7i3T95AF2EuCr6o88p1EVPtEJ9jQcSohWaFDu3YazTO+zTtH87b
MaBMTiX5uqTUl1Xk+WfsuQ7iJmPt4w3B946lM08nq8nDjgnhkGMRoxzt2idS
r/7sk/aEOnNIOjAPMVreFcouYrEjthDWr2K/q8lk4+HhPWFv0Avt/cz6C/Bi
+Xy+HHOSlLP9pQxNlOvOJ+8r6T4/uCbmnB/oTnfXc6Bsou2HbXyZGO8p5P5l
6Kwk98yavrT6UnWmQqFQhMOM6TAmabjPpNHeUwuhyWYlu57ncrJ+t5Nk7NAa
yy5HobqrV7ub/ga+x/+VMU7S9I3sSN+0kkYQ+9nNIeOdhWW8sE7HvWDTPEaO
g48bbCDvyxgE89jwq/JkvAG7G9aPIVbJVB33hg38T+QsnlPXc4HQv9AKGLdO
EGJs29KEG8k7OFDSNpnsGA77lmJdI/TB9+V/jNfgnwydCO0IPYHxNPxZMVeC
mMVryXVXkvtCP2DMGOL/l+q5YAuHPQFj8WkCxj7wdW/F5rhOyhW00SwR1x8m
hP5taWqUAWhijE+XkvIwnqxegK6GDoJ/6YpyLJ4dcWUwj4Ix8pclr8DtJb+Q
Vyv0cHm5Pq67iOTfApKfG0he7052zI3830U+f0XuA32/npTTdTreRyvdILTh
MnI/lAVoxPUlvdCJO8k1YVtGfXqW+TDZco8ycLqUjfOlbJwn5QN7QJ4sZQjl
Gv6C+0naNpS8wfOgvh1h86n9rlKWBXM+8uo/wkX8r+OdQbbOIi7qr8jGZ/HZ
h8rUE9hLW7Yo/A1bO9qowyW/V5fn8ImLZvIV2mvxwXQYuy30NmyU0Lcos/C/
eFUIuyX88GftudafJd+Dnpui88y8m1PCj4s7jjfrXJHulsb8J/nGIW75zZp6
j7KHOUf4E2COCe3H0VI+TpYygzKEuYdb5d1gXeufJK8eF8LnA3N7WJ9ynxyH
9aG3y3lof28U3iTf/VSOuU+uib4Wc3qPyTUfk/vgN8RrQhuBmEmtNSFo4+CP
jXqxnvyPeoe9QTEPce9g/g3JT5QvtE+YR/Zpn4LeQZb34wpJ75VVJ6rOVCgU
inxgxrKYj40RJ6JJMNoHff5Gg89t+uKl5Tv0+bBX+Y0Dce52Pn07xvgYZ35b
Po+U62Fcf4yMZ+C/DL+7G2R88gsZr9wr4wKMR37bwfuFD3QQ38Ov7kU79jD3
Wki+64xrj789YSteBMYd8KWd0JHusyQvhgXkFfJlUXk+6DvEY8IYHzYKjB9h
M/qK/I5xEHxRMbaHVkQsE4xtf0jWd+5cOQ/jOowDMQY9Sa4LPy9ojRXkfhhH
w78V8/1TZ3jZOcCMLzCWfVd4ytAxh/mMuvWx5PvNcs4JkgcXSrmAVsM4GONe
2DwxRoWf5s+FGKveJv/DHxJj0RslX2+R66JMXdnBC+WdQNNBY0D7TJR3g/II
Wx/GsAdL/p8saZkk6cA7PUCOga6BfoQdSeK+mv1BMVeD+Q3YMOcQziacRd7b
aOFU1GWzSTo+M/p8bPRxSZDEhh35O8ov5nigIQJio5l8QB2HfnzTlnffayHf
oMmfl2vi2tDq0Fiwmx4rdel6KQfQJYfL+0Xer0tWD3XuJwntDh9utBnPyd84
BvoGbQr2cTqChuhWM4/1UHS+hMHM5R0f47goYl4E7WtLY2K/piUCroX5wkck
v+GzfJ88I9paxFm6l+w8I9p46H7UIfg9o106VfICdRJzJmiPFpS8nSZ+mfF9
tpH2vZj5XcznoL3bmWxsdcxDXCrvFP3C/ZL/0PrQuNC80KXQ/ddKGfqXlKve
ey0oeYX5xZj7W8d6lzGZBWmuq/pSoVDkCa336WHybZ2yU1E8jI75kx2n+I4J
Ma6DHruY2nY+k1ezSB9/7NDzjL0Ec+0Yt2OMDy0JzQCbC7QFxouwb8FWg3Ef
xu2wQ7X81pYRwjaymBD6ET7Qc8k4B2twMScAu86tHffGOH5/eSaMSx6Q/1t6
cwrZ8SV8e2+z45D2uZfL8Rh3I74E7GIY71wvx2Isdpd8hm6aTHZcBPvAcZIW
6JzWXD7sArA3fU2eZypqHExZmFHyGxoSvmnQmp3jUNiln6TBmI+ryLmwU8Nm
BRse7HWIMwT7BTQobC/wpRsVcvPetIyUeyE9GMOOoSG6rkqo0lgtqc4M/A11
CPalKyOOPY4G1xT+X0S6oCugJbYMTqfR9uuSnRe4xLYJRj/Bf79jPaspI4tL
fZydhmh+3zSgnYEexfwV2jRosMvkGVHHfyTPjfoPXYa5CMxrjKauOSvTbiSI
Q+NL5EFrPWZr/66wtel7kNVja5Pz+Yk8EPjcIyQ/0fa3/MjRTmMO7nkpc2g/
On018G7R93wg5WfzZGnIlN4eJkXaaxWlKVVvKhT9Ca3v2dAv8V86YewFf5T+
2u93cDJZbXaCfB5Hdi4cNgsfP2MzzoLOhF1oRTk+wEaYOf0YR1wacQy0K3xl
35LxFsYsmOeeo+c4zOXDh2t3amscs751zY7nGOF2PNEEmGeHD/AUGdPBromx
LfzaYAOBfQK2q4/l+z7zGQhCmrKTVzmLm5ZInQl9B9vjSSHHYR7qWbJ2Jqwv
hO/qFgHHQjc8KfV3rfj1zsxzQHPC7gW7s9FY2Pvk0kv9zgl9roWlbP9I2oFl
hS3/6pWkjdhB2kjMycHmDlvcnZInmGPDPNWeyd+fr8YEoTEj9iw2bfHN9a5v
kdrnPGnbQcwpwncEcwCw474nbc/PKPae01nqmAu9mef5RWhQhULRXGh9zwbY
QvoNxmcJOnPOgN/J5ovxS3yW7PgR/lfP2HGV7zmwJ0Jn7pV/WTS+s6dEHIOx
4ZvCNUKOu9OODRXJ0G53Vpay1IoF/a6M/T6kQVvml7WNaqEqOjPJeDFQ17WI
duLt4Dpp/CZgG0QMcKwPPEjaiqdt+RlyPOa/4OOKWODjgtPrqx2xfvb+zu+h
M6dM8WiaaeLqTPM9/BGe7y67nccH3h8+F/DThg5dTNqqiP0bfe8P+mnMpWKc
D01/e73rW6S+gV8E1iP8lwbX47f0ZWvOa/5i6lhWPeZKx7nWiUHlXXWmQtFf
0PquSArjj/qoHbOE9jPwMcPaGMRxgR3iKyHHniHjwrXzLYvGNxI+dQeGHANu
J+ON18PHZmYN001af7LA+LZ9i+w8RCsWEwhdAV/jDr+2fkdanZl3OpLew/gm
Yy4HPqFPiw6CX0CPP6fxWb1B6uEd1PYjN77S0JqwP/XEhTI2wtel7eldMxmR
brOm8CHq8Ff/5BOP7rnHo4kT446Tzfe3yfME+J3GGqdPL2lZLYVeWFna05av
7NND8zbwfKwjvru+9S22Rhouz4o19q14Q/BTxrrrWZPXsaz5lVbXudKZLpFV
oyoUimZB67wiCUxcV8z5bx0xToJWm0LWLxJjwh0DjgNvkmMDfHFdwayxgk/d
JiHHgIg1g/lt+P6ODjkWsUCu0vqTBe1xB2w5iCOFtauwWWEN5oios/sLddWZ
ZkyPdd1Ye32O6DCs1YafPPZSxVq5n/qcB515rrQP8/R8P5ns2ugJPee07KM/
iJf2rt/GkbVlrdD6bcstPVpoIY9mn92jYcNijfuxlhNzJhcH50ssnQk//D+Q
b0zY9jHI1571BaYeYX1Cy44JH+PlQm7Ue03YUu8Zet2yEFs3hjDsWi7T6PJa
cZ8rbx2X5npFpk+hUNQDWucVcWH6CMS0OC9gnAXCTjFFxmzQm/CbRXy/PX2O
h4/tY3JMQLxJZ2lHXFb4jy0ZcgzJGPZZOwYOPQ4680KtP4r8kXac5rps+o51
EYcXvu/w1cQeEhtLvUfMK9ikoRNhl0Tc6B1EQ7WuAT9N7PEJbTZ2aHqN7TMg
HlZnTGtzLayrbu05MiH82X11Joi4XBe1fr/lFo8uu8yjSy7x6OGHo96BiSNz
rbQxywXfP5bOxPoE6MyOGAAmzhniKCO+EOKSvS55h78RVwvrKrHeED4kn8rv
G4bcxO++mIu7tzvPXWi9Mtn1fCG/pUWeusnFM7u+t4v0KhSK7Kh6/apimhT1
gFkz9CANiYNkdCLWY8IOiDj4ssbFxNCBjyn2bNuku8wZGwfWU52cf1k0e79h
jDazfEbcHh97pdnPAmPncSHXInmmM7QOKfJHpXUm7H8zSd3GvjyHCvcguw8o
4n0G7M1i/CNgf0Pc4WPSPZs5p7X3CWyZdw7eL/GzQcs9IM9h1mf++c8e/fa3
9m+wOx+6zoWGnkLtmEZB94/zDs2+HQ9Q175Ept2FPyzsv9CRn3cQn+FvDo35
seTnCeRbbsLub9aFwod0uqFprSLD8rb397z1WB7Ikhd537tKaVUo+hFVql9a
530xQHMx52CSIcn/lvOb3xU+MH5r8H07reM7EPtLwG6JdS4zdZcts18g9qtD
jIlp5DvEeMRYCvpzrvzLorHDYm0pxqDYwwJ7rIxPd1/zvPD5m9zXdUhRINK0
2S7LZlDfYWySAb/HImyhsMvBx3NivGfsOh/1GfsJIW4U5riWTT/WNb/BLot5
NPhsLBQzPZhTgy3x19TeXzRO2gOPgWa9t+c7zIvBtxxxhuDb34pPi3YI/sjY
pwN7qMB3+EgK3LMyVCuMJxt/aOzQtJbBpAg7P49xT1HjqDzzzMU9A8tTjulT
KPoZRbQBrtLTp/V+gBZmPiUc36Mzd2I+w7yjzCRWF6bcYM8A+Lpu1/E9xjan
U+gehsa+IXtQmj3x4PN1fEF9NWysd8nfsJ0sm+FaIGJGwHYx0knyFIpQpGmz
8x53mu/XD75PrPEp5q2uIxvfGfNUG0U/Z9f5mN96TbhvT9oiGHhd+I/CBxZ6
E3vbwr45LkC/wJaKeTfsG7xysrQHHoP7/TzdWN/Pdhy37BifZujMmSMOrCia
qjP97pf3uC5V2eu5t443FQr3qKKmq2KaCsQALc5ctee7Q5ifCo/ssGPOKNrz
A+bvS0lvJWDKxrxkY/PD7od4HJgv37TjGIzvoDUlxk+i/cYQbwJxEH9NkfP/
LmDGXohPCZsm1pBhXzqsDV1B/j6V7N7psLf+RsZaIGwG2AcPMS63t+Mwcz2M
OS+V42uwn7mi/qisztwk+D5x+h7zN+LXIKYstCbsmvuGp719DdRl+N3DX/ai
6DxKPD7GOstJZGPj/FHSiLmlbaXtWJfsukj4ZOwa/X7i9r3e18naJWOk2WXf
bnTm76gxOtOL+N7l/fJEUe8/7J5Z09IHY02FIndUtX5VNV0FYYAuYz7IHNXx
3ZWiMT9j3tahM3djvsf8mHl3aWkuBcYvC3H0DyTrlwXthfWTiBU5MqDPwXgI
+u0Usr6oUfcAodEQsxaxX2PM/7tAex3YmWR144/lM/zsME59pYOIkQvbCPZj
wR5r/+v4jBgfsG8gnuREattmnaZ1jr6pm4qYSKsxXZajwDH8nsH3SaTrRkvd
fF3qHfzv1yXrgw8fUOz1gT0nFiC7B9LpUnexXvHBwfYnVhvkd/+wdCMeEWIL
QXPCdvkHaT+wfwl8/7dJfu9QnSn2zKLRNHtm3mOfIsZSUc+Q17NGXUN1pqLO
KKKM5tneFFW3EvXhHd/1Wf0foIuZzxlf2cHvfs/8RPg4c5jozFvlO+jMCxzd
HxzOXIK5nthXR7Z9dUuDGTthX3DY6bCH4flkY0SuTbE0o7kGCHvGfcIDyMb9
IJ8yCPvhHmTtAtCY2/leMjd4J5LdNwPjQvjQIlbsN5k7kV1jhnHk5mRjN65J
dp0X9tfAei3oaWhp7LeG+BrrUm7+smb9VT6XVtQUZevM0P4lpLzGTXeXnkNM
MOhHrLdsrducQjYGNPzsMd8DLfq2HAONGXMdZVCaoj73nmc0L+KbLSrtWtLn
jDjWtDHXRD6Kc9RdZwJF6p28x1BJnsP1c8c5P43W1L5NUTbq2j4UXY/S1u8+
rPMDNIn5EnMD+TyG+TzzI+GLzFmNvdN+/6n4ze7m4N7gvGat5wC9ynyb+Rrz
d8w1M1/fwLxH7AmAeX74eUEbYW8B+LzCHvlVsvoP+40g5irslPCDhc0SayMx
Fz+ehqzriX1vcCYZG0HDQaf9kqzNcEAIGyBi8GD/Ami81cspe8YeMWPI74dT
6XuVeHv1Rb1UJEBvvUyip1zff4gmC/FxTd2ewM/hh2TjQyPG6qtCaExoUKzj
hE/EUdTeDyXxPQKerRtTTz0Ya7bFiy7qjD2bBLF1JnxzMS8G/QzthzhpmL+D
tl2V7L4xWB+O+UHsF3OW8DTJE2j/LaSdRQzZGWKmD/GMGq4z87pXHkjzHK7G
fHnqzD4ZeyoqiqLKZj/ozLjHNhwDtDvzP8yD5PNqzNdF870rfy/LXEU+Q2e+
ZeyO2e8NO+bPxBf3ow4bKuylrzB36Ip3Gwrj17oU80tk7WsYY2B/Otghz5Rx
CWLxwO8Vvmw7yFhjfRlvYD3RwsxZyLktrl2eMLe/kaQNe9HdTdbOif+h3xCb
f+pyyp55/v1CfoffHtZbRuy9lzdUZyp6UWmduX/wfcLGp0HX7XpO2Dehs5YW
QnfNQUNsiEnyI0xn+p/3t79168zLLx+qPeMhTprN/lDXkF3z+VQPoa/h6/+8
/D+lh8+Stf++IPy3fIdrQZdfwuR+0MRxm5uGrKn3ViSrM332e1IMRRH61cWY
Lel10tw3q+bsozGpokQUWQZdXq+MepIkj/q8Tg/QhqLpzpTP32C+w/x3h97c
iHmU6D+s2fyX8W3Nfm/sm/IP5hPMO5n3il3zYyFsqUv5n2x8szAewLw15qwR
u/4Isn6emNOeh4asm+yzd5sIxpY7T8jvO5PVxin23nOJqBgoiv5DmTozsn85
IPg+YTozS7/kYszs+fwedD51acoHHxyqM+NpzThpNr/NRtYnBRoe9knYN+FP
DJ8RrN3EWgXEUsO6B+jw+YX4jPk0rAPYhawPC/b4/QnzYbL+JC0Nir+xFwvm
Ac8m65OCe/0qxoMoDPLqa/Pq05NcN+0xLqlQuEaR5S+vaxVVP7K2F31Unwdo
OdFzN8nn28W++Avmy2LDPID5c7FlftKODZT93uOY+LdWR6wh7M15v9g3P2Te
PHiCGSvsKmODM2WcgfHEDH333pzCjL+ODPkdtuKfytiuuGT5p+XA8tOgqBbS
1P2i+jejexKkwUUfH/fYONeOo/vIV1fmozPzgpk/gybd0LaFJr42YmtDayKu
NmzF8LfdoeCE1Rh5vMsixmlx7pF1bBn1exoqFFlRZHlzdS0X/VjeiGoDGo4B
mkXiAD3CnIn5rPjF7id2y/eZp8n3n4n+OyyzzhygqcWG+YixWQ7qTHBm5pPG
pnn63C/TLFOgJ6EtJ5H1LZ01+4MrBmHm6ceH/L4b2f3yhpdfJ8LG7Yr+RFk6
M1b/FmMPkrjXTfpsSXVm1DE+v8bQl/G1ZtXGzSYd0J/TVydNdYLrd1m0xso6
5nZxrOpORVEounz1k87scwzQCLIxZaEpv8J8U+ICzSvfv29sitZ/9jP5f9ku
nTkYz2eeWOsp7TFbyX1O6jpnUGseTwdt+hFtc/h7tOrVe5OJ3a9wDxMH44iQ
3zHOwh54Xy6/jpp2QuPNKnqQpv9L2+ck7Xuj5kXy6PuS6sy41wo4orE6U5EN
eY1JyygfacbbWdOsOlNRJMLKUN10Zl73UqTGAN0lazR/Jn6yv5Hv/0A2tuzj
4sMKnTmFevcdsfFoYZu8VWyiUfcDfyRrMTcZcrz9fXtJy3/J7nWiyAXGRjxf
yO9LkI2BO0P5ddSbjkL3I1T0J4rSmUnHdsb+H7I+My+4HA/Eu44breki3Tqe
qA6apDPD0pF3erLqzSrkm6L6qKPOjNUPO7qXIhMG6Byy+4lAa75jYv7Y7+8V
nfm6rMvE+syfDrFZDtDacj78b2eLqTOxRyfi3C7vYxtFHNprya4ThcadRnVm
HjD7XO4dcQziL15UjfppYkBuX420KKqDqujMIceP6hed2Tr2gAM8evllj557
zqN//MPGon3kEY9OPbWo8bCOJ6qDPMpgFd5vVXSc6k2FS/SWDdWZCocYoF3E
X/ZD0X5Lyfe3ic78SDQmfj/Yx8/1ANGnT4kfbtT9SPQq7nmh+NtOJ3bRzcS+
+gbzf3LtmHubKOLDxE88ncweCIHHgNjnc5dq1E+zB+rW1UiLojpIqzPTXj+2
zpyVSvHzdtWvphu/TjutR7PO6tHMM3s000wezTijR6NHFzEe1vFEtZB3GSwL
VdJzWbWm1hMFENmXRfye9Z4urpEl7VoXcscALSbrLqEl72MOk+8v6vCX/Ux0
4RI+OvMSsT3el2B9JmygT4utFHuoYH3o8+In+4b8dpBJi2pMxzB1CjEVl484
DnuJ3kMmRlAV6qDRmdtUIy15QccGyZGXzsw6VjNxnHcq/n2VqzNJtOaYMZYz
zODR2LH2u3zHwVpHqoO6aMw05S/o96q123nXN0VzUEYZyHq/rPXV7xhFbrA2
yEdF8+3a8f0RZPex/Fw06OPi09p5LviA6MwLE2lCG0/ocrLrQHHtvzJ/yTyW
EFdIkRPM/nL7xzhuM+Yt1amD3lhq9PpMHQ+kQ5p8CTsuvb7quc6KZONj53Cf
JOlPi/Rp23hjj2680aO77vLonns8eughj/78Z4922y3Pca/Wj+qg9z2kec9R
x2atP66YJN1Fls08n1HRLJRdPrOen6Q+hl0ry321rkTCxotdlxDjZ/C7tWVd
5ueiN8/wWZsJjfoPsnuh7JVQZ3ZyWM9nRS7w5mSeRrHi93rnMI+tTt0x9Xj/
6qTHNfq970/7/HG/L3y8uTrZNdCOnjfu+3dVTrKVv+h4QFHvKmt6FeWh6LpX
NtPkQZHI+1kV1UOV37OLe6Wth2HHJL2f1pHMGKAxzBdkfSb8Wuf30ZmjRGfi
uEVUH1Ydxl921Rh1alqycWZXqFa98Q6tVnpcokr9gAsUNbYLy5O80xB677WZ
a8Xv/1y9f5flJP01su1xkuqO5O65FelRZJ3Lo/6keaas+VAmisg/RfEos74k
SZuLaySph2HHJLmX1g0nsJpyTeaJzJV87Yz2u18xb9e1lFWHGfd+M15d8LYk
6zM7vFr1xjusWulxhar3BWUwTTqLeIaoe7S/n0jWphkj3S7zx2WZSH8N1Zn9
iizlt8j2LQ3SpquINtzVPfJurxXFoOh+L8n5eZX3NMdQxG9B13FZF7T+hMLq
zPWZE9TftcrwRjLPJBsDM87xF1IlNV1T7Zl5tOtVpyvE6cvySn/Yc7V0povn
SpJ/eeVzMqjOVCRHEe1FFmSti3m2ma7b3rLbdUU25F32slzDrw918XxRx8VN
e5x79aY/Sx3QeqNoArytmHvEK88m3g58ZhetXvmvovZ1gai2ynWfkUe/Uxby
yrOk9x7Sl02kVDoza/qq8Z6idKZ7zRl3DFC18quwqMO7SpK+uHXYRXtUVNtW
x/6hXxH3/aR9b1nKhF/5D7pm3PsnOSZJ2U1Td5NC64ui7kDMH+9c5vTxyrP3
ZeYNzGHVK//eEdVLkwsk6Qe0Hx9Emv7BZf6Fvrd1mKulv07a9FennJSrM3Us
XB/U5T0lSV/S8ueyzrvMzzT1qkrvrKnI4/26un9ov9jzXZ79XJq6lvU50+aj
QlFnePsyt4hflr1LKda+J2XAO6bZdbLdVs3I3I/5E+YdZGP/TtB+vBetuZCy
8iR03Ij3tUrya2Ttw6oz3ivWpqnj4fqiLu8lyzg46ty05bWscq31rFy4yO8y
3lHv/dI8R9rjotIU914uy7rWD0Xd4c3LPJXs+sy4x/+SOUfuSUsF77jm1sl2
OwV98jfme8yPhR8yX2WewRzR3DxIirLHMqHjxonMZeOf66rvKjtPOlJSuO9s
+84JqCgfdXkvacfAYc8X9nua8+OkwQXSjL+r+l7rBlf5XMa7cVFW0x4Xlaa4
93JVvrVeKOoOU34nMVdO0O4gHu0FeaYqPUzs2wbbM837wj4yz5LVlp+Q1Zdv
Md+Vv9+kRmvtpEjbxuc11ur6DT4EC8Q/11WfX61xXTlaM/S9hPymKB510SNx
0ph0PBq3/qfRc3m0LX6oQhr6CS7z15VGSpKGqDrgd0yce8c5LupZ4t7LRfnV
+qBoArxNqR2fNU45Nus47ySz/0kV4c1M7X1Zmghjp7yHrJ78iPkv5j7MJZgb
MB8ia+N8nrlg2amtBrL0rXnf38TdGhb/XFf9TrX6ryQ6M5+1mml+VxQHl+Pk
opklPVHH5/mceaCKaaoLiiibce6bR3rDzvX7HPRd1P3jHBf1PHHvlaW8avlX
NAXeDGTX9I1N0OYg/s+NZOyGVYS3OPOQ5tZJbzzzZbIa8+/M+XraornIas93
yPjPKrL1rXnBXH8R5ibx+ra8WT6qEXs26Ldq5FH/IqzcFlVHXNWtpOdmqbd1
aBPKTFvZZaNsJs2jJHBRR4KuEyddcZ83SZ4kuVfaclqFOqlQuIApt/Av3TBZ
+fWuJmODqSoQU8XENCo7ITnBW5j5Ilk/2YkBbS/2QIUP7aNU2fmAIpGlb3Vy
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
us9XmRtEXB/8dnO0mYnZe2IznqUX3vJk48x2rsP8VLQl9Cbi7H4sPLuZeVAk
tF2vH9KN6T1P37HCFVRT1htZ3perd1tVnVmH8lu2znSRP9peRGLAcGfmT5lL
ms8KH5h9HveJaLcQS/RmGlx/dxNzVMR1pxM9Cu0xc8T1R5O1Za7cjPJr1qwe
14xn6YV5r3+UsvAZDdouXyBr6zyzQ2cONDMPioS26/VDep3ZqTVVdyrSQ3Vm
/ZH2veX1bqugM+tSnsvSmS7zo8r5WwFYjbkA8znmW8xDVWcGwTuLeXxIOZ6a
rBZF3Ninmb9jvsS8kNqxaH3PwzpL2DKviy6X5liszRzejPLrfYEauzbRvEus
x/wl819k/WSvIGvnxG+n0+B8REP3EC0S2q7XD9l0Zktfqs5UpENdxuKK5Ijz
LlVn5le24147D50X9nvYfbWuR2KARjHnZg5LcA44ifkB8z3mXqozg+DtT9Z3
1u83xOb5Htk1ltCYazFnJBv/ZwqZ+LC+1wRvI7t+b/MYbdIPmXs6eZxKwNuS
7N6hZSckA4LaqfZnlI2p5P/O78/p0JkX1zsPqgDtJ+oHdzpTtaYiOXSc2XwU
obXSXr+pOjPJtbOmJ875qjOdYYC2Zf6WuarPb8MNh34PPsD8mPkOc6LqzCCY
PTL/xjzZaqOu374pWhEacx35DpxGjr+DjL1zyDUXZT7H/LMcG3Z/7JGC2EIR
MYXqBGOfPaDedTtpO97+/mrRmLo+0wm0n2gO4uvMXioU8aHjzP5CntrCpc6s
e5lMmu4sx6vOLBQDtAvzP8xTe76HjfNW5o+Yo3t+m4X5CvNT5uvM+VVntuDN
RHYd5DZWV5r4O78mY7fsOg5xX+8RrbhGQFlGXNVZes6D7+tVZH1mj47RHsFn
96xm1QMTv3fPej9T0nnD9udHyMYF+ohqb9OtArSfaCZUZyoUCpdIownzuGbg
2MBRmspCnumOO84KS4+r959k3NcQ2Bg+LzHv6vn+ROZHwkPkuxY3EX9Z6Myn
mSP6W2ca7bcC8xjmsWTjy05gjpPfYX+8l7r8YI0/JPYamTfhfSaTtYE+QJF7
lHjTk43/s1Kzyq33dbL7fZSdkIzAu/fGdnyO4pxk1/EiPtB7ZOMhFZ/sRqGh
7XrfQ3WmQqHoRNK5XdfnJ71mXs+RNV1Z7lumvipDZ+aRhzXEAM3A/Bfzr11r
NAfol6IjP2E+LD60LZ15jvjM4rc72t+7SQ84J3NX5j7MZZxePxW8aZmLMNdk
7kjWZ/NQsrFoJjFPIBtTds6Qa6zPvJ/sfhxjUrRFs5KN+/IyWRvokjHq9K7U
XhvapHLrHUmRe7lUFeZdIPYT9r48K1k75n2HrL8s7JnPk51HKOEZmoSGtut9
j2Q6U7WmQtFElKWV4vYpeesWF8/gMv/K1FlJ7uf3W9zz88y/msLqxyeYU5hj
5bvp5DPi/HzIfJW5WIfOfEg0JmydxzjTgfY62zCfYr7NfFfufa6JV5Q7zLgd
6ylhKzuIrBZAfM9JzAPJ+sJi78bxZP1jsTZyWPxyYfxjEUf0d3JNxBAdEXy+
+R6xYHZn/oWsxryLuWCMdgTXvYEaYffrhfEFXq2ez2XeG8rSG8y/U2QM4Ha7
A5s04kW19jpp4PxBGWhou973GNpvq85UKPoNeY7zy9AMSbVPHvonSz7WRWul
yb84x9Th2XOA1XaPiO/sYvLdmrLuEnxN9N7+cuzYjrWZ+H4Nh7bM2ZmPy14p
iC/0vthNoTmPdnQXgdFvSzF3I6tbzicb+xU2yu2Yy5HRnU7vCcKWifg/8HvF
nhWwcV5Ads0h1mNir8sR9t5GIyKGz4vMf0rapolXDr2NmLfKc7p9jNLhncFc
vJ7PZd4d3insku8wJ8Zo07DeF3GfYMeEzoTv7PLxyoEiHA1t1/seQ/tt1ZkK
Rb+h6HF9nhqt9/px75dX2tI8g6t3kbeOS5N/WdPVYFjt+KDYDVeU704XDfmY
EHrvx3LsRh1rM19kTu/Iljlc4g69YjTlAG3I3E98ej8UG+cM6e5l3iP0G9az
wU55LvMisjFdsZYSNsxpHDxF3LSAo8hqQcQMvZes5oSWRGzaR5lPkPWNfEbS
mmQdJ3g5c69mll+jy+coOxXpYN4N5hg+FT5u361v2zMP2X1MXierL8EPqR1n
tg/ap9yh+dg8BPfjqjMVin5CXuP8MjRa733jpCNpevPIgzTXy3I/F+88TR5G
HdPHsNrxfub/mGubNZoD9EfRkhcwrxP/2b/IsaeJjRE68zcOfWYXZj5DiHs7
6J8LfoH5pthWV413L/NeWYcYHYe1fN9n/oBsfNbNmPOVXwaGlMP5JG2wdZ5K
di3ewWT3JUmYRm9psv61MzWzfJt1qlOVnYp0MO/yPLLxYj8nqzXhD3sz2XkP
8FLmw2R9a+Ej+5kcCxvo3czptO1yBe0HqgNX7yK4n1edqVAosqEojRmlM+Po
nCRpLhtpnrlqOlPhC6vlfic6bmPmUsz/yud1mEeK5oTtclbRpJ+I1jzJoc6E
/fIF5r7t69lrTyffv2mO8YVZIwk9hn0VJ5HVlLD5QKdNJBPTs1/KgSnzp0o+
lJ2YHGDWM15e32cz7wfxh2Gr/lT0Y0tvtviZDz9g/mywLGvb5gaal9WCi348
/HzVmQqFIj3y0jpl6cysyPs6ZehM8vk9bl4rhsBquftEV27FnCxrI7FOcmrR
nlgf+QZzvZ61mWs6XJu5nawR3a/rmgM0DfNZsbeuYr/0RjKXIOvzCvvPhWT3
qdyDrA/s1P1bBowd907m/M18buwnauYRyk5ISrTL5BeZL1C3vbKX+B52T6zP
PWJouVZkh+Zn9VCOzlStqVA0Da40R9prur5/XtdNC1f3Cju/Cs9ZNBr2PFZn
3is6cmfmH0Rnfk9+h33zNfnuFNGXn4omHO1QZ67G/DfzRubIDpvmfMyXmc8T
4gTZPUaOYx7F3J6sbWi4o1Q0ACaW6RnNrHuAibV7Vn2frattRNm9WnQkYgJh
7SXslu+S9aX9I9k9c+as7/NWHU3tp+qOtGOLeMeqzlQo+gF56LKidKKL58mK
JG2ti/vESUfQc5atP7OWhd7fGgSrM38pfqnfIhsP6H/GVml/n1E0JWIB/Z4G
980MXptpvx8pfrYjY/nWDtAI5o/EP/cq5lxy3iFia/2ly8duJoy9C3uZLNa4
ctqG2d9jcr2fb0hbOANzBeYmzC/IM85WXnvZT9D8rSbSjqey6UzVmgpFk5Cm
HSmiDXDVtrm4d9xjo9KfFWmuU5TeTpqWpMf7vecGwWq5n4vO/JXYLR81+tD+
jrhAfycb8/U1sWVi38yTffWjXU95pNhFn2beLnozTlrGMC8Xu+Y/xZ/3Bfm8
qeMnbyC8LcjGmKHGldM2zDMe1NznUxQL1ZnVRdIxYrKxhupMhaLpSN8+uL9X
1vQVoTOj9KTf92WgiHzKkqakx/eFzkRMWexZ+V/Rmcf0HHOfaMtPRGe+I36u
vdcaI36vsEkiPi3iC/2H+c2YOrO1v8lWcp3WNXZx5p/bWJhYSJczV2lcGe2C
tz/ZfUXLToiiESi7v1QEoxydqVpToWgKimjfXWmdsvRw7/dhx4edXySaqDN7
87dBsNruXLJ7l0BLPsecu+eYq8Rf9nPRmVMI8Xm6j4Hd8zKxP36P7L6ai8vn
i2LrxO49TUbIdd3EtG00vOXIxkOixpXRLpi1uas3+xkVxaHs/lIRH+40prma
6kyFQpEJrrVOEfopi86sgsaMSlNddGbvOVXJ25wwQLuKzvzQaM6hvx8rtkxP
/v+xzzHrika9QvQhvltCfF6/rzoxb3hfJ7tfaNkJyRned5njm/+cimLQ4Ha9
cShOZ6rWVCgU4chT6+SpoXrPjXPdqumgOunMNHlbdv7mgAGagXm9+M+O9fl9
I9GXsGdiL82NfY45QdZjLtxhj/wq2RhC+6rOzAOmPK7K3Jk59J00Et4lzOnK
ToWiKWhwu944qM5UKBRVQdFax9X106S3ajqoDjozbpr6Rme21kUOC/h9ZuYz
ojF/zZzK55g1zbrOwfiyI2VdJ84bpzrTNUw80l2ZizS2XA6BN4J5WXOf1ewN
6uI64Ggy+/00Na9cocHtet8iXn+tOlOhUKRHmD4oQ2fGvU/a86vaV1ZBY/am
Iyhdcc6tWv4WiAFamuz+mrMFrpfsXlu5N9l9Ly/U9ZWu4a1Fxn7ZbzrC7CN5
fnOf2cQ4GuHgOtMxf8z8YnPzyhW0bW8e0vXtqjUVCkV6RNmxXN4ni+YM+r2O
OtOF7s4jLX6f455bpfytKKymXJLsviRPMOdXjekK3pLMbZnj+rM8essyT2ru
c3tHOZr3nJ35d+aBzc0rV9C2vXlQnalQKMpAUXonrdaM81uce1YFcZ69qDRn
ed+qM2PDasy5mQ9JnNld1JaZFd5UzHWYWzKX6e9yaGy4h1bz+b25madnS5t3
oiOdOS/zSebB1cyrKkHb9ubBnc5UralQKOKhbJtaEs2VVWdWpV1Mq7eLSEtR
5/YZBmhV5u/FX/Zk1ZhZ4C3A3IG5FXNWLXuAtzdzu2rmhbcY85aMOvM0Rzpz
PPNp5pHVzKsqQdv25kF1pkKhKAJJdE7e/UzWdDRZZxadlrTnVS1/KwIbP2hr
5sPMN5hvMm9irshchrms+NFOX3ZS6wFjs4S+XI85UstcJ4xuWrua+eEtzrw1
o848y5HOXJQ5hXl8NfOqStB2vXlwqzNVayoUCn9USWcmTVPQeXGvWwVUIb/9
0pHl3Crlb0Vg9zGZwvxM9j3B/idvM98Svi32TeyrOVrtm0Ew+hL2OuxTMlzL
mh+8U5lLVzNfvCWYP82oMx3FOPKWYj5HjV7L6gpaz+qFOO8rnc4036jOVCgU
sVElfZkmbVmupxiEa52p6ILVmU+KvoTW/Fj4SQc/Yj7V3ltTITB6cjXmnswN
y05N9eFdQCbGTRVh9O/PM+rMix3pzOWY/xZd7uB6TYa268XBRT+aTj/GPU5t
mgqFIj6qrDN7kTVtVXueqkF1Zm6wazAnMn/A/AnzLtk380HxpX1E1myeZvbd
VJ3JMOstETf2a8zVqe/2J0kLs3fm1GWnwh/eSsw7079HbxjzSkc6c0XmC8wz
tVxFQdv14lB9nWm+VZ2pUCgaiSxaWLVQPlCdqXAFEzcWPrH7kvWPXVTLVBIY
LX55dfPLW4N5VwadOQ3ZPS9dpAXl7CXmd6ubX1WB1sHiUG+dqbpToVDUG2lt
r6qF8oPmrSILTJlZiLkX2b0MN2ROr2UpDUy+XVLdfDPvNos9cwbmTfHON+Vn
DuZo/7JkfLFfZp5X3fyqArRdLxaqMxUKhaIaSKI3VQvlgzR2ZYWiBWPf+gbZ
2LEza9nJCqOrvl/dfDTv+Wchv48h6886JuD32Zh3kIkxHHgNcE7mVczHmA+S
b/xd44v9SrXzqwrQdr1YVElnhvftqjUVCkV/Ia6tU/tMd9C8VSSF2YcE4/6v
Mzcl3ZfEIbyFmd+pbl56hzBvCPgNfqwPMZ9h3sOcx+eY+Zl3k/GvDrzHLMz7
yMaSncy8VjRn73Fric68sLr5VQVou14s6qMzzRGqMxUKRd9B9WVx0DzuwgCN
YG7KXI85LDSej/19psLSVjoQm8b7IvMw5kTVl3nAW5Z5cnXz1DuNjF/vkO/H
Mh9mPsk8QLThX8jsPdJ13GLM35BdpzmTfB7Z/bxGU/6X2vF9jL3cJ8atmev4
D/MH1c2vKkDb9WKhOlOhUCjqAbVp5g/N1y4M0JLM52V/kvkidCa4DHNsUckr
HqY8LMDcnXkoGT9ZRX7wJjCPr24dNDGKzvD5HnZOxH49UD7vz/yQuXPPcdiL
5H6Zp3iUrM3yUmr70XorMF9k/ousXZNE2/rs2WmuAZ15UXXzqwrQdr1Y1Etn
mqNUayoUir6G6k1FDvCzRQ7QZsy3mW8wV47cn8RqzQ2YIevN6gZvhOgBxIw9
krkTGR9IrWv5w1uXeVQ189m8f6ytPMLnN/jC/ok5rXw+WXTm+j3HYT3v78na
Pp8i618LXbmp/H4S800yvrnt9v1G8o3BqzozHrSfLBZF6cze4/yOjz9WUp2p
UCgUqjUVDgD74wCtHvAbdOY7zLeYa8TaB3OAphetWWOYvS43YX6TeSJzV+Y4
rV9Fw9uIrJ9o2Qnxgdlz5XfM7Xu+h//rP5gdNcC7mvk+mTWbXcduzJxCNk7s
cWR9X7E3CWLGTsf8FfMtKYck5RL6dT/VmWmhdbhYJMnvOPowzrlxtWbI1dSm
qVAo+h5x7JranypCMEAzMtcP+X0L0Zmwaa4TWzsO0LLMBd0ksijA9mTi+Jwg
43rozFnKTlV/w9uceXA12zCzJ8nDVt91fb+yaMd9Or5DjFjYJVfoOXY75ttk
bZmzM+dlPk92/SX2xnmN+bF8RjykW5n3UtuHtuta66jOjAPtF4tFGl/WOHZI
L8bvUceFpFp1pkKhUFAyrantoqIDAzSKuRszONbloD3znUQ2Sus/uxVzuJO0
5gpvPrL7XGId4GZk9mxUVAPel+XdlJ0QH5h1un9kLtnz/RbMZ63uM5/nJhtz
FnbKpXuOhV/sR8zr5DP2ccEazd/IZ6zDfFf0JXxvD2cuGDAWb8Wbvbia+VUV
aH9YLLLqzDhjmrhjn2TjIdWZCoVC0QnVm4oEGKCNI+PDDtAmHTpz00S+sAM0
G3OtbInME94iMm4/gkycT0X1YPan3KeabZbZF/MPNMTmbXysoSuXkc9IP+yV
T9oy13Xs3aIzt5PPy4lWvEM+o3y+ITpzWMC4eTr5G/uowP/2cvfP2iRoP1gs
0mjMJDozyZhHdaZCoVC4g2pNRQAGaJZYujGbzgQ3Z06dIaU5wBtP1i8W+12O
Kzs1ijAgPqv3tWq2V94XyMaK7Yl5ZXxhnya7Jwv2KLmLeRvzz8w5e46FHv2A
jM+s+XwKWV/ZU+TzXMwnyO5rcizZmFSd58/R8feiZH1ur61mflUF2gcWi6C8
jjs+KU9nmjNUZyoUCkUA1L6pCMAAfdnov2id2ek3+8XEsX0GaF7mhGrEBOqy
X86rZb8O8HZj7lnN92T05F0+30Nf/pO5C1lb5l/lWGjSaTuOGyH68R0pi0uT
3b/k33KN1nFfFD0KWyX8aLchu9/J+mT23Wxfb3rm4+S754liENrvFYsq6Myg
a8VIvepMhUKhCEHa9ljRWGA95gBtGTN2LI57V3Tm5qn0ol2nWRK8sTJOP4bs
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
sM78f1AthdM=
    "], {{0, 220.4724409448819}, {691.4135733033371, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{691.4135733033371, 220.4724409448819},
  PlotRange->{{0, 691.4135733033371}, {
    0, 220.4724409448819}}]], \
"Input",ExpressionUUID->"b0f0cef8-0dd0-4e5f-874a-516ea3ca5b96"]], "Text",
 CellChangeTimes->{
  3.87963576361827*^9, {3.879635996539489*^9, 
   3.8796359974304943`*^9}},ExpressionUUID->"44733f2c-e621-4dc0-9144-\
451360c1d045"],

Cell[TextData[{
 "Suppose the training label is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "1466aa80-2f56-425b-869e-fdfff1ea8dc6"],
 ".  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[GreaterGreater]", "1"}], TraditionalForm]],ExpressionUUID->
  "9a9cb2ef-1750-4540-9772-514f7a7f272e"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "mp"], "=", 
    RowBox[{"+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "bf5a749c-58ab-4b93-9d67-3925403e62a1"],
 ", the classification is correct, and nothing happens.  If instead ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[LessLess]", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "3619923a-6dd0-433a-b679-72b574c5a688"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "mp"], "=", 
    RowBox[{
     RowBox[{"-", "1"}], "!=", "y"}]}], TraditionalForm]],ExpressionUUID->
  "02294d43-3cde-4803-b457-74b99ea2c5b7"],
 ", the classification is wrong, and the loss is large.  Backpropagation \
increases the weights associated with bright pixels in the input \[LongDash] \
i.e., in future, when the net sees these pixels, it remembers that the class \
is supposed to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{"+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "2ce51286-00f4-43d0-b837-bdb53affcc95"],
 "."
}], "Text",
 CellChangeTimes->{{3.879636734369405*^9, 
  3.879636901413211*^9}},ExpressionUUID->"0e2f21ec-8546-4f40-ab15-\
4a1dadd80909"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Automatic Differentiation"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.87944309989867*^9, 
   3.879443130063489*^9}},ExpressionUUID->"f84ba324-73dd-42fb-867f-\
5243a953f553"],

Cell["\<\
To train a net efficiently, we need to be able to calculate the derivatives \
of the loss with respect to all parameters of the net.  This can be \
accomplished using automatic differentiation and backpropagation.  We \
illustrate this with several examples.\
\>", "Text",
 CellChangeTimes->{{3.879452009355919*^9, 3.879452082064769*^9}, {
  3.87945292218417*^9, 3.8794529227834063`*^9}, {3.881413852372899*^9, 
  3.88141385641227*^9}},ExpressionUUID->"f3b33f12-708e-495c-a998-\
55259796dcd8"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Two scalar layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879443335502281*^9, 3.879443341745674*^9}, {
   3.8814138229125643`*^9, 
   3.881413848025181*^9}},ExpressionUUID->"8b892009-d1ec-4042-a21e-\
635433fcf65c"],

Cell[TextData[{
 "Consider a tanh layer followed by a ramp layer:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", 
    OverscriptBox["\[LongRightArrow]", 
     RowBox[{"  ", "tanh", "  "}]], "u", 
    OverscriptBox["\[LongRightArrow]", 
     RowBox[{"  ", "ramp", "  "}]], "v"}], TraditionalForm]],ExpressionUUID->
  "57cded4f-2089-4bf9-a410-e883a9d0746b"],
 ".\nNow\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{"tanh", " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "95f097f8-768d-46c8-8a89-56c38dca525b"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[InvisibleSpace]", "u"}], 
     RowBox[{"d", "\[InvisibleSpace]", "x"}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], "x"}], "=", 
     RowBox[{"1", "-", 
      SuperscriptBox["u", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "347a4df1-abad-44dd-acdc-5372eaf9bd59"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{"ramp", " ", "u"}]}], TraditionalForm]],ExpressionUUID->
  "e7c8c848-3b63-4dc7-b469-ba661046cc69"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[InvisibleSpace]", "v"}], 
     RowBox[{"d", "\[InvisibleSpace]", "u"}]], "=", 
    RowBox[{
     RowBox[{"\[CapitalTheta]", "(", "u", ")"}], "=", 
     RowBox[{"\[CapitalTheta]", "(", "v", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"74991a3b-6918-4679-a1aa-93c73f7b82de"],
 ".\nFor a given value of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", a",
 "fter calculating ",
 StyleBox["u ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["v",
  FontSlant->"Italic"],
 " in feedforward order, we can use the chain rule to obtain\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[InvisibleSpace]", "v"}], 
     RowBox[{"d", "\[InvisibleSpace]", "x"}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[InvisibleSpace]", "u"}], 
      RowBox[{"d", "\[InvisibleSpace]", "x"}]], 
     FractionBox[
      RowBox[{"d", "\[InvisibleSpace]", "v"}], 
      RowBox[{"d", "\[InvisibleSpace]", "u"}]]}]}], TraditionalForm]],
  ExpressionUUID->"13382b9b-b962-4f36-85e0-dfa73a79b009"],
 "."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8794431381442757`*^9, 3.879443144841188*^9}, {
  3.879443205655911*^9, 3.879443344977434*^9}, {3.879443480975367*^9, 
  3.879443673442457*^9}, {3.8794437565960693`*^9, 3.879443759001025*^9}, {
  3.879452143014654*^9, 3.8794522597421618`*^9}, {3.8794522993896313`*^9, 
  3.8794524688458*^9}, {3.879452499671472*^9, 
  3.87945250306911*^9}},ExpressionUUID->"811fba6f-5938-4277-aab2-\
2437dc4907bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Three scalar layers"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879443335502281*^9, 3.87944334654316*^9}, {
   3.881413841804961*^9, 
   3.8814138510713367`*^9}},ExpressionUUID->"f70e7818-3d05-4b4a-a811-\
8c53c10e804b"],

Cell[TextData[{
 "Consider a multi-input single-output linear layer, followed by a tanh \
layer, followed by a BCELoss layer in which the second input is +1.  That is,\
\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "j"], 
    OverscriptBox["\[LongRightArrow]", 
     RowBox[{"  ", 
      RowBox[{
       UnderscriptBox[
        StyleBox["\[Sum]",
         FontSize->24], "j"], " ", 
       RowBox[{
        SubscriptBox["w", "j"], " ", "\[Placeholder]", " "}]}]}]], "u", 
    OverscriptBox["\[LongRightArrow]", 
     RowBox[{"  ", "tanh", "  "}]], "Y", 
    OverscriptBox["\[LongRightArrow]", 
     RowBox[{"  ", 
      RowBox[{"BCELoss", "(", 
       RowBox[{"\[Placeholder]", ",", 
        RowBox[{"+", "1"}]}], ")"}], "  "}]], "F"}], TraditionalForm]],
  ExpressionUUID->"64f872d0-1228-40f0-805f-563c177e8f85"],
 ".\nNow\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], "j"], 
     RowBox[{
      SubscriptBox["w", "j"], 
      SubscriptBox["x", "j"]}]}]}], TraditionalForm]],ExpressionUUID->
  "6628e7ad-dfdf-47c2-aaee-6b61edd735e0"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "u"}], 
     RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
      SubscriptBox["w", "j"]}]], "=", 
    SubscriptBox["x", "j"]}], TraditionalForm]],ExpressionUUID->
  "7d697bc9-bed6-4717-8232-bd2d0bf98e9d"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    RowBox[{"tanh", "(", "u", ")"}]}], TraditionalForm]],ExpressionUUID->
  "f700343b-5a80-4bce-a6f0-6ed3b90fcbe6"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[InvisibleSpace]", "Y"}], 
     RowBox[{"d", "\[InvisibleSpace]", "u"}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], "u"}], "=", 
     RowBox[{"1", "-", 
      SuperscriptBox["Y", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "27fb50f4-96ee-4f75-82fe-c17fe1103275"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{"ln", 
     FractionBox["2", 
      RowBox[{"1", "+", "Y"}]]}]}], TraditionalForm]],ExpressionUUID->
  "932cb8d7-7cdb-4c44-ab7d-b18d4c97ce89"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"d", "\[InvisibleSpace]", "F"}], 
     RowBox[{"d", "\[InvisibleSpace]", "Y"}]], "=", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"1", "+", "Y"}]]}]}], TraditionalForm]],ExpressionUUID->
  "af579e05-225b-4667-a2e3-7bc42475e237"],
 ".\nThe chain rule gives\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "\[InvisibleSpace]", "F"}], 
     RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
      SubscriptBox["w", "j"]}]], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", "u"}], 
       RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
        SubscriptBox["w", "j"]}]], 
      FractionBox[
       RowBox[{"d", "\[InvisibleSpace]", "Y"}], 
       RowBox[{"d", "\[InvisibleSpace]", "u"}]], 
      FractionBox[
       RowBox[{"d", "\[InvisibleSpace]", "F"}], 
       RowBox[{"d", "\[InvisibleSpace]", "Y"}]]}], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "j"], "(", 
       RowBox[{"1", "-", 
        SuperscriptBox["Y", "2"]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"1", "+", "Y"}]]}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"b25ca191-b2d9-4394-abb6-94e3e703745a"],
 "."
}], "Text",
 CellChangeTimes->{{3.879443324323058*^9, 3.8794434701541853`*^9}, {
  3.8794436849186287`*^9, 3.879443848230877*^9}, {3.879452474817816*^9, 
  3.879452886733283*^9}},ExpressionUUID->"5ae72601-2a85-4631-ac9a-\
79ab603812c6"],

Cell[TextData[{
 "To gain more insight, note that during training, the weight evolves \
according to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[InvisibleSpace]", 
       SubscriptBox["w", "j"]}], 
      RowBox[{"d", "\[InvisibleSpace]", "t"}]], "\[Proportional]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[PartialD]", "\[InvisibleSpace]", "F"}], 
       RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
        SubscriptBox["w", "j"]}]]}]}], "=", 
    RowBox[{
     SubscriptBox["x", "j"], "(", 
     RowBox[{"1", "-", "Y"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "86e9fedc-ddda-456c-a15f-95d895f6a653"],
 ".  If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "j"], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "68d9657b-6f8b-4b38-a1e4-43ba10380620"],
 ", then ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "j"], TraditionalForm]],ExpressionUUID->
  "2452cd8a-9f40-4843-af73-38e9a3c5b358"],
 " will tend to increase.  If there is only one training example, such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "j"], "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"+", "1"}], ",", 
      RowBox[{"+", "1"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"+", "1"}], ",", 
      RowBox[{"-", "1"}]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "1dbb2469-50bf-44c0-bf11-b3e777ebfb5a"],
 ", then we expect that the weights will end up something like ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"+", "9"}], ",", 
     RowBox[{"+", "9"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"+", "9"}], ",", 
     RowBox[{"-", "9"}]}], ")"}], TraditionalForm]],ExpressionUUID->
  "d7c228e2-1bcc-41da-97cc-bd69e2eb14cb"],
 "."
}], "Text",
 CellChangeTimes->{{3.8794529424736633`*^9, 
  3.8794532280166283`*^9}},ExpressionUUID->"5ba4f09d-dce4-4fa1-8816-\
257da2cda68e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Three-layer scalar multilayer perceptron"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879443335502281*^9, 3.87944334654316*^9}, {
   3.879443855336084*^9, 3.87944385544781*^9}, {3.881413882493414*^9, 
   3.881413892040599*^9}},ExpressionUUID->"2cbae37c-4a7a-4c43-bb84-\
1bbe6a6c1eed"],

Cell[TextData[{
 "Consider the multilayer perceptron below.  For simplicity, assume all \
quantities are scalars.  In the feedforward phase, one computes\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "1"], "=", 
    RowBox[{
     SubscriptBox["x", "0"], 
     SubscriptBox["w", "01"]}]}], TraditionalForm]],ExpressionUUID->
  "7c4edcbc-d3ff-44ce-b061-be5d17e6738a"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "=", 
    RowBox[{"tanh", " ", 
     SubscriptBox["u", "1"]}]}], TraditionalForm]],ExpressionUUID->
  "809d6dfe-e623-4a83-886f-c34f05bd18ab"],
 "\tetc.\t\t\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Y", "-", "y"}], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"efcc4911-f734-4ff0-9e82-7a53405fb6a1"],
 ".\n\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "3"], "=", 
    RowBox[{
     SubscriptBox["x", "2"], 
     SubscriptBox["w", "23"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bb66215c-d6a1-4b9b-ae3d-713df5bfb73c"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox["u", "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox["x", "2"]}]], "=", 
    SubscriptBox["w", "23"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5637f39f-dfb2-4dcb-9fff-2eb5b925b11d"],
 ",\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox["u", "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox["w", "23"]}]], "=", 
    SubscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a7fc9ae6-b00b-46bb-8228-af1ea1d1b985"]
}], "Text",
 CellChangeTimes->{{3.879443324323058*^9, 3.8794434701541853`*^9}, {
  3.8794436849186287`*^9, 3.879443875265108*^9}, {3.879452122114943*^9, 
  3.879452124484887*^9}, {3.879452908333482*^9, 3.879452911093852*^9}, {
  3.8794532581031113`*^9, 3.8794532680876102`*^9}, {3.881410158500976*^9, 
  3.881410193155109*^9}, {3.881410269242408*^9, 3.881410311311452*^9}, {
  3.88141337520966*^9, 3.881413384448571*^9}, {3.881752024244028*^9, 
  3.88175206693384*^9}},ExpressionUUID->"9257cea5-cc2e-489d-b51f-\
1c8abc8cf4ea"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
dTaHd4b/Ga79CWpk1xe/prD25c3U3Jbk50u0rP0KtsV38Db1LH8vs5DFHM5k
TYckvu9mHhf7HG8xd3QUNSnEhf0w5aevzO8a2tbifA15mE9azEGFsW5ZWC/h
JZ4H1zFd6tqm4bV8xW1mT53jiSKa2pO8npd5XLx2FbUzHB+5n1Pz2LNa1OiS
zzmO/31WZ/zOQgghRL1ISxOtRG1LCCGE6F0yi1iMpYKmltTOR/361/n3l5af
Ezgupa98yW1eowa0vlW1JkBTPw9iy0ZTZzq3hKa2l9tdbgvy72P4ebDPzgP3
CboTPuvDFmuvJfmT73EffHdfUHPD9ifxvQ/5XSFmbeLccTMzU3ODTrcZ91mY
2yea2kvUvRai/obv/qnUMWC/4XlxnB0LxgQP8jhv8+8pqa/heh7gazPw/a/5
Oy5acAzEvD3N97/hv6fJJxRCCNHdSEsTrUDtSwghhOh9MmtZbs3LJP9vPP+e
wP8eTy1mLLf9iLoVdJvzqO2sQ11ozqjFtPQzDE35LLNYzFWE1vW3IvrYJNTI
Vky9dhw/G/bZpsg+21tuzc6PqUPtRs3rWO6H7wdaJHJp/0jNbQyP++98fypc
77P8Ln/P93akPpZ859DkZnPbMnX8K1LHmJR6F95DTFo6h9RSmtp7vKaFee04
ziXcZi1+LvzuD5cYY2zAbTI8njQ1IYQQXY70NNFs1LaEEEKI/iDEZY2lljM2
ZV9RQ0I8FeqOoZ7+YW4/spgPWajhWOv8hnAu1P8/wOL6Cs/w38PdVrcYc4Xr
P7KIPra82y4Fr6U1ta2K7LOgxXU38R19ktPdgk1mMabva35X07udQD1tPHWz
jQs0Ndgovncp/77AcvXLxvEzLOF2suX0zCNS5/0xrwU63L5Fjv8srxexbzO6
rWFR58NxTuQ2e/I6cfwzBv6G2ZzUp6ipwW6RjyiEEEIIUYh0WiGEEKL/CLW/
ktzORxiHhNipzanpTNEaHyF7fOQfYn3KG9zusFivbXjBtpPz/c9SetNX1Jfe
5H9zjcwB+hhyIAvyU4P2lsTgFYtTg670PDWqlwZ+HyGXchx1tzmpqSXxfdC0
5iqiVV3G63yQx3+Gv0GieyE2bDW3e/g6Ptu6qXMm6yogZm7WguPPxu8hqZGH
dQh24ufDPnvwGEdZLpbu98V/27Ad1mD4hpraa/IVhRBCCCESlEsshBBC9Cfh
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
N2E9j+xrC3P7Y1Ov3dAuTa3SPn3yjEJtgY/cftvuCxFCCFE18Ofgp71ocbxQ
DOS4fG1RU/tRi65L9B6YLz3Y7U63Zy2OTe91O9BKz8dhzHq325sWxx9TN/8y
O4Wwnv0bnGvGvPG2bjNKXxvAdG5PWBx3blbF9ogfgqY2sonX1PH0+ZhlMOzi
9qnFeLV/FryHuQKsl4c4yFOtujkD0X8g9gzPQOQFP+z2utt7FucuodViTQvM
Ib3E7Z7mdv4csEMt5iGLviQ8/+9g3ufhA2vchP+e2+K6HUML9v2B2wVu9+be
C+vDvR79i+x2TY9Tq2efHnhGIW4B9+88FbZDjAN8lMubfkVCNJchVtkPwvsr
W6yXsb9Fn16IbmQhi3rFg2W2+b3F/t2f4f1S+yOzsdsBFtcOHSoNY9Cs7vaQ
xXHCY27XWMwnxlgB+cSIfxxWsM93LNZwxvtog32Wpxf0s5Msrsv1JuedX7RY
P3h90/orCVgH+lPaTypsO6vFelhwyHdu8nV1ND06ZmkFyDmHbvalRX02qcsH
v/B0i3raSFMNNVGcDS3OY6Ifgo4Gzexmt79Y1GvXdMM6XDNZzAHDc0/arCDh
mT8Xc3YmK6GpWXG/IMS97+t2f0pTO5F+Rar2S1hz8bYiB6iZwTxbevD5dJXF
+OW9y2wDPxi1qzHmOqwVFyW6EeRuh/VR230hxYDvg2cZ1mjCGO8pi/HXxdY4
xFo9l1mcS/qf24duJ7bmMoVoODtZjDE+v8w2iGFD//5US66oI8j82OKasu77
ZtzfzRxqcc3aYR3ah3UymJtDHgvWkUKcY1o7Q2wk5t7hZ2xdsA/yXjDmQE5C
H44psr4x1mFZzu2Pbk9YXPML5t9p5lduU/e5tvYvi/Wt0IZmrbAt8obhjEMP
WajJ19XR9HAsQCuAH4gYIox9fs/X9rHoFyLvs9L6BT1C8OtR4/wEt+3clszX
+vu2TyoF4rExtkDMGeaKsPbTZG29ItFjlNXUsH7buvRrsdbBbG7/cbusYLs/
If+znjqtrbYuYmaLczCY+ytXE+BbFvX28W5rtOC6epSs72y9+RwKevrQDvx8
mDN60qJvhDicZL77c4v1C9K62kYW/Shsh3sDc5IvW3xGiqYTNNk/u+3lNkMH
tqVu5Aq3j912L/E+cgww/kT/flqrLqr9ZP0SHzuFNWevcXvIbSS1jR8Xahld
+pxvBUfQJi/xPmqxItflav6N2jLok9EuUQe85+PTyvuJebVSJmXbu4L5Gohd
e5J94qR92B+ibUDDgKb2cIVtocvimY4vGHmihXGRfUcPjltayXoW426xdiN8
wzf499rtvKjWkvmexfpM7i+HXLSPLOaq30Gdzb+jzKy90S+F/vdHbpe6bTSI
AyE+6E9uDcmtE/1BbTpTpky/nZnG7Xa38zlfDE3tOwXbbOJ2Wrv1sh57NiG3
FtoBYhi+U2Y7aBL4YKjZqVjnusn8lM+hM9x+Esdr1dMdbW1ALcX2Xk6saYy5
bbRz5L9d4PZLt+3cXrCoq13KbQ+yGNMPfQGx2ivw9Zuscr6JaAihzSDnyX2R
zINup1isBdCPY8lGgD4GMWi4BxYvsQ3aPfQ01I7ZsUXX1aFkFnDbze0itj/Y
OW5buM3YHX1wW6ikXSCfeLTF/GPUI8LanpjXQK21KZt6ZR1Cff5iiAmBv5DU
Ix7J16yP+kPkSCFWHJrayRW2Rewjnunoz65s8nV1HT00dmkVB1jU/hG/DS0N
cUe7tPWKWk6YK/8NY2bfd/vCze/FzFj+C63tXb5/CjW2LquVEvpTzOGe7vaS
xfj1wdb1RO5wpf5KDAR1qL5nXVhvp3P0puw6Bt7+Mv+wkA86YBv3wzI/b7de
1mPPJOR9wk8ZbeVjU/03CXlBH7fgmnqYzDJuV7u9bHGd3Gc4Xvs/q6JuSve0
v47R1ea1GGOG+LQbbWAeiI+Tw7gOtQKx9gbaN3RjaBDptdFXsb7MS6pM49th
ts1MQR3jOsZo+Bg8c4zbytXcK33OvJbLj0IeHsajGBcU0z0wn4qcPYxB0f5L
rQvaJ+T1WzNwHuQ0C2sohRg2/PdyzW9/2Zjm4dG3D/H7iKdbIs43ZlZ0W8Pt
h5yf+bnb5m5buW3vtpPFfJ3dabvxdWyDefjvuy1usWZHkz9LYDGL41GsRYDY
X/TJ6HdL6bx1EuKkp6M/ifiK1S3GfG3o9guLuUu7uu1tMTbxVynDa3umvi98
fzu77ei2Db9b9Embum1gsRbwyvwuUSsYa2v5eCAzs9uU8bfLUd9zO9sWoaOh
pjB0tWejj9w3/Z+3WfNxfNDKtqiw7XEW11rBc1zraRXQBT4k1vlF/syM7b4Q
gmcj2h70NMy3/r785i0FOYazu/kzwVayGFPnfXxYD+Z3Fu+Fv1lcRwG502da
jAmGnUM7y+IaDNB+TrAYa/wbN6wliLh2zD3jnlvf3QfvS/f9mX8lx5p9dIvZ
uNFmE7wf/+YrN+hr1Ni+8ft0wps+tPSxzsubmK2D3xP6FOZS8PsW1FRvN6F/
XdXtAYtxwf9m/z2YgyZrqmzXkEvsDzDGQtvDvYY4H8y/zdfWK6qRztKcKvl1
4f2+mM9sEfgu0Xbhe1SqU4fnSp/V2mkGWf8YsRCY9xnFPvwtjtdQz2eOUvdC
d+m6HaGrbWxxrR3Uyi6mGWO9OfhJ0NWgJyC/GWvyKL+5SprXFvPqDC1NPe0e
t6ct1glAnh7qbu7LcS80hIWoPUAn8Gcx6nFmvp3SITD2XcFtFbcRFuPfoGev
S11iI4t16zel9rBFyvA69JX1OJZezaKu8T0eewne1/PyHkbt8SlswJo8VX92
xOVNUud9M4vl9LO/W2zfZ5XYFvOBaPsYh0LjmKKeE1YmaB1T8LtZjN/bWhbj
z3fg73iYm49ZQt6lX3eIz0Hs+iVuV1FTuMliLLv79CGWEYYY95G0O/jazdwe
882Yt8Bc3Uk8Ps6zn0Xd5Bf8TaG9LM/fcnG2JWhY87A94W/oKpgTQb2rcy3O
kUC/md5tJov5L7NznwV5nKXZ7uCzr22x5izOCb1mf4trOvkYJfNXi778hfys
WOfcn8uZO93upt3Fv+/g57/RouZ8Fe3KlF3N967ndrdyX6wFhdi7xy1o1WP9
nrrUr6np4xysBQo/GXMb6GNRp3Kfxhw61L+DTnY2P+vt/LzX87tAHg/iDs9j
WziT3zX+PYuv4b0LuN1lFvMu8R1ey9/iJh7zNrazu/ld3s/v82GL/dLDNLx2
H7e7nce4kueBLoucKR+/hjUy0H+hj0E/tArb4CJsd9B1k5oKE1ns8z7mdXTY
2LRpoK435n7RTy1SZjv0eVgbA30ZNNv/a/6lVT3XNrTItkNt8PddseOWIdTX
+ZZl697mP19m3+5ZGzpZ25aoQY4v1g2GToQc8nbPY+K7RR0QzDfhGYq6CA3O
UU/GteGedx/kM38OjdzD7K5/mt3r/c0jPvZ62n2e5583e+5ls2d9zPa0jxee
eNvfe8PsQX9m3/es2T2+3T3eH93n/cJj3m89633Zi94fvub93Ht+rA/dPjnd
j++f4TP/78+93/vCn2Gf+fP1I+/z3vFn7Gv+7HnWXx91qtlF/qw8xPunjX1M
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
I+q0wM/CXPIxvC7ELsHfwpwp5kMxD7kavzv8HojxQ+wf4sySOCPEm8Gvh6+V
5DDVOP7oaL0DYzzkfOLCMM6bt61X02sMmcimW/0km2PXt0PcToydHB//3Wes
zfrLRyocINxvF/E+GG2x3tbGvKetg9tVJzHSYtvepch7iB+B3oF8z3e53eqp
93GvY61G1ARGPeBW5Ah2IKGNTcX+E/3tq3xe/ST3TJGmVgT402hfiPPAuuGo
M4156NEWY4/aQYfpZ4Vk2xpyxaGlQEvDGBDjQ8yTzduD/R50znKaGtZQQd+E
MdghJbZBXXussYf2hjry0EGub+A1psjTD+ELQgNI1sCBH/r9lK1QpWFuFTrY
j/iMQ8w54l8xX4o5pRNTfuXl9Cvvpg/4BP1FtJckhw+W5PQ9R5/yEfqKqK+A
HN+kDh+0uF153nV4LfAfoT/cQF8Qz9yJrX/WxEhAzXTE1CDOds42X0uHEu6H
Leinfcl2c1G8L9p2PRizzM7+EjF30OqgwflY82u/vhf8Wn9/EN+fK7bvhoKY
RsRkL9Tg4/YKS1v0C3BveT8V+nbE+CzfzovqTMKYfJ9m3U/FNLO5fHw2116f
DRi34e/Zt3/OJplz5WZcSreDnJ8vaTtV2A7tHevePNaC6+phgh+W5FxCr8J8
B+o5IV8O8d6Yg0FeKfL0nqU//Tl9o8MtV4doJh6Dc+75+kLnaModrXvgu8Pc
Ny4MutrV7b2c3maSOVa0Gde7yObc46Ns/zz7Di/Z0InLuTIhJvNqji3m7tB2
1MmgjSPOHjnNhTn70BZ8vGQ+9gqxRB/SluH7GD9cbHGMivsEY4q/NP+SO4nQ
3tBHY04CcxijLc6NYF5n0lLtUVpayMFDfCTm4uA3oy405uKQDAsf+p72XVpn
kWsrWZ0GcemIr0deE+LSkBOFubnvdPjzdDBU0jmh50Mjg6+6TYlt0LbQT6Gu
td+voaZaqVpGiJMotWZRF1B0vhcawmz0IdPrKePZiXxd5C9Ak0VsG+aukzpc
T9LXfIH625v0Ob+mfcj3/2u5NXeQu/AA+0LMLdzM5zR0FOTEIoYc87nH0pf9
NZ/liO/FetqILUK90WQufAn6v0l901noHye1I9K5ikMLLMlnRjx7krOIY6KO
RWF9q3rA+pMY/4y28mtj9Cmh/WFuCTmRH7NdrV5xt5YTagE9bva5P49uecRs
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
sV8Ia/IcbjE2bQ+3yfXtlkbtUXQa/dlfhk+E+d8d3e53e8htd7fJKn3aLvgu
oJtAT8M6sg2po5ZGz9muBnll0NTetbgOj2g64S5Y2u1Gswl+X77i3/+ut1pu
bUchWor66tK075mWmd1t69hXCFE9ldqlfLTeoJrfUL9ltxJ+RaxBgLi0s9xU
C0SILqT/tJGwnucGbj6uDbFpx1q25mOFPa3jvwesRYfxOtY0vsnqXLu4GqSr
dSXQWLHONWqqac3PppOZ0u13bi+ajXnL7KLnzRbxv23Sdl+Z6G/Ub3cKYW5v
XbefWYhlFaJ6qrlfdZ93P53ub3fCNXQv4RlwiNstbttYqLcrupnCe6CT7lXR
XDq5n24sQUtDfZLL3Z5w+5fbgtV+wg74HjZyu9rtXjfve+08t7+5He12jNs5
bi+7fW4xRm2VVl1Y77edngFrXF9mcc0K0VRCbfEH3N40e/NZs5+PsibVmxei
HjplnNa/z4nMEm7bWVhnXIjaqfXekX/W/bSir1abagXhm/qu2/lup7nN0+4r
EoOn8B7Q2Li/6ASfurkELe1HbldSSzvP7fv1aGlt/A6w1sCjbl+6jUvZWLcx
FtdxhH1msZZaW8buvdd2ehK0pbnbfRG9S2Ze9jGvmU14wezc282mvtAaXNtQ
iEbRzud/fz4nMtO6bWxhjk+I+qnl3mnVvd1/93NracXvWOyYlV7rz768XkJ9
XdQbusZtS45T231RYpAUuwd6U1cRpajVn+6e9pCZyGKsyNXU0s62vDXpK199
B31WxBehdvUzbh9YrDGPeDSs34g8T9THesztKIvrfraFbuk7OvnaRLcSajHu
6+b3aOZ1s/9dZ/ad/2fvPMAtKYo2XEteck5LlJwliYIioJIUERAQUEEwAJLx
JygIGABhAcmgIKBIRkGykiXnKCA5SM457NJ/fVN19s7OzjkTzsxJ93ufp57d
O6GnJ/Xp/qa66jxdMVptmm7XjpBO0c44f/CJYuZ8T22a4XLGpB6Kvjud6tsP
r/e5e9TZz6amVidhMbF5UseojeIVGxyKviO864NHO3pabz4TYVK1b6ldqna3
2klqyxWtaY+eJ+KtwMdoebU1xHI3ruLLJupivSagF68f2zZSD1EOAsTCeE6i
fCcn/lpkxAW64gdSY0xDQnqRPOOx4df+hlnE8nkuO1zOeDjQzf5EVZpamfq3
2m74vNODSx69lf3pokR+Hlupnae2sdoIXqnBoahuwndnMMl7f7P+7i5RTRDn
cXO1K8RyD0BLW6JMTfmMDyZsx0i1RPr9rhLlIAhPiHxwmMhcyEFwjpjuTciw
o2y/cjCJzu7zat9Rm3KQz3Q4UXZsVOTZz9q2zHtT1fvXbL/h8U4PPu1qaiRJ
mEvteLWjhL5pA0nZ9pzv0GCR9762amO7SzQvfSu1q9XuEvOnXbxsDflsDw55
f/95n0lxon4R8p3AN+0WkUs31oUnqx2mNn2XK0dI1ygy9hrstjfMoLa12jKD
fqbDjaLPdB3bd1PT6vbxSb0Ubb9535sR+aYhXtpZaptmbi28jv1Ku5paO8fj
s9I7lLknvXEfIx+RjcTmXGGO5xFi8cFL146/DYMFx3WkHsL6avdJlIcgHCey
tLZDgrmeW3a7ZoR0G2pq43KMo38y1SCe4XCn1XOcfKaL6hBl9YtOvVfdPj6p
n3Y0NQKiq4GYQyf52HTOrKvDa1kNVbS17R43b73aKZfPSv/TG+/8uDyel4jN
8dQxbViondrwt2EwKTq2I8Od6ElA+zKP2hpqP1DbViw+I/pEyEPwG7Wn1R4U
eX9L3WEXtXOFcz0JiRjeY7Dou942agsO4tkRI+8zXJU2lrVfJ9+tbh+f1E+R
fnOz53f4Ev0GHCKWh+DLed4IvjvVUEWbWeb659m3zDGK/EaQ/qF3+sPhi2Lx
HeEjcoraUu3Whs/kYNLqvnb/OSa9wbgnYDaxXHxnqD2g9rLa22rvqr3n//+f
2v3+75UiF66sOx6vdqzazF09DUJ6iDKaQLP9+4coVtqGal8Vm+8j/XYGJD95
+w95tIei46V23q0qyFtnPv39S9k2fPje++isEQ/k596P3ERsLpVkXY3he82q
p+hzW1Xbmdyvqraw7G8E6W06/ZudcnT40J6udq/a2WpfqKIWfCYHl6L9UTJc
GHfXp/J+D/IDPy+mnX3o9oH//Zbam77sU7UxameKLLK2FnC+2rZqE3f1dAjp
Mdrpt/Zn+xxWVNtSLH6a9EONSXvkfT7b1SWKvCOdem/yjB/5BvQ3ZfWH4Xn/
w7xq+/kYdSsZN98/+yoMz+tVH63aoLLPdKt9i5Rd5fmwve1vOv2bHTvqwmon
ivml/UPsG3DbR2cfYPAp066SQSe60/OpHaz2X7V3ZEhHg0/ai2q3ic0n31JM
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
6/9+ovah2JzRIzpZWUIIIYQQQggZMJDjexW1n7jNnlh/g9oHYvnjCCGE9A7I
L4e8nsv534eJ6Waf+r8NDe0jtffEdLS7xPzT8J0kmS+aEEIIIYQQQkh1nCrm
w7Z0l+tBCCFkfBD/+m8yFAP7LDEfNHwHwfzOh9XOV9tT7UtqM3WhjoQQQggh
hBAyXJlBLHfBRN2uCCGEkAmIx0ND7uYdxOaCLij0QyOEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghRILI5GrThG5XhBBCCCGEEEIIIYSQPiGIHKy2DzU1Qggh
hBBCCCGEEEKyCSJTqd2ptjs1NUIIIYQQQgghhBBCsgkiS6k9qrYZNTVCCCGE
EEIIIYT0O8FsIrVF1DZUW09tjl7WPbzOm6pt0sv1JEPofVpb7Sn/lxBCCCGE
EEIIIaRvcW1qZbUr1V5Ue1PtDdc+9nGtrefwel+mtmsv1o9MiN6nH6o9rfYl
3jNCCCGEEEIIIYT0M0FkC7Vn1N5We8nn5j2n9q7a62o7uX7VU2h9ZlW7W22N
XqsbSUfv0//5s7US7xkhhBBCCCGEEEL6EdfJVnc97VW1c9SWVBuhNqPa1Wrv
qz3kseV7Cq3POmoPqM3da3Uj6eh9+rVraivwnhFCCCGEEEIIIaQfCSIzq93r
8z33a8zxjNkasXmgq/SaBqL1OUDt9l6dm0omRO/T711T+5za19Tm63adCCGE
EEIIIYQQQvLimtkJPtfz2LiWFttmdrWXfQ7oj3pJt/K6/l3t0l6qV78Ru++L
qR2pdpTnqahsrq9rnjOpzav2V7X/qS2hNmVGnUaqLa+2ptrSapPxXhNCCCGE
EEIIIaSbBJFl1J5UuwHaRpqGon9Pr/aCa2o79pKeoXWZVO0uteN6qV79ht93
+Iw9ofah2zWt9CvfZxK1edTmhGaWss0CwXJHXKj2oNqzas+rvaf2idqNwfJf
YK7xHHF9Tf8/tc8Rfcz9JN/1f+9T2zLuT0kIIYQQQgghhBBSN65DzKf2RbVT
XVNbtZk+4boI4qwhd8EmvaRhaF0WVXtcbbey9Yr5Qy2udrDaEfCLyrnP3K4z
HqT2A7Vp+03n8frOECwm3cdqY9U+VXsLy5vsM4VrZY05w/A5O9u1sdXU1g2W
i/UFf27ec03sDdfV3vC/d1ebNaX82dSuV/tAbYzbJ7F/3/L7NKKfrjUhhBBC
CCGEEEL6l2Dz7+AfhLyeyEtwcgs9DbaB6yKvumbSM3jdnlZbq01NbRO/FtB+
3neNaMO06+LLJlbb2/XIN13jQW7U213nS24Pf7pZ/d/KNbeYxod6wd9rqoL7
HuP61UfBfNSC61dzp2w/s+tl77gG95H/i7+fC0Ox997x/0Pz/IdfrzX8Olzh
2y6QUj78Ja/1csd4fZ52je0xr+cnXvYWdVxPQgghhBBCCCGEkCTBci2+ovaa
2n/VFm6mSbhe8SfXmR4OPRTLyut2iOtai5Spl5exsus70Gpedm3sQz/f6VI0
NfhGHejXD9tepXa42j2urUH7mTymc63iGubTvu3iLbQ6XN9t1C52Heo7rpNl
nQPsC2rXuTaI+ZE/UdtcbbaMfZfw84Yu9pKfFzQ1+KuNSmyP2GZX+vMAzQvz
OM8LNq8T1+9TN2hqFwXTJSfQ94LNNX42Wb6vO9ivP/Q0+LL93o/bmGt6kC9H
fW8JzE1BCCGEEEIIIYSQDhBE1gnmcwY96KRWfj7B5jLCNwj+Wyf0kk+Q1+Uy
176mLFqvYPM291K72/Ug6Goruqb1jtsPw/j7wH7k1w/a06/CUFyv2fxa4bpu
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
Y4kWx1vbNRtoNzc16Vuf6OeCawHfrTfd1m51TXzdP70+f0mMOX/pZb7jdf6Z
60vv+XXaOaVv2YiNhn2+6MsQBw0+au/7+WMZfPXu9HLgX7ifX0f4oE2aUs8t
YsfdJZhv2bnBfNc+dnsgtv3OXh7uz4yx5bj313tZ77v9IeN+/8Kfv6MTyy8M
Q3M/r/Drgzm6U8WfRfazCWmf5DvVyvLuS0iv0+q5HeTnuug7XsfxsrZL24+Q
Kujks08IIWTwCRZbH/oMtKLPuCby3WB+W9BMkP8xl54mQ9vATwl6E/QizCtt
aHX7+bFuztBYYHsE0+CgzSCv46JeN/z/R4ntUf7rXjbijzXi4wf/95KM40Ev
+8C1mz83GTNC0/nIr8vTYUirmjLHuZzr5/GvRD+xUSau/WzB5jE2tDtcv+US
/Xuc/0NeT1ybeX35hb4PfMYW9rL39vuHa4J5q7v4/x9sUs+DvQxoizsGm6uL
+G9v+LnC7o5tv6WXB7+xOWLntKrXDeVAb4OmdnjGNTrCj/OLxPIDvU7Q885v
UQQhpE2ajS2aLc/aN+u3gpCqafYcZj2LzbYd5Ge61bWq+jyLHCer/SGkCjr1
7BNCCBke6O/HDGHIDwxa2K2ulUBDgXa0YcF+KeYdPulaCDSnhWL7wxcLWtFV
zcry7RAb7FXXY+ArN5svnyOYH9nCiX1+49u+GtOGPg1DuSrXaHE8+Lg94Pug
jKOT2wbTsv4TTP+61cvE9hPMzWxyPigTmto9sWsxUzCfO5R5g287Ophm+JHf
j3F6Xeza4hyhqUHbm9ivyfNen3/5dot62R/49YPP2k+C+bLd2qSef/XjQpf7
e7D8BP8IQ75ouDa3xLZfweuCa7G+L0N9rvRzhd/gfb7/ARn3GzlGoYlunVj3
BX9exni9xj1LhJBqCQlrtjzt/Uvbhu8p6TTNnsOcv9PU1KT688w6TpH2ZJCu
P+kenXr2CSGEDA/892O9MBSzCtbQoqDbwHcIuhjyZi6fs196vOsv0G++G99H
/93LdZ47XX9J23+RYHoSNKKn/O/GOvhAIe7YiNg+0Lvu8O0xT/GhMOSjhvOC
BjdRC00H5TfmpELXOTSlXvO6pvOhX4uPffv/y/P7q9vsEEynRIz/Kf1c4AvW
mB+5s28H7Qn6GLSt2xLXDraVb4/jX+TLoYO+64b1U6hd4/WDD9mXfd+N/H5e
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
sOg+adt0qv9a5jzrHBe3c7/qOH6zY+StQ5lnq91nNe+5DSq8RhOi5zJ78Jjd
weZ7flnt6GA5725Uu0/tWyn7QXO7VO0nweZKYXw9c9nnkxDSXYL5kmGuJuZ0
LhJ7P6GlbRQslwDWIYbavfFt+p0wpKnBTw35ReGvN1k3zi3YNw7kJkC+z690
+/r6PYbvHLS0j/13gRBCCOlZ2hnzZZXVqfqFFtuWLa+d69HpuuWtR9n7Uncf
tp3zrHOMXPT4VdalzDNfRXnNti9aprTYL2/5/U7V7++goee0RLBcc/BTuSpY
roKN1f6htkaTfbYJFs/7YrU/FXk+CSG9QzCfVPhlITdJI+8n8l8eHYZ81z7w
f6GlzzVI77Kex6F+fq+6XdOlesBODOajBp+webt9jb1Oe/r1ge64f7frRAgh
hGRRlS6QtX+74/qyVnWZZa5DnnKKHLPoeLzsfe3EmLSd615n/ep6Puo6dpny
8m5btI5ScL9BpN37NqjXyM8HPih3qV0eLN74RL58WrXzQ0qOgtj+nw02B3Td
QbouhAwn9N39tdrdwWLQQ895I5hPGuZ4fuD/R05QxFKbdADbwf39XN/1cz2q
S/WA3er3AHHLJq7rOmu50+esD+43dFX4qL0WUmLtEUIIIYNKszFgWW0ga7xe
RXnt1K/IdchTTt5jFS0j7/ZF1lVJO9c9Tx3Lll/0uajyWlV93DLXs91yk/tW
fR96laruW7+cbxH8XOCPgnlciJs2Mn5++u8mweIntdof+fJuDjY/rMhxB+Y6
EtLvBPNDQq5L6Gef+r/Q1RBfDFo7YiVONajvrp7PDsE0tU+CaWrf71I9YK+o
hWAx3Wq71rifOeuD3ASY7wu/uWsH8f4TQgghzWg1ti4zxiyrAZQpr916tCor
q/wix6nieuQd13eqL1t3Hasqv51yilLmPcpbXtGyq6Du699LVFXnXj7HsgSL
L35tsHlP4+Xu0/9PofZntRVaPA/wX/i32ujhfB0J6XeCxQ7bQO03weZ7Q2Na
UW3G4fCuBstjDB81xDF7U22xLtUDvsHQM6Gp3VrntQ8WP2+KFusbvxGPBdMa
4Tf3neHwPBBCCCFZlNUjssZCRcoseqxWekNV59tqvzzltnPsrHPp5Bi07nq2
cz2quJZlqPvZz1t/XT5lsH7wiJLngXHTl9L2z6pHt659u1RV514+x7IEGzf/
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
H2pbSut5Mr8S06Z/nnE8zIVe3stD4w4foDv9uHjvoGtDm3vZl8G3aBsxrQ11
5XzSPqDoeKBomSlA/0XelyfF/I1bsYnYM35OxnbQ3OB3eWPOKnacvOOwKsZf
adv3yziujuvRa/Tz+Xg94T+GXJ7wO9s3WK6CqcrUP9jvRdpyxGe73jWTufrh
2pShjue8H54nr9+kwfJPYK7vfWqPBNPF4AN5stpvg+Wy2FhtDbXPuQ4GfWLO
YHoY4u9N4dpFy7ygyetRxfXNumeD2H6R/PhzeZTa3cH03Ol53/ufmC/ZbGpb
jzZ+p/Yttcla+Znp8inUfq/2qtrHbp+44f9vq53b8FsjpAK+K6YVID/bGWpz
p2yDeWt3i425Vi9xjEvFNLXNStaRkE4Avxv4lCHWVMNPEzEAoSnDNwc6F3x+
oKk95+v+rfbZJuWN9nIaOQ+hfWEeNeKq/VJMu0Y8q5fE8hdgnijivn8Ss499
+Tt+TOTFXV+Y07nvyOrnZ40BsvSbFPA9BG32LjmriDhpeNaXarHNumK/FWfm
LLOjdHpMlXdc10vkHaf28jmI+czDd3dLtcPVLhCb03yT2pVqf1DbWGLxxnr8
fGq/J7r9zIm/MR8Uc/3gq/S82i979dq0Q13XtReep6xj+/ovBpuDCb8y+JBB
O1tObWRW+5V2rGa/P8lyitQzo/6ZOlrWtoP2TJMJ8fsMXQ0+vdCMb/L2jfe/
T3G9bHK1fdSeVHtL7V2319X+6Vpbqq6my5ZTe0jtHbWP1N73Ml51e03tabVF
qKmRClhQLI4OxvT7SWt/l1XE5g9dVOI414hpCxuU2JeQTjCdmP8XdDTkpYWv
GMZr0JMxLovHYG+M536v9pSY3rxgSpnQNJCb4wax8R58zPAeIPftR2KaGfKB
jo1ZQ0fDfngv7/ByMG9njmpOlXSDrH5+1hgga0yTYKTadWK+lnn9GDGfDJpa
K7/K7cXekUMTyxGXCfOjFxKbI4146ll5CyqnjjFVkTF4r4/pyugLeZ7VDp03
4vchp+yfxOYe4ztdvC2Nf4PAcrS1aHcXaFXnXqHMdW9VVpPlk8f+v63a+2qf
qL2o9tNgfkgDQxXPet6yu0HW8YP5OF6u9nO1uYs8X3mPk1Zezt+oTLLuUYvz
7on7QzpL7H6vF4b8Mb/NZ6A/GT169Ej3I3vTdbRn1K5Ru1XtDbX31C5z3S1t
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
W4+nEl93TK1tx5teEo5sWz/iNvzSTilzzClt4tSoJYM+D0+YhENDZ8a6E+tK
72s7/hqJbpQ1fuYaiZcmtXrwUkr6JHJhDnIj5nsWzTvoSEgLdZ44s89UZ+CZ
EM/q/4/kkXZ9iKnL8WXSsj0WYq3I/9SPlC7wuhD/CjFT5ChHAFoFPIGLeP1u
rP0Oq/O16DOvcpn7b0REhwCNGjU773fF7kMrOVtfKuLRzriI386MdV9dRET/
gJ5sbmd+f8yFyNnsCR/betBMPq3S+cs9V+0cXQru+cwFGfcz6MqbCyZgjkG9
2b9WOSd59ujq39X/Axbe/ObRiYxfYR+Cmgdj+RH9s5bxlgd4che3r2aDtTU4
M7g0ODXmveRaoFk7wJm2d3lna2VwxdSrLZLv0XZ406bN7y1ncxFveXgV+6ic
fmySMufe15sX4EDma7m3buZMT4aXCL43jC/x3N2yhvMwFoWnbUtfp++b7/Nd
b/Vg8TrDX4+6ry+KN8vWGEj0XxyzcRVODR+zl7xqzIrXHR5ijTo4NdYIXhD/
l2ybTNzf6WWOuSDEp970m60Ccw3mDokujfUmvmO4s0T3v6Azjgw9bEJY4Ouc
1GNn7n6rM94NjRr90s9zXiv3N9otEF8zToi9QzwtrdkH8k17TfUINg9RMe9e
55m22/ifTvImkzZwY33mx4YYv1OurYOAtoY1EDxMyrVJ+nR4NDgBar0VyYcr
h9mr7xIR0RbgkTLcFRsTk8N5ravu+5MAvyr0F0W0bxEREV2OarzZAOHU1nK2
zv73gvuSw1LNG4j9PnGm+x2nX1fXRVA7gENbQRoONEZPaQ4Jf0E+39qZY+BK
0IE8pH3QIi3lra7e3d78uUfyDh8gYLzLvHWVEPO4ke/NaG+o9U37Zc6LDu3c
Auft6jlsf9YTtN8i4l5Or/G4utcvOhDwIqwNMGdCizS3tuGXc6qzfu63NZwP
PfmgBl9jVeh7mMNbvYBX1Xekv6NLxVdtljkODeMjOm7qKpzaEiFe9sZP8xgf
PnRwU9TBqS3kTT+3nx9xGzq188scc704tf1b1Obgwpg7fK64JcQsZfa9wRnn
luTG7uD67nlo0cg3IMcMHXg9uQZdBXizEHOGWCLEQsoDza1b0O1Ic2nl3l8r
+8rw+lOEOEV82gadxPV1IPC7ZM0X3izRjDK+wDOR3/CdztZXyOseSeMbEdEj
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
eWKIo0qmI9u9ZBo16gLAM6Lhg8ebLsS4pYymLOJ/3MGyzn6rzK3GVPQMnzDA
uDS0+XisDNe9i1phc/fqe+4hjKKA22asyu9vDNcCzc9A+G2Ug97rz0NM3+Pv
mXY0yJm3MjkGjOWZG8CVMXZj7sjaajJ3/CbEt4rvCkay/zc6z6c6N+u10zX/
LXY3BtLvLsKQ6m9Z79rLm6cQc9hLQmwYYprUvmjUqO3519S28cSJ4c+N79E+
mltuWuE1fyNe7nTNjefx5mF0ew+0P3iHV1wFTjFgRWe5doB1NLSU6ETot34M
8b2z/oy/P+gvQd8Gn4Z+hL6Tz7hrx8lFOLVWvFYXghqMRb2H0B296Ex7lMXh
zvIDaX+sTx3kbG2X2llt03rre5lafQSa1y2y35U3Xp4+554a+DTibG/c/bT1
fve6HvI8d/fm6QbfSw4yOaM7ZfadXttZP1imzpesFUkfdEmBfa92Nu7iL+uZ
SX9/nzN+ldqC9DNXOat78IH2/1x/P3Lmu4Z2shWe7P1GyTRWO5QsVxAe7OsU
d5bmzBLe7BtxQeybeNA/LB4ILdZO4sbw8ZqiZF5hhTRiZa4PjmhW8Uj9fa8j
vWZ4PE6IQSGWKZnv29El05I9EOI58WRvigtL+DEevyoeDe/+B0uWQ4nf2D9D
nCzubbeScYfkUi5VsjzOX4lb+0JcHDzZbP16YxHVkNQS516BTzv5PPX6rXMv
GNN1QP5Pq8YL7YbeD2PjXbz5EKBNu9+bF8IovfieOxxZbozfA2tM4yj4bcFf
k2dKrhzrTIyj6OfmdeZLCs/NGhT5KHO4JtU/GAi/j3LwVrPsOG/5Dav22Hsm
T4T2g/YCXyHGY4zbGYvBmeXxZQkfxvNfal+8duHbWEOnJt5wZ+vu+M0zH3jQ
WZ7f0BA3O/OWZ/zHGI+1VmpBkudB7bMJm/h+ux4D5XcXMSK81RW4XHNY1sNm
y5nD0leRf/dAiClCzCgu7VHd7+/2tjawofix3+W8zsT6y1hhYW8eWTzGG+vt
ENv0QPvj3ouuZ6kK+ywf4kRn9+Shzvq+HxV8BPBnyboAGhLmx3fpGPzaps2e
MKIyBvA4A84WL8m8PGTGhvj9oXW8uZUXVQne9F9owcj5vCbpJzL7zKJ+5pYa
ODX4f7wgb+zPd6/rOchbnWQ819BS7qw+bP3MvmgsP/Gm3x2nzpesB4e66nVc
GfdT14cxFvWtk1wx2gVaRTgzeDXGYckaJ3/h9T/SsYzD0NQy7mKddJZGvolm
oFQqTV6yPMHPSiPmZqI1+0T8ET72eHWdKp5o9RDzhpg0q4uqlTMrcH1JTFPw
fBW1bLreXaQHw/vtefFmSd3Kt8SXsZ0czWtDnCbuayvxhfib4TU2ca3vX9uX
FWeHX9zHes17QhwZ4hchYn3ZxoN2wTy/3lyNBHw3+Ou0bf1uIN2/vflZbOVt
ffstcWp76f4VUT/gw/CNYvw8szOua1FnuWyL6S95omjylwvxC2drjCumYgU9
t0xqn5VDrO5szrOOszE6em804Gi58XrZRcH2pt0jBwrnnIXeH+ua5FZd5M2/
oxfeM2sj5G3e7UxLwZgs4c+yvBmcGfNFcjXh2/7jjP/CvwXfoCHO2jBrroND
TOJsDtpfj4Cu1XU0Gz3Q/iJqhPqdw3Xf/lVe/+tNw0Y/hZ/VSq7vGPyDntb/
CV8G1/aQuLd9vflzz61550htzFs+6TCNHwr7InU5uA/jAc49Hs8+5qjp/hFv
qwOdeVjRp3a7x1zb0eNjDe6J+ImSD4r2jLbFfRRfNDTa3Ivh1hhP5unb4FM6
otasvg/4qffUt8xQpt+YWZzav8t9fzPu/sPMmWNW86Zt27k/33mq3Yya+v8k
zX+WzuwLJ4hX5Jn9eMl6kVdbOA30xvD2tI8k555jWJNEHwvHn3D7rGtSFwPe
bIgz3SPtKcvnTOM6HKVSaYyS6dTuE8d0UYgDpK3CI3/cZnJmrUbJPPefFF+I
xuyuEJeVrMbCjtKRzZq87yyq9Z3V+tLUZzeONGxDxalxPWj/PiyZj9rD0rzt
Kx5vdh0zwmdf6bvp9u+qQ4Hve6258gl/AW8/2BmPMEnq+WztprLo8Xv3TxBn
tqXGzm9pHYa6PVP14vttEpjfow1Dn7mPs/vuv53pb4Y7WyPC54C6PIkW5xbt
w7oi9z48L9B4X+qsbuileny2s7EVft3HKFjnZqz1N/3PmAvPqQNCbOOMa2M9
c+LmveWB8fvIg94j/hvUZ79bv58xuvy9M6ZCj0abREsGV5bwZgl3luQHwJsx
h4QzQ/+IV8fkrgv9gCIiegHqe672ppUdgdPSc+QukQeKhm2L1HN4PKA1myjn
nPBqf/BW07OsNtSbjxuaEXKjNujyfrAW4KeWeJnT/23qbG0LL3l0H23Pseg1
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
o8XPXgSdFS0O7Dz/+3ho6Rrr5dzG3MtzY53Yu2ixZMzpZF/OV6Dnff2rQvtE
q8XGdbzlftmsVdYxb7T80jHR6rUNbubzxnKTQvu6J/dTzcFCJMfr+S8BrQmt
DS0+kBuZR/j9LotB++9j+DkNdL3Ho03sj/3Y+3peDc2m2LT+ogCeWu5p1U9r
R0KI/iBn33vmLLHOJa8V693nYF9Q9vrktd7yVZ5fIFje581pD7AeOdqPTeNj
XzRa7TTWHZq4ne3xa8g5oW9G1R4Q4r+kMEew5j7nvktC/f7tzHln7xbeVxiv
/2QFzF/kvPs36Ahoe2hDaFV/v+nDWN+uI3X0y45Lk8Uq7xnH1jShJij3rGrt
X39u4mo+XZVl54M2jtbzYA1oA+jFaPmen7iYM8q+CEMqXsseCexBwB4JWzca
V5UxzgHd6+/BXqQlzZ9C1Ma9pQndc6Lf9Ar0IfSx/3wTugdaPU8e1MC8UMVP
mxy63GPUmOc5AbSf1047AZpEflp/0cj7EclJ2zOTlyaEyOH3n9durAvEfp2s
c7lUGPd6inn5zM9/FnoreE3pKizvz5+R2UirkKP92BQ+7g2j1Rj6ebVr2CbX
951odYhe9evQXYq4X4RIk5TmWvalZ177wgmW3Rx6PVjvrXos7csd2N7Q0qVs
f3W1Hov7euxtcFy0GF7Gxh0Ofa/Sn3Pv7RnoqWg9SSvj7ijmhO4KXQbdA10c
PbYOP2eIlrv6hft3zFWdSvOnENVxb4k5kje5h/YV9CX0KfQW9Bh0JrQJNF/e
fSiMb1LoYuhBaGFoSuhP0BPQrtBg+Wn9R41jSSGvOSpgLQvWn5gVWgRaBdoE
2g06DDoZOjdYfQvGyvPa8IZg9SjOCha3v3poou6r/DMhRNrkdD74VrD4sreD
xaHRY+PcyVprjLlg/Blzmv4v1O5z9wNfbvesB1tODvdlQzDeodAe0WqnrdrO
NkTrb3cA9Hq0+IrHoKvcpxOib0nx/Iv9A3gxlaROJOtKDvQuqHe+SX+Oc+2x
7Q0tfYp03orx/Rr6e7R+B4vVuAbivYtn3S/7yPWZ+3CzRMv1pJ/GnqJ7FmXb
hWiXslitqaF53Scb0sg/8hgu5kh+7noZ+rP3ypytvH5/Hryoet9l5nhCF3g8
2mrQQtAt0P38u2y5DoxU5IkCemqM3+b5yvzBfLItof2gE6G/QHcGu6YbqOHK
OhOsN8HaE6xB8SX0D+jrKuLjX/kyXP5d6K6QsCedvDQhRJrkfF5gzWfGo7Fv
DPOXXgwWm8FenpyPF2jw+vWC9SdYKcMxViWH+7ImGOuU0BnR+tHN1aafxlgO
9sn7AHo7Wr7SxDn+HxOiI3R5ruXFF3vcr1BnGc6n9NRO6MiImiTvc0i03FP2
NGBtNdZrm63GcsOi9UN4LVoc76+gH0Sr20aPjbXgPnFPjf1I1WtZ9DxleZs/
c//oJeh198b+WrJ+l4Nq+Uh4fHroWegj6Ax6ch3ehMTU+z5j3MOgs6Hn3Q/c
CHoYuhaa25cZ7J7jAtBK0IYef8ec1zmgkVBH+nKJzlL5f5OjY8MU0JLQ1tDR
wa7beK3G6zbmC30Yxvpk9MFq+WQDXlm5X8bXsLYr62yzPsUHwfyzgdgK9ql7
LFj9WMauJerLJH9MCJEmBZpHmPfDOXtkSJ6TuFyw2kBTZDWoWhRgf/4XjHOB
aLlHJ7sfVnfsZf8vk0Srn/2/5fFz2mg1w3k9+Ca0bdbjF6II5OCcba1geZ27
1VmGfZNz66mRvB6v/L7BadF6GVwa6xxzfPwLQstFP5ZFq53GumyMVxsDfeU/
p83j9gqRJmVxaZdBb7uX9oDXRGP9sze8FtqetWLMPE7tIuhJaLwevHmh0RyG
se8GvQYdBB0BvQBdAe0FnQbd4dtIz3E09LT7bb+EZlLsWu9S+X/T5ePhVMHq
rZ4OPRzs/IJ+F/sc0Qcb8M0q/TE+T2+NsWis70O/jX3Ln4LuDZbX+SfoKGgv
aJtgtV5Zy4d1XeeBZg9WI2jSUFHHtBlycF4mhOgR+mAumSbYXNxx8r5ffXxr
eZzETh5j0Wh5xkusFy0/lPXRWHv7T9Hi3Kg7oU+j9cHbvEObIkSuycl525zB
eoQeU2eZxYOdF/++EwNqhZzsy3HAOCaPFuPLupHsVVCvr07V8UeL5/08Wq78
Zx6jdnCmAxciJ5RKpRHQDdA70K3QshW5muwp8PeS9RxYrk6s2tElq5vWsP9I
Nyj/3tfZhpOgD6DPoK9LVhvuvZL1WPjQ99GLvr9+Cy1YUm21vqRLx0LGKrCu
2egw1kP7wn8ylozxaPTJGD/G2LHboAuDnVewVs9mEPOX2WNu1mD3n7ryfc3b
uYQQorhoPsmOPO/XaL3xdoyWn7R2krG6n3aIx58xP+kNj6tgvR/W6r7WrwWZ
87ljJ7ZDiLyTIw+I9xeYg3FSjecZL7VpsHPke6DzoOuC1bS8yl/H50dmPtIG
5GR//heMYWa/x8B8z8NiC9cG0XqLvuGe2useo8Z5dsYEr6WGeNzb5tD20Lx5
2T9CNMK9IMZjsY8Aa/JPUln3zPUL95MurROrdgz0OPMnu7Apdan00+p4amt4
nN5nnvfKngR3law/AT205aGO516I/NGFef43wWLZGWPGcwV6Z6zLw7poBwTr
ncT+AjzfaDl+rJPk6XxCCFFMNIdkS173b7SczWOhq3ntlfA11C89/oy5Tfvw
ei9avzvGVXzk14OMUctdfXMhukWOztd4jstalEfXeH6ZYHFs/wmWp1Gen/Ge
P8daJcwLZW/KrvXgzINP6e9NH+tv0Oho/Tub6pPs65gaesDj0l73+fUf0Xqa
NXrtcGg76P5otSs/8jmY/REWy8H/nBAN8TporB12v9cBG89v8seGewzaGGjm
Gp7aUSWr6183VrTTJJmrPNZsR/cE6RvO5o+N11tBMWmiS8fAHaAbg53n0z9j
nFlTx7280e1zCSFE8dEcki153L/R+g9cEC0/aaqk44tWN+0xv3Zco+wYNKtf
x/3bYyvu4nVehpsgRGHIg/dTBuuP/B3ao8bz9MlY0+Rf/vMm6JRg96XXCNZH
q9xH62qcRDf3q7/v8tDj0POxiTz3iv+JpaGH3U/jPHpQtPxRzqXHVXntBD7n
zhatztq5fk+D9SvfcG+OMcSMF/5tDv7nhGhIyerrM6dz8wbxW9Sp0LvQ+jU8
tVFeX2yekvU0OMpj3671n4dBq3YyN7TRPOXbNbnXSqMfeDA0kXwzUY8cnVsU
Gu1HIUQ79NAcwnuRcwSLsVgX+lWwHs2sGfSHYPlLlwXLYboVujtYrMVDwWpq
Puq/s48Bc5zOhnYNVleorXOuPO1fH8vK0M0eYza0mbFh2bmj1U/7bcXjP4H+
Bf3H4yQWSnfkQhSTLvppg6Epg/WcpI82UzD/i/2TX4HWrPE63mvmfMle9otl
PsoU6Mb+9ffbxL20J2KTPaX99QszDi1anvyX7omxv8Ew99joqbEH6JX+OO+B
XAKdDa3q62FPhJOgB6H9ouWg0ud7z/25jfJy/BGiHl5b/7lasWdly1HbeW2x
A6rEsk0JXQ997nmkn0CflqwPKHscPFKyfpq/gVZg/FeW21U+P9XJVaWWgG6D
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
YRNn5KeNjFabh3ForCu0TLX3cd+NcWjMD10hWq/RSRrdy61YB2NDHtWxTRSN
Dv/Pshbl/tADwWoB8xpzGhd/vzRY7G+jWLYBOCfPlfooO4DPK23Xa8E6BkfL
8WSu5wPR8maFEBnhftrx0GveW2BfaB5/fDwfq2S9Pf8OTV9lXbP7c/tm6alV
LhsrnvPf1/UeBHe5J6i4NJEaObiWawbeR388WH/yVvvm8HqR9xEPSGtQ5chT
E0I0g+aMzpL1vvb1rxWtdhrr6qRe68fXx3i0O91Pew1aJ8v/JazzcZcQhaGL
cytz5Y8M1uflHtft0KGhudy/xVIfWYfwfc9c8pZrqkXLnT8OetXvH8yqOUiI
bCmVSj9yP+0aaJp6eZEe9/USa6bVWNe3PcbtJ5301Co8vxEeS8fYtJOhqeWn
ibQp4LUcY9TYa262Fl7LmHvmNLFe0F9THNP/0PWxEKIZNGd0liz3tftn27mf
tmaG/tbcHjP2WbS+BJtk8Dbl78fcz2c9RkSIwpCDuXXCYOerzKMf1t2hdB7s
+6lafN1/Xwtd6vcMLozeI0VzkBDZ4vXSXoa+Vc978ud2gt6Atq6xzJbuuS3a
iodV7xy5mtdX+Rh+Lug10x7mGKFB8tNEFuT4+MT7Wt+AloM2DFabYs1gcfPs
rbRAxfK8J9jo2M3c0Y+D9bJrN3+0Kro+FkI0g+aMzpKhzzUCOgq6knmWGbxF
+XvtDH0MvQitkvX/jl/bjnavUIjCoLm1u2DfT9Hi6+aNVieSftoJ0WpTqra/
EB2gVCqdDr0CzV3Pe/Jaaayx9gg0WY1lDoGe4vPteGo11t3IT/se9CB0PTR/
vXg7Idolh+cbMwTrA/o36LVgvUA/DFY3+51gntgnwby2AZgTenOwGhb1GBXM
T/saOirNQQ+g62MhRDNozugsWexrv9471zVtBzwuvseP/X0z/9/B+mdzT+00
/Z+KIqG5tbtE6y+WdFnG+U7qMb5PRasRuSc0dbR77EKIDlAqldbxOLWzoSE1
cj6pPaEx0LZ11sXeBLe26mU18tMq6qWV/72t14KjPzipvDSRNTk632Bc2lbQ
88F8s4+CxaM9HazfJ+PTToKe88crj6/3BeuPNLCuDaBdw7h9vFkX9p/QF9CP
s9gIXR8LIZpB80Vnqbe/W/kssPxiHpt2eMygF0EewPbMEa3f3na9tm2id9H5
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
E5c91u3hCZEq/w9JnWmT
    "], {{0, 417.69778777652795`}, {927.634045744282, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{549.634045744282, Automatic},
  ImageSizeRaw->{927.634045744282, 417.69778777652795`},
  PlotRange->{{0, 927.634045744282}, {
    0, 417.69778777652795`}}]], \
"Input",ExpressionUUID->"bb792c71-86cc-47dc-9053-e704d434d23b"]], "Text",
 CellChangeTimes->{
  3.881410139522547*^9, {3.881410790031179*^9, 3.881410790033579*^9}, {
   3.881413362690563*^9, 
   3.881413362692037*^9}},ExpressionUUID->"ad96084a-5f7c-4bf9-9c50-\
cf8dd197f556"],

Cell[TextData[{
 "In the backpropagation phase, one starts by assigning \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] to the gradient at the \
rightmost node, because ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", "F"}]], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"4c1b42b7-9f90-4cff-8c2b-a7dc13042156"],
 ".  Then calculate the gradient of ",
 StyleBox["F",
  FontSlant->"Italic"],
 " with respect to each previous node using the chain rule:",
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", "Y"}]], "=", 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", "Y"}]],
      FontColor->RGBColor[1, 0, 0]], "1"}]}], TraditionalForm]],
  ExpressionUUID->"7c18f19e-e3c0-4538-b1ba-b1fb54e8def5"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"(", 
       RowBox[{"Y", "-", "y"}], ")"}],
      FontColor->RGBColor[1, 0, 0]], "1"}]}], TraditionalForm]],
  ExpressionUUID->"98b3a171-9d14-45c1-9865-ee30aadc9088"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox["u", "3"]}]], "=", 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"\[PartialD]", "Y"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox["u", "3"]}]],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", "Y"}]]}]}], TraditionalForm]],ExpressionUUID->
  "0a95d47a-96ac-43de-be92-ce19cb454690"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     StyleBox[
      SuperscriptBox["sech", "2"],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      SubscriptBox["u", "3"],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", "Y"}]]}]}], TraditionalForm]],ExpressionUUID->
  "f20071f5-e9c3-4ad2-a140-b95f6a28810c"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox["x", "2"]}]], "=", 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"\[PartialD]", 
        SubscriptBox["u", "3"]}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox["x", "2"]}]],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["u", "3"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "09ad7ba6-ba65-4059-a56c-ae977faea6c4"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     StyleBox[
      SubscriptBox["w", "23"],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["u", "3"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "26d63528-6be7-44fa-95d9-e0ee0bc676b8"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox["w", "23"]}]], "=", 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{"\[PartialD]", 
        SubscriptBox["u", "3"]}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox["w", "23"]}]],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["u", "3"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "e7057410-beb8-437d-9158-f51482ffa8b5"],
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     StyleBox[
      SubscriptBox["x", "2"],
      FontColor->RGBColor[1, 0, 0]], 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["u", "3"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "dbfdec97-2a1b-4453-9d82-f271435f633b"],
 "\nand so on.  In this way, we can calculate the gradient of the loss \
function with respect to each of the learnable parameters,\n\t",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox["w", "01"]}]], TraditionalForm]],ExpressionUUID->
  "d37fc73b-f1e0-4931-8193-9cd25776db93"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox["w", "12"]}]], TraditionalForm]],ExpressionUUID->
  "cc38eccc-903b-4e9a-bc51-941403e5225e"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox["w", "23"]}]], TraditionalForm]],ExpressionUUID->
  "127e8b86-3b6d-49f6-90b0-46a73dc7fd40"],
 "."
}], "Text",
 CellChangeTimes->{{3.881410314769095*^9, 3.881410482858219*^9}, {
  3.88141080177096*^9, 3.8814108042638474`*^9}, {3.881413393487646*^9, 
  3.881413395004478*^9}, {3.881413458347458*^9, 
  3.8814136138785677`*^9}},ExpressionUUID->"0d8e13e6-d4df-4098-9ab7-\
4269eab8fef0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Vectors"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879443335502281*^9, 3.87944334654316*^9}, {
   3.879443855336084*^9, 3.87944385544781*^9}, {3.881413400319121*^9, 
   3.881413400626779*^9}, {3.881413895192565*^9, 
   3.8814138968196087`*^9}},ExpressionUUID->"0b276dc4-fcc6-46a3-99d8-\
98be4304164b"],

Cell[TextData[{
 "Now generalize to the case where each layer has multiple input and output \
nodes.  Suppose that\n\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "0"], TraditionalForm]],ExpressionUUID->
  "f0d519e8-7d8a-4fe1-9bbf-b53c88dabd24"],
 " is a vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "0"], TraditionalForm]],ExpressionUUID->
  "996abccd-756a-4191-9b83-12855565892a"],
 "\t\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "1"], TraditionalForm]],ExpressionUUID->
  "62bca063-e0a1-43bd-bdfd-4f3d368437b2"],
 " is a vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "1"], TraditionalForm]],ExpressionUUID->
  "8d847e4d-3a92-4048-a37b-e99d4224b518"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     UnderscriptBox[
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "_"], "01"], TraditionalForm]],
  ExpressionUUID->"5daa5461-e163-4fcb-9cdd-47481cd8d388"],
 " is a matrix of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "0"], "\[Times]", 
    SubscriptBox["N", "1"]}], TraditionalForm]],ExpressionUUID->
  "65e8853e-5b1c-47b1-befb-0008ca0cc18a"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     UnderscriptBox[
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "_"], "12"], TraditionalForm]],
  ExpressionUUID->"ee8c4537-92b6-4d16-bc39-9adbe455eeac"],
 " is a matrix of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "1"], "\[Times]", 
    SubscriptBox["N", "2"]}], TraditionalForm]],ExpressionUUID->
  "95e3a2e7-c851-4519-aba0-dc34c8fe02c8"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     StyleBox["u",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "1"], TraditionalForm]],ExpressionUUID->
  "99a702c7-ae9e-4f1a-beac-619c389bb973"],
 " is a vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "1"], TraditionalForm]],ExpressionUUID->
  "06d8f0cc-7066-4c42-a06d-bb4fb3273724"],
 "\t\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    UnderscriptBox[
     StyleBox["u",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "2"], TraditionalForm]],ExpressionUUID->
  "bf49a05e-be49-46ee-a501-6427ed949431"],
 " is a vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "2fe197db-3b0b-42be-9c6d-b7c7cfeb30d4"],
 "\t\t\n\t\[Ellipsis]\n\t",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    StyleBox["Y",
     FontWeight->"Bold",
     FontSlant->"Plain"], "_"], TraditionalForm]],ExpressionUUID->
  "8fb316a4-431e-4012-813e-ce915fb00cf5"],
 " is a vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "3"], TraditionalForm]],ExpressionUUID->
  "ad779d9b-0a10-4e23-ade7-4006a1110bd1"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   UnderscriptBox[
    StyleBox["y",
     FontWeight->"Bold",
     FontSlant->"Plain"], "_"], TraditionalForm]],ExpressionUUID->
  "f44e2650-4b21-4faf-8db0-f01668cf6b4d"],
 " is a constant vector of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "3"], TraditionalForm]],ExpressionUUID->
  "f65d202d-8d0a-4dc1-be55-2f27308c16bb"],
 "\n\t",
 StyleBox["F",
  FontSlant->"Italic"],
 " is a scalar.\nHere is the figure again:"
}], "Text",
 CellChangeTimes->{{3.881413963629035*^9, 3.881414007061295*^9}, {
  3.881414134326269*^9, 
  3.881414142477757*^9}},ExpressionUUID->"b8b45f30-152f-431a-ae7b-\
03d568c21fae"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
dTaHd4b/Ga79CWpk1xe/prD25c3U3Jbk50u0rP0KtsV38Db1LH8vs5DFHM5k
TYckvu9mHhf7HG8xd3QUNSnEhf0w5aevzO8a2tbifA15mE9azEGFsW5ZWC/h
JZ4H1zFd6tqm4bV8xW1mT53jiSKa2pO8npd5XLx2FbUzHB+5n1Pz2LNa1OiS
zzmO/31WZ/zOQgghRL1ISxOtRG1LCCGE6F0yi1iMpYKmltTOR/361/n3l5af
Ezgupa98yW1eowa0vlW1JkBTPw9iy0ZTZzq3hKa2l9tdbgvy72P4ebDPzgP3
CboTPuvDFmuvJfmT73EffHdfUHPD9ifxvQ/5XSFmbeLccTMzU3ODTrcZ91mY
2yea2kvUvRai/obv/qnUMWC/4XlxnB0LxgQP8jhv8+8pqa/heh7gazPw/a/5
Oy5acAzEvD3N97/hv6fJJxRCCNHdSEsTrUDtSwghhOh9MmtZbs3LJP9vPP+e
wP8eTy1mLLf9iLoVdJvzqO2sQ11ozqjFtPQzDE35LLNYzFWE1vW3IvrYJNTI
Vky9dhw/G/bZpsg+21tuzc6PqUPtRs3rWO6H7wdaJHJp/0jNbQyP++98fypc
77P8Ln/P93akPpZ859DkZnPbMnX8K1LHmJR6F95DTFo6h9RSmtp7vKaFee04
ziXcZi1+LvzuD5cYY2zAbTI8njQ1IYQQXY70NNFs1LaEEEKI/iDEZY2lljM2
ZV9RQ0I8FeqOoZ7+YW4/spgPWajhWOv8hnAu1P8/wOL6Cs/w38PdVrcYc4Xr
P7KIPra82y4Fr6U1ta2K7LOgxXU38R19ktPdgk1mMabva35X07udQD1tPHWz
jQs0Ndgovncp/77AcvXLxvEzLOF2suX0zCNS5/0xrwU63L5Fjv8srxexbzO6
rWFR58NxTuQ2e/I6cfwzBv6G2ZzUp6ipwW6RjyiEEEIIUYh0WiGEEKL/CLW/
ktzORxiHhNipzanpTNEaHyF7fOQfYn3KG9zusFivbXjBtpPz/c9SetNX1Jfe
5H9zjcwB+hhyIAvyU4P2lsTgFYtTg670PDWqlwZ+HyGXchx1tzmpqSXxfdC0
5iqiVV3G63yQx3+Gv0GieyE2bDW3e/g6Ptu6qXMm6yogZm7WguPPxu8hqZGH
dQh24ufDPnvwGEdZLpbu98V/27Ad1mD4hpraa/IVhRBCCCESlEsshBBC9Cfh
mX8xtRfoKscO3gcIeYbQcLD25V8t5l8ebtlaayV1G6wVgDUQ3qN+lMRPvRe1
pbztj+Q246gpIdbrVmpa46j/YP8tq/s8mf0tV09tlyKaGuxOfk+vWlzXIf3e
g6lrQZzaKbwGaHAvWDY3Ne94f7Xc2gJJLbVk/YAx/Hw/tRgDh/Mi3/ZblovR
S7a7Od93C/+9oeVi9ZK4uuNTx03WS/htlZraASlNDfvPKV9RCCGEEEJ6mhBC
CNG/ZHMQx1Nb2aF+PyAcC+tZ3mixJj/W1DydWs5Z/PtqC3FiefshDg65iKiB
9qXlYs1etBifBa3pe6ntp6SeNJYa2rIpH2Ylbp+hnrVrlZraJpbT8Q4qoamd
QY0KcWSbp845nDobrucp6meXpjS1W22AfxX+/jU/LzTD/fjfiUaWxNkdaLn1
I9JrdY6wXN7nbkU0tfN5nW9YzN9FfbcLeY1JTim229pya1CcVdoPzBzCz5Lh
b1IkP1YIIYQQot+QniaEEEL0L+HZ/5zl6n6tWZ8vELSew6ktQQvb22KdMUtp
PTj2f9wWS+03t9vdKT0LGhni2lAX/zXqQpdEncrSx/mU+tClqc+RWKJnwR7I
37fk9X+HWhOu4YQSmtqq/GzQux61qO0Zdank+k+1XExboqmdXNzHCjXWvqA2
dhs/Dz5XsuYB7AweFzpWqo5Z+K7xe0E/XCj/2GGtzlcs5nxey+/weos5pNDO
oF3OxOMsZrn4uCdtQDxd9pi/ZxvJ8N+z5TcKIYQQQkhPE0IIIfqXsM5AUncL
es7itfsDwYc4xu0DajlrpXwLHH9pi7ma0NNujK+F/aD9PEjNCIaa+iMsxkC9
yuu530J9/bzzHWi5OK7t8n2YbDzZeGpa0KuwJsE0FnJSS34GvP8Gr+OMErrS
zBZzJT/luVF77ky3d6iHIe8zif/6L8+P69itxPGW5fWhblqSszrabVt+PlzL
Q5Zbi/Wo1Pd6Jd9/Ll8HC+/txONC/9uP1/sUrynJLU3i3ZCnO8pyet4GxX3C
EG84znLxfw/JdxRCCCGEkJ4mhBBC9C+ZWSzGKSW19GeuzScIPsSK1JVQ7+tx
6jfQmx6zWNf/Lb5/u9siqX0PtVzeIfS0ZSzGP71HTQjbF6nbFfJE0zX8C6/n
YsuvqXZK1Mwqfo67eD03FDmn8btBHbMk9mtMyvDZD0j5VW9YLqZrRAlNDZ/t
Xcut9cm4u6BrfcG/P+AxcL5VU9rZYzzvTfl+XNAwH6Y+hvg4rPX5MX+Dt3ie
hwuuY13+9jgearftFn+nzPxuK1iMw0t/p9DURud0OSGEEEIIIYQQQoh+I+T+
fUrdBvFqk9ShqZ1DfesB/jfioV6mYS1L1AdD7NQUBfuivtrX3BexbbtSixrt
dhz1KyuibyEP8Svut0YRTe1K6lFJnNhNVX6Og6ldPV5CU+P6CqH+22EW8z8R
C4Y4r19YjPlKtk1qun1NfarYOSfi9zOeOhV+B6zjsJzFPNRkLdav+V1Oxv2S
NUjxHfzN8uZHw/oK/6N+tih1sXd57E94zKuKXMuB3O4L7o+2gBi469y+bbk4
tURTw/GnlKYmhBBCCCGEEEKI/iSsKfAFdZ0Xi2tYZfeHvvMUj8E1Q0PNfuR1
Tsf/LrafcT/oRch7nJr6z47810pfS+Yn1IgQV3V2/rbZempfU//Bv7dW8Tlg
WFPzdepXU5e57sSgoZXQIMP1ZajtzVjmWGfyGvH938fj4bt7jdrVBH7Ov6b2
S75zxNSlarVllrKYe4tz/yP1WyQ14MZadn3PoteCeMN/ud3hdpnF9SqSmnh/
KdDU3in9HQkhhBBCCCGEEEL0Opn1qLdA13msDk1tWupQiBnbvfp9w3nupk6D
2LANajgntJwnqQ9hX6wHcLjF2DHEyb1N3SfR1K6t4ZrOpS61wOD0ohDzhfMj
5mtYGU1tQYvrE2D9gGVS+tif+dnw2zztNnv+bxPW9fyc3/1x3H4090Hu5/Sp
Y93O73kC9/lpHZ/nN5aL/ZvA73hyaWpCCCGEEEIIIYToTzJbWm5dydvr0NSg
3bzJmKmDatz3YMvVU3uA+lyZ86drooWcT8STfcFjfG65nMV7+Pc3PPYJVV4P
DGsMPGFxHdAaPsuAYx1Nbe7E0p8pq3khNm3i1N8wxIdtb7Hm3PwDjxHyOqEr
Ip/zU9rH/B4XLTjW4ZaL24PWN1cdn2c9ftfJeqqvltYKhRBCCCGEEEIIIXqd
zC8ZCwXt6craNZKQW/gcj3FtbZpc0OOe47mh6z1FjW+qAk0I6ygsGV/P239e
i+uN3mIxVg01v9axWPfsMmpsqDv27Ro+D+wwnq/63QYeB7XSZszpTo3WnsIx
Z6WOiZi1s9x2tmw+Zt46oAtbXEMB33OR9ReqOt+slou9+4a6ozX+cwkhhBBC
CCGEEEJ0A8gDDPFH0FvOqUNTg11ATQ1xUptXd4zMHDw31pXEmp9fUldD3NVo
i7XFrrFY32urGMdV8TrSNhmPPXdtnylbV62H8hrDZ9rU4noG36pTUzNqlmPY
Xo6XpiaEEEIIIYQQQoj+JfN9i3mDqJV1Rp2a2nct1tcaQ13teovrfC7LWLIZ
GJO2KPUxnAf1v7gOaKgVdgpj1nCcNxmzdqpl8x5Fe8mud/ort/0GxsMJIYQQ
orvQM1wIIYQQYnCEvMp3LG8NzZr2T2xn5gaOoT73JWPOPkjpZDjPG24XWqiN
lik8ziSMX5vXcutNmnw+IYQQQohGIt9KCCGEEGLwZIYwJgy5m2cNIi8Qtprb
TdTOPqeuBsNalB+6/YdxTpM0+EMIIYQQQoiKaK5SCCGEEKJxBN/qHGpgp9bv
Z+XVMpvT7cdu+1pct3I31jabXL6cEEIIIUSrUey/EEIIIUTjCf7V6m6vuO0u
X0sIIYQQopeQniaEEEII0RyyftYSuRpmQgghhBCiuylcE10IIYQQQgghhBBC
CFEcaWlCCCGEEEIIIYQQQlRHoZYmPU0IIYQQQgghhBBCiNIU09OkqQkhhBBC
CCGEEEIIUZxSepo0NSGEEEIIIYQQQgghBiI9TQghhBBCCCGEEEKI6iinpUlP
E0IIIYQQQgghhBAiH+lpQgghhBBCCCGEEELUhvQ0IYQQQgghhBBCCCGqRxqa
EEIIIYQQQgghhBDVo7g0IYQQQgghhBBCCCFqQ5qaEEIIIYQQQgghhBC1IU1N
CCGEEEIIIYQQQojakJ4mhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEM0jA5vObRG3
aePfQgghhBBCCCGEEEKIgQQtbSm3C92ec3vd7Sm3H7X7yoQQQgghhBBCCCGE
6DyCnjbC7Rm30W7Xu53j9r7bnW2+OCGEEEIIIYQQQgghOpDMFG73uD3utio1
tsndXnF72m1Yu69QCCGEEEIIIYQQ3UrQGYa5TVSuxtTc+02Y3G1Gt9ZdmhCD
IuR83u22HNs5bA63N9wea/fVCSGEEEIIIYQQopsJOsMf3PavoKlN5jaRNDUx
kMxQt++4zdbCc37P7Ui3TdymKt52M8PdZkzpabCN3T5wu7R11yqEEEIIIYQQ
QojeI+gOqNl+aylNDTqa28T8t8XXJzqboG39mppaK887F897B2PRfkFtr9w+
sKvdPnTbvlVXKoQQQgghhBBCiF4k1Jx63u22CpraUGlqIp/MT9yOZo0ya7Gm
ltg0br9ze8Lt5Ny1FN1+Cbe3uP7ndC28WCGEEEIIIUQFNN4UQnQf0BYyL7nd
WEFTUx8nUmS+63aC26St1dIGXEdia7s94nZ+1IkHbDfE7UK3j9z+1HoNUAgh
hBBCiH4nM7fb72OuVHE03hRCNJrm6lmZWbkO4tXS1ER1hNiw01jvv90XQ4JG
thLj1U6JeaB578/Cdv6x20luW7gtw8+S7D9JGy5cCCGEEEKIPiGzmtuj5XJG
NN4UQjSaJmtqqEv1aqzZXllTE8LbyT5uW7b7KoqT2cbtWbfNC16fxO1ctzfd
3nZ7ndtdyXUOWri+ghBCCCGEEP1IZg3Ogc9UaguNOYUQjaT5MWKZBagvnFdM
U1OMmsgns7DbGcVjujKzc82LNsV7hVgz5Hhe7DbKbcr8Nh3WMFjIbT23n7t9
P7dNp8TbCSGEEEII0asETe0/MVeqOBpzCiEaSfP1rFC3/Q2306WpifIE7elE
rk1Q7P1jWddshyLvLe42X7OvMJUDinU3fiGtTAgh+onMRJwrbPeFCCFElxJq
uwytvF3dx1/Z7alYV00IIRpB0AB+4DZ14Tut0bNCrM5bubrt7bgGUT/Z2KxZ
+Yz6pdtmrP9pjR1XZBbhGgDDS2hqe/HcJxR57xC39Rt4MWUI8Wi3M6+zNacU
QgjRAcCXCmsuLdTuKxFCiO4jjB3+YmENsqadY3lqavM37xxCiP4h9FtruT0e
66Xn0yJN7Ydu77gdIU2tmwjrte7G3+0u1sR7z+1D1gvDs2qdBmtqR7ltV/qY
oS0fyni1VN1RPDPDdS7cwIspQ7iv/sC48qmkqwkhRL8Q+v/L3PZo9JHlBwkh
ep8wR39F+pXGjwUzy7k9zXoyDTieEKK/Cb4f4n6edJui8N0WaWrbur0b/U9p
at1DiAf7xO0D/n7Pud3hdo7b7yzU6A95mI063wxu17jNXEZTm8ftVMarLZt6
/RfU/yZq0MVUQfh+XnRbWs9rIYToNDIbu23f+P45+FXHWVj/ubHIDxJC9D5h
fvzy9CtN0NSWpaa2uHz0fifkFs1eWzvI5mhtw1iOGZp1daJbyEzOPuXGSnpW
E6/ht9RkNmrfNYjayAxz29ntK7addZobox3OCY3u71Y2nzRcFzTi/3PbKvX6
QW6bNvh6YPO5TVzifeQ0v+S2rp7XQgjRaWSucrutOf1zZne3qxt9VPlCov0E
32co/Z+pyvtkQtRDGF+cn36l8WNB5GZl/uu2pNpvv5NZzO0mtzmrbwuh30P+
8DuMLflVM69QdAOZ71hcc/OEdDsqnA8oZuntBnkN0EmQK7hSYVuu5hpEO0BM
Y4ibvjXq9E0/H+zfbj+t3N9lznRbwe1g/j2N234W1tls6DXBp3w+XlPR97H2
xsumdQqEEKIDydxicX3mZhz7ZxbithuLfB/RfoI/tr/bm9SkJ8vdQ4m+lpnF
Ys2NofJ/RO1kji6M822CprYUNbVl1Eb7nTBee4qaSOF7U7AvG5L/XujnUAd+
rNsYtz+28IJFRxLqyWN9gK3RPryvGuo2qduQanS1wfdvoU1eS11vQWlq3QJi
0sIc5cEtOh9qPt/sNn0VmtrxnDs4jn+vyZiB5QZ5DcPZtyZ/T+v2vtsqJbZf
ipralnpeCyFEJxF8D8wJPdAkTW11t3utZBxz7cj3Ea0hG4dWYr40vA897RuO
JVP1qMJ7qMFxj9vD1vCauqI/yPzT7Zjkr+aM/UJdFmhq32W7ndLtcLcL3FZU
u+0nQk2hJ6xoXhHq+oW4n82KaGrwH76mrlbXeFj6Ri8Rar6/ybge/I6TuU0x
WC2t+rYR2uTD1B6mSc1xGa9HmlrHErSq+y3kW7bkXBdV94zLHGghJi3Epk1k
cb1P9IWzD/IaUHvn1ynfEfMZiPddssT2K7Bdr6dnsxClUb8uWk/wMW6j/1HX
ESr4Nt/jsacrs1HN59M9IppPqKFxOMcHRWrQZmazWPcjw/Hk/AWa2oluX9JO
kP8jaifoGAckfzVJU4MP/wz/ndjtYot1iLDO2uNxTCr6g9DnPeS2d4Fuhnjb
Tzl/cF7Be4ixQEzSBPaHP661jZbQNoboGd+tZM51G415Jf8Nh7vNzFi1ujSs
1LZDK+0T3ws62svUhzEvtpXbnW6X4DktTa2TCetvIm9meJ37w4bQP1uUftmw
4v4X8tSLrwtbZNt16Q8iTgCxdGe4bVHfNeYd948W1zlI/t7FYh79t0psv4nb
K5adAxNCFKNR/bqeD6J6wvMHa+o82iRNDflEj7nNVdfBS5xPbVs0n+CH3c7x
4o8K3oNtSi0NmtoY+m/J+/Djn7Zc7EaVfpsQCaGNIS9/p+SVwT3bQ07JhgP7
4jDv/azFnJL9qachH+Z0/neD68WIziU7x3Z8wfzAlpwbgG52Q8F7GNt9xvc+
cpujQZqanvFdS3huPjPRFJnJ/Teczm1Y8lvWEGc2HfusZPuJymlq+ccNfufb
7D+hm7xPvRdt+DpTLYYOJrOv1VXfObSZRehrjaLu9KrFtWcvdRsx8JghZ73K
HMoQw/svi3MIWH8Uc62b13iRhcdEO7zW8uouhPpur8XzFd0Ha29gLdQa15IR
on9olC8hn0TURngOYf7u8Xr65yp8I4zTMFe4UKP6f7Vt0RrCvXGw28cW1nEf
8B7m4sdbjN343GItouS9+bnfBPrxWqNJFCHbXjCnvg11LNSIv5eGNnS3254W
68eHNRWL939B090rGYcWvIfXkOOPnBLEDc+Yem8t+ugjLNZGHs2xyaYcix6r
/rZfCG0RsZH/LNDNLmY/hvmBhwre28finAL6OmizQ4o9o0v5pooZ6jVCjBD8
yQcRa5h+p/Rvmyk01E14gJrYzIUxaoXtYuBxQz039HVXWtTW8HzG3O4nFmOA
FtHzuFPJ/MNCPmb2b+RZTk1NaxrL1nMsXBMq5GG+6PaeRS0NutpJFutuTDFw
+7APfLiVq28LIU7tLIvzCiMs5F8OhlAv5HrLxtEFu8ti3PgUJfZBX/ygDahr
KUQvkleX2qpt843wJeSTiNoJbRRjtifq6Z+r0NQw/4J4ncUb1f+rbYvWEO6N
5eijYa5zaOo9+EAvcBz5DX317+b6/FCbORlnIoduVvk/Ike2nUAHQ92ytzju
+4rt5gu3//G/4T+vX+QY07KdIVdkTvbj2H/fImMHxB2hvhF0NcSe7Z56bwuL
WtrJFjW0P/PaVua2Z6rP7ScwfxDiOpK/sabxSxZzP9Eun7J8TQ35dF/TLreC
elUJ0tT6hVCP8XnLi2eMlNHUUNcK8TqIIfuBxVgjPDuh4S5fqV0U0dQQf4SY
ydEWteD/so98hc/qTfQ87lRCGziXz6zb2N88xzEK2lQyvzRH/m8Y5i3RFyFv
fR4rqrsNONflPFa114ZxDOa8fu/2w7hv3vvw87CGKGqv/cHtSLddLc5bQced
pcCPRH2201P96Qxuj1jMGxpqAwh+J94/X+1X9D7h/oWfO4r3xAKl2n01fkWt
yCcRtRPaLNrrf+rpo6vQ1NJ5RXVfZbFzqm2L5hPmRUe7vRF9uOzr0M+geYyn
7w8/fbmUH3c2x5gTcmNQ+UAiIbQHjB2R4zGGY0foFe+zL0b+x/b87xWL7Ivx
YRLH9hHHGx+wvR1ucR2zo7g91r3D/D3mv7FuGfS7C1LHQ5zRC9wGY855eQ7U
V0NMx2Xqc/uJoK3ekurLNmA7e5N93rOpMSBiJZ5hP4g2jPrdNetm8l17CdSB
CnFCZ1V+5oX29RO2LfR/n/F5CZ/0G7apWcu1jeLvhdzTz3lMtF1qaGFuDK8f
pOdxp5GZ3KKO9iX9KcxFvsv+BRrSRhb1WmvcbxdicheqcR/oXoewTaVqvgXN
7B4+sxFjifkr1FzbmeOfIvXhQjs8INWfrse2f3+Jc+OZ/BKPWdtlC9HRFI0j
he3OPhvPhjXKtftyfkOt/oT8ElEfoc3ezzEZYqwntuw6hxhblacKTQ1x15iz
xFoFR/AZM99gngdq26J1hPvjMfp3a6R89sMsxgQl8RmI4VjBcvVx/8tx5te5
sYV8IJEQ2sMpHDtg3Pco9Yj5Uv3v3Hx9qYJ90U9fzX2hhd3IPjZpj5gX/2Hs
a8P2f+aYFbmcM1nUiO9LHe9Yvg8977xcW8W6YyFv6hr1uf1E5rjYPrLt4Hz2
b7dQn0BbYwxF0Hah6U6g3xvmFWqPRcvmdyBeCXGXqBm0h+XVqBTdQWgD6E+O
L//bZXM8n2f7Qk464iMRpwQt5Rv+m/SHiKddmv+NGNoL2NcVrMsdtJmX2Rei
T7zJsvXTwjnQTo9Uu+o0wlwOxiLQUaFNHe62Uvw9m3bOi2vvY8J8KmqwFdRS
y0xGH3BWK5mfOuBYWLsqFTMZ7hlocXeU2P43fOYPagwlROsJ98JUvM/Tz/7J
6XP82gbkM4d9cD+Ms7y4hYFU8lFr9WGlqYnaCHEMmBP5E9vqV/RDMAcCfQ2a
wdSVjlKFprYlj3mqxVgfjNGuGHjvVIfauKiFwbeP0KdfYzE+Y9fUc2AU+/kv
6ANiDmV1y8UQJeNMvPeLyr6V6C9Ce/g/i/V+ULOv2Bw2clKg585fsB/6behf
iClbmK8tyD4chhwYrCP2d4txlpjnR77IpDTEoz2ZGquewfaLmLS1UmOBJE5N
mlpfkTnaopab1DFCe/mQ47n/8e+k/s9GbHOYP4COMoUVaGql20zYH3W2D2R/
+jbb4ZeptoyYyq1b99lFdYTfbmY+87BO46EW8+Ewb3qaRe31eCurhwQf8HL+
5ojtmdFyuT54bn4Tx1PZ7RF7hrz2xdkGv2L/9N2C4y7PY6JNInZ35VSfhn7w
c7bxxn8tYhCE9oD4K9RrnLjGfZP9UXPpxxZrkyKvclmL+lORPMqw31+tpnpq
YZ8d3Va1EC8wWML517RcDd6/WKxvfU2RbfH5bosmRLcR2jhqJWIOZcnUWGpd
PvMxlirQzILeBt0A8yPweWcrda9W8k+rj3GWniaqJbTPzS3GNbxtuZrD31gu
zh6+EOpaTJfaDxoBYp0R77A2fJ4i88w+JgxzjsMKzonYC+QBYPyH+UfkNI22
grmhanNA1M5FLZRrQ9WRfQ5Adz6BbX0m+vLQ1N6kbw8//SfcHvPpSS013E9z
y38X+WTHeJOWbhuZ71vUNmYu2O86tqsjUsdZiv032ilqWEL/+KPFWt3o6w/n
/sPp0zxlOU1tJPd9PI5lsnPmiBFAnMgl6mv7iRDDg3m1SSzGUGB+APme0IAL
NbW/sx+EfnFXwXEQG4TYs1ltQCxReB85VFhf9lPL5T+PsZyelsT5PpI7n+gM
wno897C/+ZK/W/LbjaM/CV0L87SIE9s/jofyjoG5AWheqFf6g1Rftg6fnbBD
uS30XcSYQVO7nm3mPZ7/1wXHPZxtB3ZN6rjGfu+zuI/aU+cRfrsrqv9twm86
A9vFKMvFW2McDm1qBys6X5XdH3GOm9fWFsKanz+K/dpgCZ93M34OxIuvzGf+
BUW2XYzP7v0Hf14hWk1o43fzefErvMLx1CF8zqO/PjHlf8JWYH/9Nf2Okus1
16qpldMSpKmJygQNC3HVX1iuBtQEy61biH+R77GVBV86u98S9EMwT/0Rn1eI
O1s9padhbhox+6gN9E/Lr8F5PPfDfDPykTbhc29Hq1FTq7SN2rsopFQbqp7Q
rx9G3/0StnfUoIWGhjHgSI4jvsj5ZiHXM6mlhhihIuPJvONjvLgc/b9N6SOa
fP5+J8SMYRw5Zeq1eThewDzF7Kmx4q5sj29FXz/kzp3EMeVoC/FsYX/E3mOc
+xj/HsJ+G+Pgv+a3uzB/iP7+n+pj+4mgqT3F5zriKKFfQDtDPEWhpvYw+zq0
n6O5/+TRZw41hV6lXZDfjsN2s7F9wh+AZod8ZuRC7WH5Wt0TJk2twwg19jC+
T2IKkziDzy2nqX1O3w+/L/T6o9h/oSYWNLJEkzvD8nWvM7k/NLo1eD70aVjr
CmMu6HDvcjvs/6+Ca3uS++OaVkkddzj7PrTn7dWeOo3wG6GfOK763ybscxzb
w8d81qEfwThjssp+VKiBdmgN50MsJeJqN6+8bVXHW5yfGc9q6ILTsi/8W5Ft
oeVhrYb5B74nRKcT7sWr+Fw4OfX6v9nX47lxp+Vrapj7GEsf46Zy93MlLaAe
PUEagyhN8FXh8yQ62lj6O/CJMd+H2PvCuhSIoUBda8Tk/CP6zGE/7H9QSlM7
kNsgFg1juhVSx7iQPtcj9GnwDMEY7o8mTU00mca0kZBHgLHkKLb303kffM52
/CVtB8uv2Y3nwNnFnwFZPx+xH6g1/6Hl6nDiXpmj+H6ifwgaLeY50nMUO7Hf
vjrfv8hcxDaJWisYrx5BXwXzH7ek9kf9cGhyI/n3jGx3aL+r57e50J7RLo9T
H9tPhNgJ9GEL8VkNXRUxk9DUMG5NNLVZ+N54tqFV2b7uYruB9vEy//3Iio5D
g662ANus0da2XBww2uUxLf4CREWQxxBqRyNX7QD2Vci5Q4zZDfQpUfNgRfp8
UxXs/0O2ndfZZixl0GC/4TFm4vZLsm97hM/IyyzGvn0S+8Lscaemv4n96dNm
+0jocm/zWf4DPV87jfBboe/4ZfW/TWgvP7Xcmj6zFLSlavbHOgHTV3m+NXNt
vRGE8+NeYn20zLctjqMOKtgO8xQPxnYvRDcS2vfZ9BUuxCscT+Ge/4L9NuZp
hqfuX+RkYBwF3/bocvd0KzQ1IXKEOZD32J7RN+9lMScNvjHqqd9TZJ8duA/G
b0O5/Rj60PvzfkCu0GP0d37D7Q9NHeNh+sZ/4v0wK58ZF1kNmpravKiHBmlq
0L0wlnyG98GTbNOs9ZN9HmAN9wW47XjeK5sVfwaE40D3+MByOTOfWa5Gm3JT
+p7QZ9+eGhPCzrWoT+yeen0i9uHQHx7ga/A/buMYcr/UMZfna2fz79Xos3xI
vz19/iP4+t7qY/uJELeBeAjMlUF/SHIv12Df9hL//rnl11JDTvxIbgOfYGPL
zcvhtZ1K92mhbaNP3JM+xDj2i9h3yhI7iY4j/I7Xs41MV+LZB0NeA/SwgvV7
gsaatKlHU/v8mG3sI7YPaHW78RjpOQPUdktyMHYpOPaKbM/Yf8Eefb7O7jZX
C84DrXPmilvVRIi7xnhhqdb+NuG8Jfy0AduiD9vWgnbXlGtBbDh05k0KXt+I
99RPmnNeIZpN6IuxLhc0iOuoH6C+xIvsx//HPn5WbjsR2/x4+rZrl7tHa9HU
pC+IwRN8W9R7WqvgdcRHP29F614G/xhtfHm2/0ktV/dkR76GuWloCxdzfAZ/
5RzuP4TvjbPsvE4Yt8FfvzF9pnrbt9q8qIZBamrfobbwOv/7I8vlfa5vOU3t
IPpcY+nTf2i5/DzEfCB2fyUecz3eK9gv5NfR509eO7VHfX5RNYjPCbHyyd8w
zIe8w3aYvI68YcQTQZO9gq8hH+YFvr5I6pio9Yc8GdYgCrn5aKuP2oA5wFBr
HG1zffWx/USogQqf4D76ur/js34V9n2IPcNcMuack3WPEZv0Qz7vkdM3A4+F
9b7fZjtcoMT5pmW7vId96df0MxC/O7P6wW4i9CHI+UXucInaN6G2wSt81i1f
0OccxDEUfEbknA9JvY7+DeOxm/jaPmyf16f2R/+Y5I1OVXDsXS1X461MHcuu
BXX98V2MdvuNW4m6/INmPje/N+0vjT1sqJ10/8DfrdmENjuvxVpmZep0hG0x
z7VtE68F8xiI01y24PWr2B+XqQ0nRKcTcpzRh99Gn2JRPgfepZ8Af5OaeohP
+B+fB+9X8gWarakJUR1h/U9owdcVvD43+3b040PY/me1XH4a5k0Qo/Zn3hOY
u1mMPjXXagprzmF7aASsTxv8LNTFuDN9Nmlqolk0IE5tHvb5MMT/JDVkEJe5
Nu8H+PDQzC6zXH3kpGbVcI4zsA/iiabmGPJZjj1Ws1yd+Y95/IN70OcXNRF0
1n/n2kGY/3iR41GOO4KhD36G7fDP3PZvFvWPwtzRwy3mfq7CvzEGncDtC89/
KbddXH1sPxFyr16nH4vn+UJ8/kPH/YBtYhZqE0k87s4cE18Z+7FwHMwz38x9
ji1xLuhpiEVLanBNsFx82sw2QOcVnU2IX4R/N6r07xbqu2O+6VHL092CP/mk
5XKJt0/tczHbCPZL5mcPt6ipJXO4eM5Ck83w2WqWPx9xMo97T2Ff1kN+JO4z
H4ea+xF2ojVeV8MaZH6Pm49/befGHjr4RNe2537PPktRcwP1/iYpsR1yd37Y
xGtAHDrmwmZIvY41hxCHsG9zzitEqwhrQ6MPvps+xTbsw9HvP8/xz494L2xm
uby4p1L3aLBa+3BpaqI1hDia0dFnyXs9iaP5U+q1NemzQDtG7R3UuIAehzno
+fk8ei2O48L20JmTum2p+Z9Qr/aB9NmkqYlm0Jj+McyrJ3knD1hufVzUicHc
ZrJuHWJ+XuG4ELEWf+X+iFF7l8+Gj+gjof73CMtpzRbvtaCnYQyaikMS/Udo
D6jf/ofUuBC5da/S/0i2QRtEfujDbId7c9ur2FefWHDcM+ifTM2/32FbXXdg
e8tcwrHpVOpf+4mgjX3E9nNLqv1hbiGZS96avvF4+gmzc5v0+kZ7cnscY/IS
51qC+0NPy/Dfr+lnQw9eVv1gNxHqM8InvLL07xbWeUP7OrlgnLSF5WLA8e9i
qX1eZVtDP8e15cOaKvBFj+Tf6/PZizZ0mA3U1C5nH/mncuOxLieJVXM/Imhr
BzT4+Ftb1NNwjmGNPXSoR3NSZ9/vIRZ3EDmviI8s+R7yejDHdX/qNRjy5R7n
vVX/qZsPdMDV3Lzftz+6neeGfKSRbqPc7qfdbbH9YGy5cjsuVLSL0C9/nmvj
YZ0ZzAVfmPJhk5z90y23/tE51kZNTYjqCVoY/JXCtZMQgwwdYJvUa0fyfsCY
HzWLsS4dtAXUW8F841T0pxJNbX36QS8lR/D2ie0esmwMT/Z1aWqi4TSmnww5
/6/Qf/+AfTzizRCH8T2O/6CpncfnA/x6aGPrcP/Z6BN9zvvl+wN9oxCvgRgk
xLLdanm1lUX/ka3XvFdqXAif+mX2n/gbcR2oR3Qo2xfaZrJOHupzQxNZs+C4
l+b39aGtQTebukibPJ6+jvrXviLo/dDCEBP0s1T7QxzQc+zvHmA/CLuqYH+j
b/ASx4hl6juFHLzT2C8m60cm63yN5flmU9vrFkIuD+ZV/1z6+RV0E/RVW6Xa
Fmqv3ct2N4b9HPXZ8PxM2sReqeNcwuNszL9R9zfRZAvW+AltEn0Z4i9Xaexn
7jjmcfPvz/x7tPfc1iy/edVg/u9pN/997XsNOmaKoMGXqbnYCSTP3br3n7bM
e9+in3lW6jXkC2EO7AjrvJhd5KHO6bad27Vu7r/aO25+T9qHtPcttkHYu/z3
Q26Dv91PsaVafeGiXYR1ZZJ12PD3o/QncO/fxvcO53vYJomD38GkqYmuIOsD
/ang9ePp36zGv4dy/JXkwCFPbWeO2y7gNtAeEPef1LtAnXXoC5iXQNscQk3t
Tm43UXI2aWqi0VRqK9W3l6BvPM+2Pob2D/btS1vU2vBash4H2jxyplJ1QUI+
VaJHLzbQN8r8ls+T9y2XC9qYL0J0IaHuJNrTBqk2BA0XOVXPsN0hX/PS1LaY
G0nihV5lWypcbw/rbcyZ+ntKy9YSH9Am5+V4Vv1rXxHaAtbS286y63Fm30P8
UVr3+jhfowj7IncDOi3iKZcc2LYyRfLRgqaLbaHhnUDfI6lNvLfaXrcQaoLC
n9zdSmtqqEmF+Nit2TamYz+Gfu1R/uY3pbY/mM9UxDCkc+Lcrwwa2fz8+y62
mZeLtDlju9yjePvrOX5uMU7N71Pze9FmbMAxz7SokfypwnZ1Euo1rl663fQC
pWLNQvvcjn7jbqnX/sB7YrYO/F78vgztAfrtcxZr7GHtI8SN7uLmzxDDswH6
6zK05dz8N7YNaIu2/KpFGwnrymCcA514DrZ3jImgJ1zI9/7G++Q99vsYX33b
CjQ1UEu8sTQ10RpC7hDGX0cWvH4S2/t3+Teed0/QUE8Faz+jthS0hP1T+2Gu
8VT+9xm8J87FX942qaEFvxz3VHa+p942rrYvSlGqXVTTXga2q6ABJ/W40e+v
xb4dmnSSr/I+fXpsc2O+Xx/mXr7kvTNd/tlQQz5bY/7MgeMB0X+EOWvEnqXX
IoBBY/sP30ON+GSNJNQbQo5dUtMb6xtk118ezPyE+leRI9SPRD83jhrHKZaN
qQ31/hBPgVgL6GmbcZx4QvQJQk15xMVPUeS4hXaG5WLVfq+21y2EHPLRbj8o
/QwLYyn0X9BdsUboY3y+or1gbgBzT4eltn+YfuTjqdeG0Yd8INXnrU/fcvVm
fbouA3XmvqIhD69C/f2ybGgxBsn9f5t+8JfWr4S+baaB90aYu7iDfee3+Nos
bPsHdqhPeLrb824j3MrE3wmRkPkF/QbEn29iUS97PmoBmb9wDIT4Y8z9fmHZ
PLdkbi9fU6uFwepo0hpEdYR6JujHf1Xw+gEWNbUfsb1jHvE8+sa4B1Bj6g9s
9ykfJmjMG/C/j7IY17m1t8FhMUYtvI68gPssVWOtmpgiaWqiFgbTLopoahgD
JDW0X+b4Ea+jHuF7lsuDSmpsb5ff92M9xpDb9Hj+mcI6HqM4jsA4dPoO9Z9E
S8FcRpifTuUwZf2JGaLfndUyYFh/+Sel2k4lDa3UNunXhWCb29TinPLeqX4Q
47/76Q/gmY95uo8st6YR5gx2K92v5fnLm3LfpFb9Jmp/3UJmS46X5qvwWy9o
cd4W4yfkRCzK16GRQbNdKbX97WwH+6Vem51+6EkFxx6MbtRrIKYP8UPul4SY
tQ3qPA7qh7lvEuqobdKYS+tnwjrdqfjx0O6xJi1iNy9I9YNYAwv5cFN2qD/4
e7erKm4lRJYw5/IJx1D/tPy16g/h3yMt1pZOYuGvsgF6Wrn7IegVMxS+Wst8
crk4DPnDojxBU0Mdp80KXkdd9Wfo41xODWwB+j6X04dGPObfLa9GAPr/9H9n
1ppyyW8mz8Wohdc3tDB3nUOammgkg20TRTQ11E/7huO8M1N9+zDeP+NT7yNv
acb8vj/MqUNTuyh3ljCuuJvPEayB8GOL9cFRUwTxHsh5QR4ocqqLxHaI3iXk
wNxtjOVtfHtW/JloJGFMiDhczCkk8wtj6T+jLkpqrTzocOFfzD3Pwz4Pc9aY
g7vfcmsffM19p1Ab7RZC3RvMBUxaOO4p399kn6eYt0UuRGpNizB/8DPLX/8C
+RWI112+Q/WGTmFTN78Hg67mPojV6kdAo0SMG2pgnWODi3UTgZDnjniEjS3G
c55C/w8aMeuCBP/xNvqE1qFt/GS3M9p9EaKbCGu6ITbtdfbfiFljPE9mW/oL
6P8f5PMf8Ql7VK+nheOsH8doOWrN0ZCmJuonaGSIu1+1yHsjqB8g9ixVRzIz
caW2VUSTSB93auoEg756tW9RjMG2iyLt90lqZhgrrlnQx1+e0tTGFvbnFtcf
eJNjzt/yNdQOeo1jUOyLOcr3qK99RcPzBfFxC9f9QUSXEnztc5M+Us9y0dmE
tYzhIyO+DGsbIE7tBov5fAVr3YU+EznN91iszZr0eePYF47nf7/E7eTPdg1B
U7umPt8utAus+bNz5bFTmPM93LSWTyWQG3KdxbpqWAv08Br339pizifi1GZp
5IX1L6FtYx4B9alfoB94XxyDZX1K1HLvxHUJ0lztdky7L0J0E8FPgH/wPu09
y8UoI37gY94PSR2d/6Xet/z7oVRMcrhvbkm/UqumVs2+QhQn5BbdTx+l6r3U
tkSvU6CpHcpnwQP5enDo49fk2BBzKsh7mTf/SCGP7yOOHZO86E35d5JPOt7y
x5Of8r7UPHxfEmq27qLfXnQHoR/EeqGIs1iE/21WckwY8jNuYD+X5HgksW3w
o1GPcsFkf/mz3UKot3eo+q2Owu/JoIshVg1rds5R5X4LuL3g9pbb+s25tH4m
xBZAQ17a8tYSDflA+1uD4g6axDA3909t23ZfiOgmwjP9PT73k7UKklppiFlH
bAFiCb7iWOh5S61lyGPAd0AdCeRxoG7ONgXvYx3x29Kv1JvvVk2unBD5hPaJ
Wk8DYvWFEAmZ4dTGZsqPu8yOG1eymP80X5F9N+fz44M43gyvoU7t5XztcxrG
kojvQP2AjXI+le7LQYL5rNXcvt3uC6meEH/RyT61EIMg9GuoJbmXxbryWLPx
aovrHmGcOTStycmf7RZCnbM11G91HMjTw1oFY9xOqWJ7xJbe4Ob+SbPW+RRd
DNba/Y/b8u2+ENFNhOfDO5w7Q+3Vs1LPeWhrWLdmjOVqP5xfsD/GYf+wWOsd
670hlgFxbSuktkGt19vTe9WiqVWzn3wQUZrQlrdq91UI0buE9e6SOt3pmjDQ
TVArZjXa4jltu/71bcQA1rZYU+Zpt+FtvhbRv2C+dUb+K0g5v1X+7AAwP4C1
2Ods94WIrmI2izFqiFVDzNoCFbZHTt/7bqPcpqqwreg/fuqG9bYG1IIXojSh
Ds4b1MwwJtq0YLxzA9+bQM1t84L9t+f+WNtmXou5HNDVjkptg7m5WwvPXI8P
UY8PIn9F5I/zhRCNJTwHUCfgMelkDQexZ+e6LVhmG9T9wIPt7ZZckRD5oKbR
L9zucvuv29kmbTeLNLWaWMdi7NB91sfarNpDXRxpuVi1s8tshzxPH7faS25L
tuC6RPeBtnRHhW3QP2HNuqmt9rUxRE8S1gl/i5rZB4xbs5QdzfdQE+cVt+lT
+yJv42GL6xtwDRvUmg6xCn9NbXd9MU2tHmr1QeS3BPDbLGsx1lkIIRpMyPPE
utE/k6bWcP7u9qrbUiXeR1wH5tvxQLuoxDZC1ALGB4jdqGYNPMzjY708xIg8
4HaEG9a5mrjcTt1PyNFYNt9nFiVAXvqOVl3Mx+VuPt6wd5t6RR2Oxi11MY3b
8xbXK0D7Kbb2EWpXQPdHLNsOrbs00WWgH8Kan5gvQptx3zasf4H5TdSyetTt
GYu67Ctuz7k94oZcPsS4TdvyKxYdQKjp8B41sycH5uSEWqyvcpt9C/bFekXe
N2E9j+xrC3P7Y1Ov3dAuTa3SPn3yjEJtgY/cftvuCxFCCFE18Ofgp71ocbxQ
DOS4fG1RU/tRi65L9B6YLz3Y7U63Zy2OTe91O9BKz8dhzHq325sWxx9TN/8y
O4Wwnv0bnGvGvPG2bjNKXxvAdG5PWBx3blbF9ogfgqY2sonX1PH0+ZhlMOzi
9qnFeLV/FryHuQKsl4c4yFOtujkD0X8g9gzPQOQFP+z2utt7FucuodViTQvM
Ib3E7Z7mdv4csEMt5iGLviQ8/+9g3ufhA2vchP+e2+K6HUML9v2B2wVu9+be
C+vDvR79i+x2TY9Tq2efHnhGIW4B9+88FbZDjAN8lMubfkVCNJchVtkPwvsr
W6yXsb9Fn16IbmQhi3rFg2W2+b3F/t2f4f1S+yOzsdsBFtcOHSoNY9Cs7vaQ
xXHCY27XWMwnxlgB+cSIfxxWsM93LNZwxvtog32Wpxf0s5Msrsv1JuedX7RY
P3h90/orCVgH+lPaTypsO6vFelhwyHdu8nV1ND06ZmkFyDmHbvalRX02qcsH
v/B0i3raSFMNNVGcDS3OY6Ifgo4Gzexmt79Y1GvXdMM6XDNZzAHDc0/arCDh
mT8Xc3YmK6GpWXG/IMS97+t2f0pTO5F+Rar2S1hz8bYiB6iZwTxbevD5dJXF
+OW9y2wDPxi1qzHmOqwVFyW6EeRuh/VR230hxYDvg2cZ1mjCGO8pi/HXxdY4
xFo9l1mcS/qf24duJ7bmMoVoODtZjDE+v8w2iGFD//5US66oI8j82OKasu77
ZtzfzRxqcc3aYR3ah3UymJtDHgvWkUKcY1o7Q2wk5t7hZ2xdsA/yXjDmQE5C
H44psr4x1mFZzu2Pbk9YXPML5t9p5lduU/e5tvYvi/Wt0IZmrbAt8obhjEMP
WajJ19XR9HAsQCuAH4gYIox9fs/X9rHoFyLvs9L6BT1C8OtR4/wEt+3clszX
+vu2TyoF4rExtkDMGeaKsPbTZG29ItFjlNXUsH7buvRrsdbBbG7/cbusYLs/
If+znjqtrbYuYmaLczCY+ytXE+BbFvX28W5rtOC6epSs72y9+RwKevrQDvx8
mDN60qJvhDicZL77c4v1C9K62kYW/Shsh3sDc5IvW3xGiqYTNNk/u+3lNkMH
tqVu5Aq3j912L/E+cgww/kT/flqrLqr9ZP0SHzuFNWevcXvIbSS1jR8Xahld
+pxvBUfQJi/xPmqxItflav6N2jLok9EuUQe85+PTyvuJebVSJmXbu4L5Gohd
e5J94qR92B+ibUDDgKb2cIVtocvimY4vGHmihXGRfUcPjltayXoW426xdiN8
wzf499rtvKjWkvmexfpM7i+HXLSPLOaq30Gdzb+jzKy90S+F/vdHbpe6bTSI
AyE+6E9uDcmtE/1BbTpTpky/nZnG7Xa38zlfDE3tOwXbbOJ2Wrv1sh57NiG3
FtoBYhi+U2Y7aBL4YKjZqVjnusn8lM+hM9x+Esdr1dMdbW1ALcX2Xk6saYy5
bbRz5L9d4PZLt+3cXrCoq13KbQ+yGNMPfQGx2ivw9Zuscr6JaAihzSDnyX2R
zINup1isBdCPY8lGgD4GMWi4BxYvsQ3aPfQ01I7ZsUXX1aFkFnDbze0itj/Y
OW5buM3YHX1wW6ikXSCfeLTF/GPUI8LanpjXQK21KZt6ZR1Cff5iiAmBv5DU
Ix7J16yP+kPkSCFWHJrayRW2Rewjnunoz65s8nV1HT00dmkVB1jU/hG/DS0N
cUe7tPWKWk6YK/8NY2bfd/vCze/FzFj+C63tXb5/CjW2LquVEvpTzOGe7vaS
xfj1wdb1RO5wpf5KDAR1qL5nXVhvp3P0puw6Bt7+Mv+wkA86YBv3wzI/b7de
1mPPJOR9wk8ZbeVjU/03CXlBH7fgmnqYzDJuV7u9bHGd3Gc4Xvs/q6JuSve0
v47R1ea1GGOG+LQbbWAeiI+Tw7gOtQKx9gbaN3RjaBDptdFXsb7MS6pM49th
ts1MQR3jOsZo+Bg8c4zbytXcK33OvJbLj0IeHsajGBcU0z0wn4qcPYxB0f5L
rQvaJ+T1WzNwHuQ0C2sohRg2/PdyzW9/2Zjm4dG3D/H7iKdbIs43ZlZ0W8Pt
h5yf+bnb5m5buW3vtpPFfJ3dabvxdWyDefjvuy1usWZHkz9LYDGL41GsRYDY
X/TJ6HdL6bx1EuKkp6M/ifiK1S3GfG3o9guLuUu7uu1tMTbxVynDa3umvi98
fzu77ei2Db9b9Embum1gsRbwyvwuUSsYa2v5eCAzs9uU8bfLUd9zO9sWoaOh
pjB0tWejj9w3/Z+3WfNxfNDKtqiw7XEW11rBc1zraRXQBT4k1vlF/syM7b4Q
gmcj2h70NMy3/r785i0FOYazu/kzwVayGFPnfXxYD+Z3Fu+Fv1lcRwG502da
jAmGnUM7y+IaDNB+TrAYa/wbN6wliLh2zD3jnlvf3QfvS/f9mX8lx5p9dIvZ
uNFmE7wf/+YrN+hr1Ni+8ft0wps+tPSxzsubmK2D3xP6FOZS8PsW1FRvN6F/
XdXtAYtxwf9m/z2YgyZrqmzXkEvsDzDGQtvDvYY4H8y/zdfWK6qRztKcKvl1
4f2+mM9sEfgu0Xbhe1SqU4fnSp/V2mkGWf8YsRCY9xnFPvwtjtdQz2eOUvdC
d+m6HaGrbWxxrR3Uyi6mGWO9OfhJ0NWgJyC/GWvyKL+5SprXFvPqDC1NPe0e
t6ct1glAnh7qbu7LcS80hIWoPUAn8Gcx6nFmvp3SITD2XcFtFbcRFuPfoGev
S11iI4t16zel9rBFyvA69JX1OJZezaKu8T0eewne1/PyHkbt8SlswJo8VX92
xOVNUud9M4vl9LO/W2zfZ5XYFvOBaPsYh0LjmKKeE1YmaB1T8LtZjN/bWhbj
z3fg73iYm49ZQt6lX3eIz0Hs+iVuV1FTuMliLLv79CGWEYYY95G0O/jazdwe
882Yt8Bc3Uk8Ps6zn0Xd5Bf8TaG9LM/fcnG2JWhY87A94W/oKpgTQb2rcy3O
kUC/md5tJov5L7NznwV5nKXZ7uCzr22x5izOCb1mf4trOvkYJfNXi778hfys
WOfcn8uZO93upt3Fv+/g57/RouZ8Fe3KlF3N967ndrdyX6wFhdi7xy1o1WP9
nrrUr6np4xysBQo/GXMb6GNRp3Kfxhw61L+DTnY2P+vt/LzX87tAHg/iDs9j
WziT3zX+PYuv4b0LuN1lFvMu8R1ey9/iJh7zNrazu/ld3s/v82GL/dLDNLx2
H7e7nce4kueBLoucKR+/hjUy0H+hj0E/tArb4CJsd9B1k5oKE1ns8z7mdXTY
2LRpoK435n7RTy1SZjv0eVgbA30ZNNv/a/6lVT3XNrTItkNt8PddseOWIdTX
+ZZl697mP19m3+5ZGzpZ25aoQY4v1g2GToQc8nbPY+K7RR0QzDfhGYq6CA3O
UU/GteGedx/kM38OjdzD7K5/mt3r/c0jPvZ62n2e5583e+5ls2d9zPa0jxee
eNvfe8PsQX9m3/es2T2+3T3eH93n/cJj3m89633Zi94fvub93Ht+rA/dPjnd
j++f4TP/78+93/vCn2Gf+fP1I+/z3vFn7Gv+7HnWXx91qtlF/qw8xPunjX1M
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
I+q0wM/CXPIxvC7ELsHfwpwp5kMxD7kavzv8HojxQ+wf4sySOCPEm8Gvh6+V
5DDVOP7oaL0DYzzkfOLCMM6bt61X02sMmcimW/0km2PXt0PcToydHB//3Wes
zfrLRyocINxvF/E+GG2x3tbGvKetg9tVJzHSYtvepch7iB+B3oF8z3e53eqp
93GvY61G1ARGPeBW5Ah2IKGNTcX+E/3tq3xe/ST3TJGmVgT402hfiPPAuuGo
M4156NEWY4/aQYfpZ4Vk2xpyxaGlQEvDGBDjQ8yTzduD/R50znKaGtZQQd+E
MdghJbZBXXussYf2hjry0EGub+A1psjTD+ELQgNI1sCBH/r9lK1QpWFuFTrY
j/iMQ8w54l8xX4o5pRNTfuXl9Cvvpg/4BP1FtJckhw+W5PQ9R5/yEfqKqK+A
HN+kDh+0uF153nV4LfAfoT/cQF8Qz9yJrX/WxEhAzXTE1CDOds42X0uHEu6H
Leinfcl2c1G8L9p2PRizzM7+EjF30OqgwflY82u/vhf8Wn9/EN+fK7bvhoKY
RsRkL9Tg4/YKS1v0C3BveT8V+nbE+CzfzovqTMKYfJ9m3U/FNLO5fHw2116f
DRi34e/Zt3/OJplz5WZcSreDnJ8vaTtV2A7tHevePNaC6+phgh+W5FxCr8J8
B+o5IV8O8d6Yg0FeKfL0nqU//Tl9o8MtV4doJh6Dc+75+kLnaModrXvgu8Pc
Ny4MutrV7b2c3maSOVa0Gde7yObc46Ns/zz7Di/Z0InLuTIhJvNqji3m7tB2
1MmgjSPOHjnNhTn70BZ8vGQ+9gqxRB/SluH7GD9cbHGMivsEY4q/NP+SO4nQ
3tBHY04CcxijLc6NYF5n0lLtUVpayMFDfCTm4uA3oy405uKQDAsf+p72XVpn
kWsrWZ0GcemIr0deE+LSkBOFubnvdPjzdDBU0jmh50Mjg6+6TYlt0LbQT6Gu
td+voaZaqVpGiJMotWZRF1B0vhcawmz0IdPrKePZiXxd5C9Ak0VsG+aukzpc
T9LXfIH625v0Ob+mfcj3/2u5NXeQu/AA+0LMLdzM5zR0FOTEIoYc87nH0pf9
NZ/liO/FetqILUK90WQufAn6v0l901noHye1I9K5ikMLLMlnRjx7krOIY6KO
RWF9q3rA+pMY/4y28mtj9Cmh/WFuCTmRH7NdrV5xt5YTagE9bva5P49uecRs
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
sV8Ia/IcbjE2bQ+3yfXtlkbtUXQa/dlfhk+E+d8d3e53e8htd7fJKn3aLvgu
oJtAT8M6sg2po5ZGz9muBnll0NTetbgOj2g64S5Y2u1Gswl+X77i3/+ut1pu
bUchWor66tK075mWmd1t69hXCFE9ldqlfLTeoJrfUL9ltxJ+RaxBgLi0s9xU
C0SILqT/tJGwnucGbj6uDbFpx1q25mOFPa3jvwesRYfxOtY0vsnqXLu4GqSr
dSXQWLHONWqqac3PppOZ0u13bi+ajXnL7KLnzRbxv23Sdl+Z6G/Ub3cKYW5v
XbefWYhlFaJ6qrlfdZ93P53ub3fCNXQv4RlwiNstbttYqLcrupnCe6CT7lXR
XDq5n24sQUtDfZLL3Z5w+5fbgtV+wg74HjZyu9rtXjfve+08t7+5He12jNs5
bi+7fW4xRm2VVl1Y77edngFrXF9mcc0K0VRCbfEH3N40e/NZs5+PsibVmxei
HjplnNa/z4nMEm7bWVhnXIjaqfXekX/W/bSir1abagXhm/qu2/lup7nN0+4r
EoOn8B7Q2Li/6ASfurkELe1HbldSSzvP7fv1aGlt/A6w1sCjbl+6jUvZWLcx
FtdxhH1msZZaW8buvdd2ehK0pbnbfRG9S2Ze9jGvmU14wezc282mvtAaXNtQ
iEbRzud/fz4nMtO6bWxhjk+I+qnl3mnVvd1/93NracXvWOyYlV7rz768XkJ9
XdQbusZtS45T231RYpAUuwd6U1cRpajVn+6e9pCZyGKsyNXU0s62vDXpK199
B31WxBehdvUzbh9YrDGPeDSs34g8T9THesztKIvrfraFbuk7OvnaRLcSajHu
6+b3aOZ1s/9dZ/ad/2fvPMAtKYo2XEteck5LlJwliYIioJIUERAQUEEwAJLx
JygIGABhAcmgIKBIRkGykiXnKCA5SM457NJ/fVN19s7OzjkTzsxJ93ufp57d
O6GnJ/Xp/qa66jxdMVptmm7XjpBO0c44f/CJYuZ8T22a4XLGpB6Kvjud6tsP
r/e5e9TZz6amVidhMbF5UseojeIVGxyKviO864NHO3pabz4TYVK1b6ldqna3
2klqyxWtaY+eJ+KtwMdoebU1xHI3ruLLJupivSagF68f2zZSD1EOAsTCeE6i
fCcn/lpkxAW64gdSY0xDQnqRPOOx4df+hlnE8nkuO1zOeDjQzf5EVZpamfq3
2m74vNODSx69lf3pokR+Hlupnae2sdoIXqnBoahuwndnMMl7f7P+7i5RTRDn
cXO1K8RyD0BLW6JMTfmMDyZsx0i1RPr9rhLlIAhPiHxwmMhcyEFwjpjuTciw
o2y/cjCJzu7zat9Rm3KQz3Q4UXZsVOTZz9q2zHtT1fvXbL/h8U4PPu1qaiRJ
mEvteLWjhL5pA0nZ9pzv0GCR9762amO7SzQvfSu1q9XuEvOnXbxsDflsDw55
f/95n0lxon4R8p3AN+0WkUs31oUnqx2mNn2XK0dI1ygy9hrstjfMoLa12jKD
fqbDjaLPdB3bd1PT6vbxSb0Ubb9535sR+aYhXtpZaptmbi28jv1Ku5paO8fj
s9I7lLknvXEfIx+RjcTmXGGO5xFi8cFL146/DYMFx3WkHsL6avdJlIcgHCey
tLZDgrmeW3a7ZoR0G2pq43KMo38y1SCe4XCn1XOcfKaL6hBl9YtOvVfdPj6p
n3Y0NQKiq4GYQyf52HTOrKvDa1kNVbS17R43b73aKZfPSv/TG+/8uDyel4jN
8dQxbViondrwt2EwKTq2I8Od6ElA+zKP2hpqP1DbViw+I/pEyEPwG7Wn1R4U
eX9L3WEXtXOFcz0JiRjeY7Dou942agsO4tkRI+8zXJU2lrVfJ9+tbh+f1E+R
fnOz53f4Ev0GHCKWh+DLed4IvjvVUEWbWeb659m3zDGK/EaQ/qF3+sPhi2Lx
HeEjcoraUu3Whs/kYNLqvnb/OSa9wbgnYDaxXHxnqD2g9rLa22rvqr3n//+f
2v3+75UiF66sOx6vdqzazF09DUJ6iDKaQLP9+4coVtqGal8Vm+8j/XYGJD95
+w95tIei46V23q0qyFtnPv39S9k2fPje++isEQ/k596P3ERsLpVkXY3he82q
p+hzW1Xbmdyvqraw7G8E6W06/ZudcnT40J6udq/a2WpfqKIWfCYHl6L9UTJc
GHfXp/J+D/IDPy+mnX3o9oH//Zbam77sU7UxameKLLK2FnC+2rZqE3f1dAjp
Mdrpt/Zn+xxWVNtSLH6a9EONSXvkfT7b1SWKvCOdem/yjB/5BvQ3ZfWH4Xn/
w7xq+/kYdSsZN98/+yoMz+tVH63aoLLPdKt9i5Rd5fmwve1vOv2bHTvqwmon
ivml/UPsG3DbR2cfYPAp066SQSe60/OpHaz2X7V3ZEhHg0/ai2q3ic0n31JM
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
6/9+ovah2JzRIzpZWUIIIYQQQggZMJDjexW1n7jNnlh/g9oHYvnjCCGE9A7I
L4e8nsv534eJ6Waf+r8NDe0jtffEdLS7xPzT8J0kmS+aEEIIIYQQQkh1nCrm
w7Z0l+tBCCFkfBD/+m8yFAP7LDEfNHwHwfzOh9XOV9tT7UtqM3WhjoQQQggh
hBAyXJlBLHfBRN2uCCGEkAmIx0ND7uYdxOaCLij0QyOEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghRILI5GrThG5XhBBCCCGEEEIIIYSQPiGIHKy2DzU1Qggh
hBBCCCGEEEKyCSJTqd2ptjs1NUIIIYQQQgghhBBCsgkiS6k9qrYZNTVCCCGE
EEIIIYT0O8FsIrVF1DZUW09tjl7WPbzOm6pt0sv1JEPofVpb7Sn/lxBCCCGE
EEIIIaRvcW1qZbUr1V5Ue1PtDdc+9nGtrefwel+mtmsv1o9MiN6nH6o9rfYl
3jNCCCGEEEIIIYT0M0FkC7Vn1N5We8nn5j2n9q7a62o7uX7VU2h9ZlW7W22N
XqsbSUfv0//5s7US7xkhhBBCCCGEEEL6EdfJVnc97VW1c9SWVBuhNqPa1Wrv
qz3kseV7Cq3POmoPqM3da3Uj6eh9+rVraivwnhFCCCGEEEIIIaQfCSIzq93r
8z33a8zxjNkasXmgq/SaBqL1OUDt9l6dm0omRO/T711T+5za19Tm63adCCGE
EEIIIYQQQvLimtkJPtfz2LiWFttmdrWXfQ7oj3pJt/K6/l3t0l6qV78Ru++L
qR2pdpTnqahsrq9rnjOpzav2V7X/qS2hNmVGnUaqLa+2ptrSapPxXhNCCCGE
EEIIIaSbBJFl1J5UuwHaRpqGon9Pr/aCa2o79pKeoXWZVO0uteN6qV79ht93
+Iw9ofah2zWt9CvfZxK1edTmhGaWss0CwXJHXKj2oNqzas+rvaf2idqNwfJf
YK7xHHF9Tf8/tc8Rfcz9JN/1f+9T2zLuT0kIIYQQQgghhBBSN65DzKf2RbVT
XVNbtZk+4boI4qwhd8EmvaRhaF0WVXtcbbey9Yr5Qy2udrDaEfCLyrnP3K4z
HqT2A7Vp+03n8frOECwm3cdqY9U+VXsLy5vsM4VrZY05w/A5O9u1sdXU1g2W
i/UFf27ec03sDdfV3vC/d1ebNaX82dSuV/tAbYzbJ7F/3/L7NKKfrjUhhBBC
CCGEEEL6l2Dz7+AfhLyeyEtwcgs9DbaB6yKvumbSM3jdnlZbq01NbRO/FtB+
3neNaMO06+LLJlbb2/XIN13jQW7U213nS24Pf7pZ/d/KNbeYxod6wd9rqoL7
HuP61UfBfNSC61dzp2w/s+tl77gG95H/i7+fC0Ox997x/0Pz/IdfrzX8Olzh
2y6QUj78Ja/1csd4fZ52je0xr+cnXvYWdVxPQgghhBBCCCGEkCTBci2+ovaa
2n/VFm6mSbhe8SfXmR4OPRTLyut2iOtai5Spl5exsus70Gpedm3sQz/f6VI0
NfhGHejXD9tepXa42j2urUH7mTymc63iGubTvu3iLbQ6XN9t1C52Heo7rpNl
nQPsC2rXuTaI+ZE/UdtcbbaMfZfw84Yu9pKfFzQ1+KuNSmyP2GZX+vMAzQvz
OM8LNq8T1+9TN2hqFwXTJSfQ94LNNX42Wb6vO9ivP/Q0+LL93o/bmGt6kC9H
fW8JzE1BCCGEEEIIIYSQDhBE1gnmcwY96KRWfj7B5jLCNwj+Wyf0kk+Q1+Uy
176mLFqvYPM291K72/Ug6Goruqb1jtsPw/j7wH7k1w/a06/CUFyv2fxa4bpu
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
Y4kWx1vbNRtoNzc16Vuf6OeCawHfrTfd1m51TXzdP70+f0mMOX/pZb7jdf6Z
60vv+XXaOaVv2YiNhn2+6MsQBw0+au/7+WMZfPXu9HLgX7ifX0f4oE2aUs8t
YsfdJZhv2bnBfNc+dnsgtv3OXh7uz4yx5bj313tZ77v9IeN+/8Kfv6MTyy8M
Q3M/r/Drgzm6U8WfRfazCWmf5DvVyvLuS0iv0+q5HeTnuug7XsfxsrZL24+Q
Kujks08IIWTwCRZbH/oMtKLPuCby3WB+W9BMkP8xl54mQ9vATwl6E/QizCtt
aHX7+bFuztBYYHsE0+CgzSCv46JeN/z/R4ntUf7rXjbijzXi4wf/95KM40Ev
+8C1mz83GTNC0/nIr8vTYUirmjLHuZzr5/GvRD+xUSau/WzB5jE2tDtcv+US
/Xuc/0NeT1ybeX35hb4PfMYW9rL39vuHa4J5q7v4/x9sUs+DvQxoizsGm6uL
+G9v+LnC7o5tv6WXB7+xOWLntKrXDeVAb4OmdnjGNTrCj/OLxPIDvU7Q885v
UQQhpE2ajS2aLc/aN+u3gpCqafYcZj2LzbYd5Ge61bWq+jyLHCer/SGkCjr1
7BNCCBke6O/HDGHIDwxa2K2ulUBDgXa0YcF+KeYdPulaCDSnhWL7wxcLWtFV
zcry7RAb7FXXY+ArN5svnyOYH9nCiX1+49u+GtOGPg1DuSrXaHE8+Lg94Pug
jKOT2wbTsv4TTP+61cvE9hPMzWxyPigTmto9sWsxUzCfO5R5g287Ophm+JHf
j3F6Xeza4hyhqUHbm9ivyfNen3/5dot62R/49YPP2k+C+bLd2qSef/XjQpf7
e7D8BP8IQ75ouDa3xLZfweuCa7G+L0N9rvRzhd/gfb7/ARn3GzlGoYlunVj3
BX9exni9xj1LhJBqCQlrtjzt/Uvbhu8p6TTNnsOcv9PU1KT688w6TpH2ZJCu
P+kenXr2CSGEDA/892O9MBSzCtbQoqDbwHcIuhjyZi6fs196vOsv0G++G99H
/93LdZ47XX9J23+RYHoSNKKn/O/GOvhAIe7YiNg+0Lvu8O0xT/GhMOSjhvOC
BjdRC00H5TfmpELXOTSlXvO6pvOhX4uPffv/y/P7q9vsEEynRIz/Kf1c4AvW
mB+5s28H7Qn6GLSt2xLXDraVb4/jX+TLoYO+64b1U6hd4/WDD9mXfd+N/H5e
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
sOg+adt0qv9a5jzrHBe3c7/qOH6zY+StQ5lnq91nNe+5DSq8RhOi5zJ78Jjd
weZ7flnt6GA5725Uu0/tWyn7QXO7VO0nweZKYXw9c9nnkxDSXYL5kmGuJuZ0
LhJ7P6GlbRQslwDWIYbavfFt+p0wpKnBTw35ReGvN1k3zi3YNw7kJkC+z690
+/r6PYbvHLS0j/13gRBCCOlZ2hnzZZXVqfqFFtuWLa+d69HpuuWtR9n7Uncf
tp3zrHOMXPT4VdalzDNfRXnNti9aprTYL2/5/U7V7++goee0RLBcc/BTuSpY
roKN1f6htkaTfbYJFs/7YrU/FXk+CSG9QzCfVPhlITdJI+8n8l8eHYZ81z7w
f6GlzzVI77Kex6F+fq+6XdOlesBODOajBp+webt9jb1Oe/r1ge64f7frRAgh
hGRRlS6QtX+74/qyVnWZZa5DnnKKHLPoeLzsfe3EmLSd615n/ep6Puo6dpny
8m5btI5ScL9BpN37NqjXyM8HPih3qV0eLN74RL58WrXzQ0qOgtj+nw02B3Td
QbouhAwn9N39tdrdwWLQQ895I5hPGuZ4fuD/R05QxFKbdADbwf39XN/1cz2q
S/WA3er3AHHLJq7rOmu50+esD+43dFX4qL0WUmLtEUIIIYNKszFgWW0ga7xe
RXnt1K/IdchTTt5jFS0j7/ZF1lVJO9c9Tx3Lll/0uajyWlV93DLXs91yk/tW
fR96laruW7+cbxH8XOCPgnlciJs2Mn5++u8mweIntdof+fJuDjY/rMhxB+Y6
EtLvBPNDQq5L6Gef+r/Q1RBfDFo7YiVONajvrp7PDsE0tU+CaWrf71I9YK+o
hWAx3Wq71rifOeuD3ASY7wu/uWsH8f4TQgghzWg1ti4zxiyrAZQpr916tCor
q/wix6nieuQd13eqL1t3Hasqv51yilLmPcpbXtGyq6Du699LVFXnXj7HsgSL
L35tsHlP4+Xu0/9PofZntRVaPA/wX/i32ujhfB0J6XeCxQ7bQO03weZ7Q2Na
UW3G4fCuBstjDB81xDF7U22xLtUDvsHQM6Gp3VrntQ8WP2+KFusbvxGPBdMa
4Tf3neHwPBBCCCFZlNUjssZCRcoseqxWekNV59tqvzzltnPsrHPp5Bi07nq2
cz2quJZlqPvZz1t/XT5lsH7wiJLngXHTl9L2z6pHt659u1RV514+x7IEGzf/
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
H2pbSut5Mr8S06Z/nnE8zIVe3stD4w4foDv9uHjvoGtDm3vZl8G3aBsxrQ11
5XzSPqDoeKBomSlA/0XelyfF/I1bsYnYM35OxnbQ3OB3eWPOKnacvOOwKsZf
adv3yziujuvRa/Tz+Xg94T+GXJ7wO9s3WK6CqcrUP9jvRdpyxGe73jWTufrh
2pShjue8H54nr9+kwfJPYK7vfWqPBNPF4AN5stpvg+Wy2FhtDbXPuQ4GfWLO
YHoY4u9N4dpFy7ygyetRxfXNumeD2H6R/PhzeZTa3cH03Ol53/ufmC/ZbGpb
jzZ+p/Yttcla+Znp8inUfq/2qtrHbp+44f9vq53b8FsjpAK+K6YVID/bGWpz
p2yDeWt3i425Vi9xjEvFNLXNStaRkE4Avxv4lCHWVMNPEzEAoSnDNwc6F3x+
oKk95+v+rfbZJuWN9nIaOQ+hfWEeNeKq/VJMu0Y8q5fE8hdgnijivn8Ss499
+Tt+TOTFXV+Y07nvyOrnZ40BsvSbFPA9BG32LjmriDhpeNaXarHNumK/FWfm
LLOjdHpMlXdc10vkHaf28jmI+czDd3dLtcPVLhCb03yT2pVqf1DbWGLxxnr8
fGq/J7r9zIm/MR8Uc/3gq/S82i979dq0Q13XtReep6xj+/ovBpuDCb8y+JBB
O1tObWRW+5V2rGa/P8lyitQzo/6ZOlrWtoP2TJMJ8fsMXQ0+vdCMb/L2jfe/
T3G9bHK1fdSeVHtL7V2319X+6Vpbqq6my5ZTe0jtHbWP1N73Ml51e03tabVF
qKmRClhQLI4OxvT7SWt/l1XE5g9dVOI414hpCxuU2JeQTjCdmP8XdDTkpYWv
GMZr0JMxLovHYG+M536v9pSY3rxgSpnQNJCb4wax8R58zPAeIPftR2KaGfKB
jo1ZQ0fDfngv7/ByMG9njmpOlXSDrH5+1hgga0yTYKTadWK+lnn9GDGfDJpa
K7/K7cXekUMTyxGXCfOjFxKbI4146ll5CyqnjjFVkTF4r4/pyugLeZ7VDp03
4vchp+yfxOYe4ztdvC2Nf4PAcrS1aHcXaFXnXqHMdW9VVpPlk8f+v63a+2qf
qL2o9tNgfkgDQxXPet6yu0HW8YP5OF6u9nO1uYs8X3mPk1Zezt+oTLLuUYvz
7on7QzpL7H6vF4b8Mb/NZ6A/GT169Ej3I3vTdbRn1K5Ru1XtDbX31C5z3S1t
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
W4+nEl93TK1tx5teEo5sWz/iNvzSTilzzClt4tSoJYM+D0+YhENDZ8a6E+tK
72s7/hqJbpQ1fuYaiZcmtXrwUkr6JHJhDnIj5nsWzTvoSEgLdZ44s89UZ+CZ
EM/q/4/kkXZ9iKnL8WXSsj0WYq3I/9SPlC7wuhD/CjFT5ChHAFoFPIGLeP1u
rP0Oq/O16DOvcpn7b0REhwCNGjU773fF7kMrOVtfKuLRzriI386MdV9dRET/
gJ5sbmd+f8yFyNnsCR/betBMPq3S+cs9V+0cXQru+cwFGfcz6MqbCyZgjkG9
2b9WOSd59ujq39X/Axbe/ObRiYxfYR+Cmgdj+RH9s5bxlgd4che3r2aDtTU4
M7g0ODXmveRaoFk7wJm2d3lna2VwxdSrLZLv0XZ406bN7y1ncxFveXgV+6ic
fmySMufe15sX4EDma7m3buZMT4aXCL43jC/x3N2yhvMwFoWnbUtfp++b7/Nd
b/Vg8TrDX4+6ry+KN8vWGEj0XxyzcRVODR+zl7xqzIrXHR5ijTo4NdYIXhD/
l2ybTNzf6WWOuSDEp970m60Ccw3mDokujfUmvmO4s0T3v6Azjgw9bEJY4Ouc
1GNn7n6rM94NjRr90s9zXiv3N9otEF8zToi9QzwtrdkH8k17TfUINg9RMe9e
55m22/ifTvImkzZwY33mx4YYv1OurYOAtoY1EDxMyrVJ+nR4NDgBar0VyYcr
h9mr7xIR0RbgkTLcFRsTk8N5ravu+5MAvyr0F0W0bxEREV2OarzZAOHU1nK2
zv73gvuSw1LNG4j9PnGm+x2nX1fXRVA7gENbQRoONEZPaQ4Jf0E+39qZY+BK
0IE8pH3QIi3lra7e3d78uUfyDh8gYLzLvHWVEPO4ke/NaG+o9U37Zc6LDu3c
Auft6jlsf9YTtN8i4l5Or/G4utcvOhDwIqwNMGdCizS3tuGXc6qzfu63NZwP
PfmgBl9jVeh7mMNbvYBX1Xekv6NLxVdtljkODeMjOm7qKpzaEiFe9sZP8xgf
PnRwU9TBqS3kTT+3nx9xGzq188scc704tf1b1Obgwpg7fK64JcQsZfa9wRnn
luTG7uD67nlo0cg3IMcMHXg9uQZdBXizEHOGWCLEQsoDza1b0O1Ic2nl3l8r
+8rw+lOEOEV82gadxPV1IPC7ZM0X3izRjDK+wDOR3/CdztZXyOseSeMbEdEj
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
eWKIo0qmI9u9ZBo16gLAM6Lhg8ebLsS4pYymLOJ/3MGyzn6rzK3GVPQMnzDA
uDS0+XisDNe9i1phc/fqe+4hjKKA22asyu9vDNcCzc9A+G2Ug97rz0NM3+Pv
mXY0yJm3MjkGjOWZG8CVMXZj7sjaajJ3/CbEt4rvCkay/zc6z6c6N+u10zX/
LXY3BtLvLsKQ6m9Z79rLm6cQc9hLQmwYYprUvmjUqO3519S28cSJ4c+N79E+
mltuWuE1fyNe7nTNjefx5mF0ew+0P3iHV1wFTjFgRWe5doB1NLSU6ETot34M
8b2z/oy/P+gvQd8Gn4Z+hL6Tz7hrx8lFOLVWvFYXghqMRb2H0B296Ex7lMXh
zvIDaX+sTx3kbG2X2llt03rre5lafQSa1y2y35U3Xp4+554a+DTibG/c/bT1
fve6HvI8d/fm6QbfSw4yOaM7ZfadXttZP1imzpesFUkfdEmBfa92Nu7iL+uZ
SX9/nzN+ldqC9DNXOat78IH2/1x/P3Lmu4Z2shWe7P1GyTRWO5QsVxAe7OsU
d5bmzBLe7BtxQeybeNA/LB4ILdZO4sbw8ZqiZF5hhTRiZa4PjmhW8Uj9fa8j
vWZ4PE6IQSGWKZnv29El05I9EOI58WRvigtL+DEevyoeDe/+B0uWQ4nf2D9D
nCzubbeScYfkUi5VsjzOX4lb+0JcHDzZbP16YxHVkNQS516BTzv5PPX6rXMv
GNN1QP5Pq8YL7YbeD2PjXbz5EKBNu9+bF8IovfieOxxZbozfA2tM4yj4bcFf
k2dKrhzrTIyj6OfmdeZLCs/NGhT5KHO4JtU/GAi/j3LwVrPsOG/5Dav22Hsm
T4T2g/YCXyHGY4zbGYvBmeXxZQkfxvNfal+8duHbWEOnJt5wZ+vu+M0zH3jQ
WZ7f0BA3O/OWZ/zHGI+1VmpBkudB7bMJm/h+ux4D5XcXMSK81RW4XHNY1sNm
y5nD0leRf/dAiClCzCgu7VHd7+/2tjawofix3+W8zsT6y1hhYW8eWTzGG+vt
ENv0QPvj3ouuZ6kK+ywf4kRn9+Shzvq+HxV8BPBnyboAGhLmx3fpGPzaps2e
MKIyBvA4A84WL8m8PGTGhvj9oXW8uZUXVQne9F9owcj5vCbpJzL7zKJ+5pYa
ODX4f7wgb+zPd6/rOchbnWQ819BS7qw+bP3MvmgsP/Gm3x2nzpesB4e66nVc
GfdT14cxFvWtk1wx2gVaRTgzeDXGYckaJ3/h9T/SsYzD0NQy7mKddJZGvolm
oFQqTV6yPMHPSiPmZqI1+0T8ET72eHWdKp5o9RDzhpg0q4uqlTMrcH1JTFPw
fBW1bLreXaQHw/vtefFmSd3Kt8SXsZ0czWtDnCbuayvxhfib4TU2ca3vX9uX
FWeHX9zHes17QhwZ4hchYn3ZxoN2wTy/3lyNBHw3+Ou0bf1uIN2/vflZbOVt
ffstcWp76f4VUT/gw/CNYvw8szOua1FnuWyL6S95omjylwvxC2drjCumYgU9
t0xqn5VDrO5szrOOszE6em804Gi58XrZRcH2pt0jBwrnnIXeH+ua5FZd5M2/
oxfeM2sj5G3e7UxLwZgs4c+yvBmcGfNFcjXh2/7jjP/CvwXfoCHO2jBrroND
TOJsDtpfj4Cu1XU0Gz3Q/iJqhPqdw3Xf/lVe/+tNw0Y/hZ/VSq7vGPyDntb/
CV8G1/aQuLd9vflzz61550htzFs+6TCNHwr7InU5uA/jAc49Hs8+5qjp/hFv
qwOdeVjRp3a7x1zb0eNjDe6J+ImSD4r2jLbFfRRfNDTa3Ivh1hhP5unb4FM6
otasvg/4qffUt8xQpt+YWZzav8t9fzPu/sPMmWNW86Zt27k/33mq3Yya+v8k
zX+WzuwLJ4hX5Jn9eMl6kVdbOA30xvD2tI8k555jWJNEHwvHn3D7rGtSFwPe
bIgz3SPtKcvnTOM6HKVSaYyS6dTuE8d0UYgDpK3CI3/cZnJmrUbJPPefFF+I
xuyuEJeVrMbCjtKRzZq87yyq9Z3V+tLUZzeONGxDxalxPWj/PiyZj9rD0rzt
Kx5vdh0zwmdf6bvp9u+qQ4Hve6258gl/AW8/2BmPMEnq+WztprLo8Xv3TxBn
tqXGzm9pHYa6PVP14vttEpjfow1Dn7mPs/vuv53pb4Y7WyPC54C6PIkW5xbt
w7oi9z48L9B4X+qsbuileny2s7EVft3HKFjnZqz1N/3PmAvPqQNCbOOMa2M9
c+LmveWB8fvIg94j/hvUZ79bv58xuvy9M6ZCj0abREsGV5bwZgl3luQHwJsx
h4QzQ/+IV8fkrgv9gCIiegHqe672ppUdgdPSc+QukQeKhm2L1HN4PKA1myjn
nPBqf/BW07OsNtSbjxuaEXKjNujyfrAW4KeWeJnT/23qbG0LL3l0H23Pseg1
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
o8XPXgSdFS0O7Dz/+3ho6Rrr5dzG3MtzY53Yu2ixZMzpZF/OV6Dnff2rQvtE
q8XGdbzlftmsVdYxb7T80jHR6rUNbubzxnKTQvu6J/dTzcFCJMfr+S8BrQmt
DS0+kBuZR/j9LotB++9j+DkNdL3Ho03sj/3Y+3peDc2m2LT+ogCeWu5p1U9r
R0KI/iBn33vmLLHOJa8V693nYF9Q9vrktd7yVZ5fIFje581pD7AeOdqPTeNj
XzRa7TTWHZq4ne3xa8g5oW9G1R4Q4r+kMEew5j7nvktC/f7tzHln7xbeVxiv
/2QFzF/kvPs36Ahoe2hDaFV/v+nDWN+uI3X0y45Lk8Uq7xnH1jShJij3rGrt
X39u4mo+XZVl54M2jtbzYA1oA+jFaPmen7iYM8q+CEMqXsseCexBwB4JWzca
V5UxzgHd6+/BXqQlzZ9C1Ma9pQndc6Lf9Ar0IfSx/3wTugdaPU8e1MC8UMVP
mxy63GPUmOc5AbSf1047AZpEflp/0cj7EclJ2zOTlyaEyOH3n9durAvEfp2s
c7lUGPd6inn5zM9/FnoreE3pKizvz5+R2UirkKP92BQ+7g2j1Rj6ebVr2CbX
951odYhe9evQXYq4X4RIk5TmWvalZ177wgmW3Rx6PVjvrXos7csd2N7Q0qVs
f3W1Hov7euxtcFy0GF7Gxh0Ofa/Sn3Pv7RnoqWg9SSvj7ijmhO4KXQbdA10c
PbYOP2eIlrv6hft3zFWdSvOnENVxb4k5kje5h/YV9CX0KfQW9Bh0JrQJNF/e
fSiMb1LoYuhBaGFoSuhP0BPQrtBg+Wn9R41jSSGvOSpgLQvWn5gVWgRaBdoE
2g06DDoZOjdYfQvGyvPa8IZg9SjOCha3v3poou6r/DMhRNrkdD74VrD4sreD
xaHRY+PcyVprjLlg/Blzmv4v1O5z9wNfbvesB1tODvdlQzDeodAe0WqnrdrO
NkTrb3cA9Hq0+IrHoKvcpxOib0nx/Iv9A3gxlaROJOtKDvQuqHe+SX+Oc+2x
7Q0tfYp03orx/Rr6e7R+B4vVuAbivYtn3S/7yPWZ+3CzRMv1pJ/GnqJ7FmXb
hWiXslitqaF53Scb0sg/8hgu5kh+7noZ+rP3ypytvH5/Hryoet9l5nhCF3g8
2mrQQtAt0P38u2y5DoxU5IkCemqM3+b5yvzBfLItof2gE6G/QHcGu6YbqOHK
OhOsN8HaE6xB8SX0D+jrKuLjX/kyXP5d6K6QsCedvDQhRJrkfF5gzWfGo7Fv
DPOXXgwWm8FenpyPF2jw+vWC9SdYKcMxViWH+7ImGOuU0BnR+tHN1aafxlgO
9sn7AHo7Wr7SxDn+HxOiI3R5ruXFF3vcr1BnGc6n9NRO6MiImiTvc0i03FP2
NGBtNdZrm63GcsOi9UN4LVoc76+gH0Sr20aPjbXgPnFPjf1I1WtZ9DxleZs/
c//oJeh198b+WrJ+l4Nq+Uh4fHroWegj6Ax6ch3ehMTU+z5j3MOgs6Hn3Q/c
CHoYuhaa25cZ7J7jAtBK0IYef8ec1zmgkVBH+nKJzlL5f5OjY8MU0JLQ1tDR
wa7beK3G6zbmC30Yxvpk9MFq+WQDXlm5X8bXsLYr62yzPsUHwfyzgdgK9ql7
LFj9WMauJerLJH9MCJEmBZpHmPfDOXtkSJ6TuFyw2kBTZDWoWhRgf/4XjHOB
aLlHJ7sfVnfsZf8vk0Srn/2/5fFz2mg1w3k9+Ca0bdbjF6II5OCcba1geZ27
1VmGfZNz66mRvB6v/L7BadF6GVwa6xxzfPwLQstFP5ZFq53GumyMVxsDfeU/
p83j9gqRJmVxaZdBb7uX9oDXRGP9sze8FtqetWLMPE7tIuhJaLwevHmh0RyG
se8GvQYdBB0BvQBdAe0FnQbd4dtIz3E09LT7bb+EZlLsWu9S+X/T5ePhVMHq
rZ4OPRzs/IJ+F/sc0Qcb8M0q/TE+T2+NsWis70O/jX3Ln4LuDZbX+SfoKGgv
aJtgtV5Zy4d1XeeBZg9WI2jSUFHHtBlycF4mhOgR+mAumSbYXNxx8r5ffXxr
eZzETh5j0Wh5xkusFy0/lPXRWHv7T9Hi3Kg7oU+j9cHbvEObIkSuycl525zB
eoQeU2eZxYOdF/++EwNqhZzsy3HAOCaPFuPLupHsVVCvr07V8UeL5/08Wq78
Zx6jdnCmAxciJ5RKpRHQDdA70K3QshW5muwp8PeS9RxYrk6s2tElq5vWsP9I
Nyj/3tfZhpOgD6DPoK9LVhvuvZL1WPjQ99GLvr9+Cy1YUm21vqRLx0LGKrCu
2egw1kP7wn8ylozxaPTJGD/G2LHboAuDnVewVs9mEPOX2WNu1mD3n7ryfc3b
uYQQorhoPsmOPO/XaL3xdoyWn7R2krG6n3aIx58xP+kNj6tgvR/W6r7WrwWZ
87ljJ7ZDiLyTIw+I9xeYg3FSjecZL7VpsHPke6DzoOuC1bS8yl/H50dmPtIG
5GR//heMYWa/x8B8z8NiC9cG0XqLvuGe2useo8Z5dsYEr6WGeNzb5tD20Lx5
2T9CNMK9IMZjsY8Aa/JPUln3zPUL95MurROrdgz0OPMnu7Apdan00+p4amt4
nN5nnvfKngR3law/AT205aGO516I/NGFef43wWLZGWPGcwV6Z6zLw7poBwTr
ncT+AjzfaDl+rJPk6XxCCFFMNIdkS173b7SczWOhq3ntlfA11C89/oy5Tfvw
ei9avzvGVXzk14OMUctdfXMhukWOztd4jstalEfXeH6ZYHFs/wmWp1Gen/Ge
P8daJcwLZW/KrvXgzINP6e9NH+tv0Oho/Tub6pPs65gaesDj0l73+fUf0Xqa
NXrtcGg76P5otSs/8jmY/REWy8H/nBAN8TporB12v9cBG89v8seGewzaGGjm
Gp7aUSWr6183VrTTJJmrPNZsR/cE6RvO5o+N11tBMWmiS8fAHaAbg53n0z9j
nFlTx7280e1zCSFE8dEcki153L/R+g9cEC0/aaqk44tWN+0xv3Zco+wYNKtf
x/3bYyvu4nVehpsgRGHIg/dTBuuP/B3ao8bz9MlY0+Rf/vMm6JRg96XXCNZH
q9xH62qcRDf3q7/v8tDj0POxiTz3iv+JpaGH3U/jPHpQtPxRzqXHVXntBD7n
zhatztq5fk+D9SvfcG+OMcSMF/5tDv7nhGhIyerrM6dz8wbxW9Sp0LvQ+jU8
tVFeX2yekvU0OMpj3671n4dBq3YyN7TRPOXbNbnXSqMfeDA0kXwzUY8cnVsU
Gu1HIUQ79NAcwnuRcwSLsVgX+lWwHs2sGfSHYPlLlwXLYboVujtYrMVDwWpq
Puq/s48Bc5zOhnYNVleorXOuPO1fH8vK0M0eYza0mbFh2bmj1U/7bcXjP4H+
Bf3H4yQWSnfkQhSTLvppg6Epg/WcpI82UzD/i/2TX4HWrPE63mvmfMle9otl
PsoU6Mb+9ffbxL20J2KTPaX99QszDi1anvyX7omxv8Ew99joqbEH6JX+OO+B
XAKdDa3q62FPhJOgB6H9ouWg0ud7z/25jfJy/BGiHl5b/7lasWdly1HbeW2x
A6rEsk0JXQ997nmkn0CflqwPKHscPFKyfpq/gVZg/FeW21U+P9XJVaWWgG6D
HoTWURyaSEKerjGKTA9dDwshukAB5xD2cJof2gI6PlgMxdPB6mmzHibrYlbr
z/zPBqrWt5n5Tu8E89nYb2ZwKwPOy/6NVjttB/fTNmxlXFh+RLR6actXPH6/
+2n/8us7IUTo+Pefdbd+GawO8H3B+tezdxbrAa8SrD8X692z3/y0ddZze7BY
tqkyHGtqdPo4Fq2m5G7QS9FyPhduYR3Ume6nMT6NddNYp3JCf55e2JhodSrp
jTHf/hH3zSarWNekPjfz929BT0fLwafXN1LzsSgC7ik95LmOjZZd1WuqnVq+
LH6fDroZ+gf0nzJf7U5o75LV8Z+wU7mT1fy0Kh7gQK4n81mvhObKbECi58jL
NUbRKeD1sBAiRxRg/mAdbF4LHhbsOo+5SKyHyT7MX4dxPbPyvyt7Nn/h+sz1
SRhbW5Ne3AfBagWxzibrbo4J1quGdYdYd/MuaLfQoI9bNfKwjz2WgbXTroLm
b2dMeN1M0WoyDfy9rMdY/MfjLOZMZ9RCFJsOfvfZV/4M6NlgPbgYg8sLN3rf
Q8uW432B26DL66xrBPRcsHsJhaET+9rfY0LoyGj1zm7yuLBW17UkdEq0Xp/j
xfZyLoV+Bm0DfafMN6u2vuG+7Ivu0dGDS9R3Rog84PXCNmCcWYJll4Lehi6o
8NS+5bFerOv/hftoLZ+T1Pv+NPLkavlpA8v779NAp3uu56EDuZ5CJEVzfHpo
XwohWiHHnjzzlJh3yWu/N4J5YPTGyr0z+mX0yBiX9m6w60jmbzJujXlLrEHz
u2B9JzeH1oNWh74DLRUsrmA+iPcDeb41a7AYD57LTRQs33NwmQZyA8aJD0hC
N/exvzfr7lwEnRG9dlpa44mWO3oH9M9otdReyeH/kxBdoQPffd5zYK8Aev/0
wU6HVgi189WX8uU2rbPOBaBXoTPTG2b2ZH0883XT0zrP57kLocm7fQz192eP
hKegr6PFCjNG7YZosXQrRjumCdEzlEqlRaE3S977s+xx+nLfdK+NNf7b6jnY
qqdW/ro6ftrK0N0l68nwA+V6imbJ2XUcr482hv4I3Qk9GKx3+FnQ+mHc+3u5
JGf7UwhREHI2d0wSLJ+Ttc6Yb0m/bCB3c8A/Y0wZ6wDdG6xGGvMxeY1IL6xj
dWabpVv72N93Gb+2OsDjK1IdC9a1Z7Ra2Owxxx51zFNaPcW3EKKQdOB7z/PX
G4LF09JLmy3Ba04NlhM6aZ1lWG+N9zK2b3N8HSdjT2066DroZehEjwvr+vHT
x3C8z7//iWNz8Pn3lz4/3xKtr6gQPUGpVFrSPbULa9Qnu9DrkrX8Ho3OkWt5
YI2+ZyXrW8o6cE9Cf4ZmkZcmWiEn13G8/toWeipYvg/zfngdx5qsb0Pv+88r
oKm7NMZE5GR/CiEKRk7mjemC1fd5IVjM2YCPxnxNzsuco88N1reZuTGF6yXZ
jf3s78l8IdZO2zSL9/f4h9f9mo011Nhv7iv/yfiIyZtY18iKv1mje82BOBAh
ikYHvvfMiaf39fuEyzM298lgc2k9DgoW97tg60PrDr7PU6037uucD7o3Wn2z
vaLVU8vD8XNgfNv5PPxvj1X72j01zsfMx38GWiQP4xUiDUql0kqe+3lSDU/t
BuiuNDy1Gu8/np+W0INbGLraa6ftUF7bTYhmyYkHtE8Y650xLm13aMlgeUCM
e986WD0K+m1XhRzHq+VkfwohCkQO5g3mU24XrA7258FyOxmLxnn5DmgPaJ7Q
Yl+APNHp/ezxEwd7fNrSGcSmUbNHq4P9ib8Pc0C3j9bz8wt/fLTHdbD20LbR
avssBy3uWsTXM22siDOMlq/K+tq/07FNFI0OfedZ05Dnqaz3uEyDZZn7xxpq
14bG9yXY8/ivUFs5U52m7JiW2vm6r489NB+DXoC2ytv5to+HMcirQnv4nHlE
tBptB0FbxPr9KITIDe4vsabY6tBh0DnQRdCfoCNL1u9zOWgP6F3owBqe2t+8
3n9L42g2Ri02eI17Z+xD8Ch0HbS4cj1Fu+TgeMRrNNbaeRj6eah9zca4etal
5jXe5p0ZWvPk4NpYCFEwcjBvrBgsFoK10hiPxrz7vYLVUuspOrmfo+UnnQ2d
G712dgZ+2pTQPdHyPel7faPs/+nb0NXR6g2962Lc2t+hh6DzoR2hhSp9tIr3
Geae3a06tomi0cHvPGPJbgl2PrtZqB6jNSxYj2T6ZHMnWCe9t8PSGmAn8f1e
L6+12XWx9+bz0JPQGjrXFiIb3Fti/8tflKz356vQaPfGzoB2hlaEpvBljypZ
P8/vV1nXcM+rPKVdT63OWGt6ahX13aiZPcfzSfcAm+51JUQ1cnJMYp5JkpxO
1nplPuh1bb5fZrEWObg2FkIUjBzMGYwJZjwE6/t8OxQsJqIZOrWvo+UnXe1x
YRNn5KeNjFabh3ForCu0TLX3cd+NcWjMD10hWq/RSRrdy61YB2NDHtWxTRSN
Dv/Pshbl/tADwWoB8xpzGhd/vzRY7G+jWLYBOCfPlfooO4DPK23Xa8E6BkfL
8WSu5wPR8maFEBnhftrx0GveW2BfaB5/fDwfq2S9Pf8OTV9lXbP7c/tm6alV
LhsrnvPf1/UeBHe5J6i4NJEaObiWawbeR388WH/yVvvm8HqR9xEPSGtQ5chT
E0I0g+aMzpL1vvb1rxWtdhrr6qRe68fXx3i0O91Pew1aJ8v/JazzcZcQhaGL
cytz5Y8M1uflHtft0KGhudy/xVIfWYfwfc9c8pZrqkXLnT8OetXvH8yqOUiI
bCmVSj9yP+0aaJp6eZEe9/USa6bVWNe3PcbtJ5301Co8vxEeS8fYtJOhqeWn
ibQp4LUcY9TYa262Fl7LmHvmNLFe0F9THNP/0PWxEKIZNGd0liz3tftn27mf
tmaG/tbcHjP2WbS+BJtk8Dbl78fcz2c9RkSIwpCDuXXCYOerzKMf1t2hdB7s
+6lafN1/Xwtd6vcMLozeI0VzkBDZ4vXSXoa+Vc978ud2gt6Atq6xzJbuuS3a
iodV7xy5mtdX+Rh+Lug10x7mGKFB8tNEFuT4+MT7Wt+AloM2DFabYs1gcfPs
rbRAxfK8J9jo2M3c0Y+D9bJrN3+0Kro+FkI0g+aMzpKhzzUCOgq6knmWGbxF
+XvtDH0MvQitkvX/jl/bjnavUIjCoLm1u2DfT9Hi6+aNVieSftoJ0WpTqra/
EB2gVCqdDr0CzV3Pe/Jaaayx9gg0WY1lDoGe4vPteGo11t3IT/se9CB0PTR/
vXg7Idolh+cbMwTrA/o36LVgvUA/DFY3+51gntgnwby2AZgTenOwGhb1GBXM
T/saOirNQQ+g62MhRDNozugsWexrv9471zVtBzwuvseP/X0z/9/B+mdzT+00
/Z+KIqG5tbtE6y+WdFnG+U7qMb5PRasRuSc0dbR77EKIDlAqldbxOLWzoSE1
cj6pPaEx0LZ11sXeBLe26mU18tMq6qWV/72t14KjPzipvDSRNTk632Bc2lbQ
88F8s4+CxaM9HazfJ+PTToKe88crj6/3BeuPNLCuDaBdw7h9vFkX9p/QF9CP
s9gIXR8LIZpB80Vnqbe/W/kssPxiHpt2eMygF0EewPbMEa3f3na9tm2id9H5
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
E5c91u3hCZEq/w9JnWmT
     "], {{0, 417.69778777652795`}, {927.634045744282, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96.012, 96.012},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{549.634045744282, Automatic},
   ImageSizeRaw->{927.634045744282, 417.69778777652795`},
   PlotRange->{{0, 927.634045744282}, {0, 417.69778777652795`}}]], "Input",
  ExpressionUUID->"6034fa79-3517-4904-8120-aa27c19deb47"],
 "\t"
}], "Text",
 CellChangeTimes->{3.8814139529321537`*^9, 
  3.881435225292981*^9},ExpressionUUID->"2ab2ccf6-941d-4d9f-b7e8-\
19fecbb69be6"],

Cell[TextData[{
 "The previous equations generalize to tensor equations as follows:\n\n\t\
Forward evaluation\t\tJacobian\t\t\tBackpropagate to obtain gradient\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        UnderscriptBox[
         StyleBox["Y",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "-", 
        UnderscriptBox[
         StyleBox["y",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"]}], ")"}], "\[Transpose]"}], 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"abfe93ca-d05d-4f4e-b7c0-add270280c17"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}]], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"ed3b2039-7dd9-4d29-b96e-14fe696b7ed1"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}]], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}], "1"}]}], TraditionalForm]],
  ExpressionUUID->"9cd3f01d-3eea-42e6-bae3-c47bb4a706ae"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     StyleBox["Y",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "=", 
    RowBox[{"tanh", " ", 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "850f912f-c598-4c17-8180-39109a102bf3"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", 
    RowBox[{
     SuperscriptBox["sech", "2"], 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "bc4c25cf-0e29-46b6-86da-472aa10074ec"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], "\[Star]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "9a11d52c-a978-485c-9cd9-fab8c2f6a48a"],
 "\t\t(elementwise multiplication)\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["u",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "3"], "=", " ", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "2"], 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "23"]}]}], TraditionalForm]],
  ExpressionUUID->"cc1748c6-8605-4878-9d3c-ec6fb79c4597"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      UnderscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "_"], "23"]}], TraditionalForm]],
  ExpressionUUID->"8f4e78c0-dedc-48bd-b2f6-55ef80f53006"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "23"], "\[CenterDot]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["u",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "3"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"2624844c-ec2b-4e94-a382-51b7cfcf042d"],
 "\t\t\t(inner product)\n\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "2"]}], TraditionalForm]],ExpressionUUID->
  "bb4f7d73-95c6-40eb-b583-f15bec733444"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}]], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"], "(", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox[
         UnderscriptBox[
          StyleBox["u",
           FontWeight->"Bold",
           FontSlant->"Plain"], "_"], "3"]}]], ")"}], 
     StyleBox["T",
      FontSlant->"Plain"]]}], TraditionalForm]],ExpressionUUID->
  "cd7c9ebc-e8a3-4586-8c11-94f9b402e0fb"],
 "\t\t\t(outer product)\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "2"], "=", 
    RowBox[{"tanh", " ", 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "b683cc49-898c-40a6-a1b7-a0dc3e4a5451"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    RowBox[{
     SuperscriptBox["sech", "2"], 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "2"]}]}], TraditionalForm]],ExpressionUUID->
  "f8f96032-87ab-4722-bbbd-a88fc4971148"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}], "\[Star]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["x",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "2"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"f9d672f2-53fe-4746-a108-053f45ca1fdc"],
 "\t\t(elementwise multiplication)\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["u",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "2"], "=", " ", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "1"], 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "12"]}]}], TraditionalForm]],
  ExpressionUUID->"c584dc54-84b0-4c65-959d-ea204eb96732"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      UnderscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "_"], "12"]}], TraditionalForm]],
  ExpressionUUID->"7154b50c-b6e7-41b8-b214-8d0972ee036b"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}]], "=", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "12"], "\[CenterDot]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["u",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "2"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"b8c8d4b7-c82c-4e71-bd76-dc6320ad46e1"],
 "\n\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "12"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "1"]}], TraditionalForm]],ExpressionUUID->
  "5627f1ab-9188-4c7e-b7d2-c82440a230c0"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "12"]}]], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"], "(", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox[
         UnderscriptBox[
          StyleBox["u",
           FontWeight->"Bold",
           FontSlant->"Plain"], "_"], "2"]}]], ")"}], 
     StyleBox["T",
      FontSlant->"Plain"]]}], TraditionalForm]],ExpressionUUID->
  "31c4dd38-b85c-4c95-aa8e-b3a0fb0ccbb6"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "1"], "=", 
    RowBox[{"tanh", " ", 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "1"]}]}], TraditionalForm]],ExpressionUUID->
  "52406854-ce83-4275-8bf3-07f0cc36bfcc"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}]], "=", 
    RowBox[{
     SuperscriptBox["sech", "1"], 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "1"]}]}], TraditionalForm]],ExpressionUUID->
  "d1bd66a7-682d-42f8-88ba-f3149b33ca92"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "1"], 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}], "\[Star]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["x",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "1"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"45e91b2c-1d1a-4f47-bf35-ddd192fa2b87"],
 "\t\t(elementwise multiplication)\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["u",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "1"], "=", " ", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "0"], 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "01"]}]}], TraditionalForm]],
  ExpressionUUID->"f3260a12-5546-45e8-84d0-92e8d4555850"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "0"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      UnderscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "_"], "01"]}], TraditionalForm]],
  ExpressionUUID->"39c567c4-6dd4-4521-ae02-327c46901a31"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "0"]}]], "=", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "01"], "\[CenterDot]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["u",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "1"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"0d36b061-724d-484f-a665-37bae7fff53b"],
 "\n\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "1"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "01"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "0"]}], TraditionalForm]],ExpressionUUID->
  "8697e6e7-b6c1-4f04-afc4-c24ef3995b26"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "01"]}]], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "0"], "(", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox[
         UnderscriptBox[
          StyleBox["u",
           FontWeight->"Bold",
           FontSlant->"Plain"], "_"], "1"]}]], ")"}], 
     StyleBox["T",
      FontSlant->"Plain"]]}], TraditionalForm]],ExpressionUUID->
  "59e8a933-4433-4e61-bda1-4ee48921acde"],
 ".\nThe most tricky part is knowing what type of multiplication to do \
(elementwise, inner, or outer).  To determine this I think you have to work \
in explicit index notation.  Anyway, you can see that the above equations are \
consistent with the size requirements.  For example, in the equation\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}]], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"], "(", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox[
         UnderscriptBox[
          StyleBox["u",
           FontWeight->"Bold",
           FontSlant->"Plain"], "_"], "3"]}]], ")"}], 
     StyleBox["T",
      FontSlant->"Plain"]]}], TraditionalForm]],ExpressionUUID->
  "e60ccb76-5994-4b17-b9df-fcdf2abe1b5b"],
 "\nthe LHS is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["N", "2"], "\[Times]", 
    SubscriptBox["N", "3"]}], TraditionalForm]],ExpressionUUID->
  "4118b29b-4c0e-42bb-b8d4-90aa8c7f1538"],
 " matrix and the RHS is the outer product of a ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "4708b7cc-7dc9-4b8c-80a6-5da1e3bcf8ed"],
 "-vector and an ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "3"], TraditionalForm]],ExpressionUUID->
  "e5a5aa55-2df5-46b8-8a47-73089698c383"],
 "-vector.  This equation is shape-consistent."
}], "Text",
 CellChangeTimes->{{3.8814108143121233`*^9, 3.881411414912712*^9}, {
  3.881411517912261*^9, 3.881411564257752*^9}, {3.881411651147046*^9, 
  3.881411686118704*^9}, {3.881411725124538*^9, 3.881411906468422*^9}, {
  3.881413652312295*^9, 3.881413766568818*^9}, {3.8814138106813707`*^9, 
  3.8814138174317293`*^9}, {3.8814139057914658`*^9, 3.8814139617019*^9}, {
  3.8814141280564127`*^9, 3.881414218132372*^9}, {3.881414279371621*^9, 
  3.881414435855385*^9}, {3.8814145136277*^9, 3.881414522444971*^9}, {
  3.881414564330834*^9, 3.8814146106658707`*^9}, {3.881414663085581*^9, 
  3.88141469309147*^9}, {3.881414728841662*^9, 3.8814147479437113`*^9}, {
  3.8814353569563313`*^9, 
  3.88143543296898*^9}},ExpressionUUID->"d36c1962-c6d2-4dfb-a69f-\
b3497d3c488c"],

Cell[TextData[{
 "Ultimately, automatic differentiation and backpropagation allow us to \
calculate the gradient of the loss function with respect to each of the \
learnable parameters, i.e.,\n\t",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "01"]}]], TraditionalForm]],
  ExpressionUUID->"e156c1e7-35af-49cc-8593-d4bf826914ab"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "12"]}]], TraditionalForm]],
  ExpressionUUID->"25b59fff-c00d-4d22-838b-35ce9569ca5f"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "23"]}]], TraditionalForm]],
  ExpressionUUID->"9f9ad9bd-0e29-471d-b820-3d9f7c919ce2"],
 "."
}], "Text",
 CellChangeTimes->{{3.881414769486532*^9, 
  3.881414814183585*^9}},ExpressionUUID->"924eb50a-0377-4d29-85d9-\
cc94693fde8c"],

Cell["\<\
This allows us to apply gradient-based optimization techniques.\
\>", "Text",
 CellChangeTimes->{{3.8814148189318447`*^9, 
  3.881414841280608*^9}},ExpressionUUID->"f5dbd26f-c15f-4181-865a-\
de4a58442500"],

Cell["\<\
See NumpyNeuralNetworks.ipynb for an illustration of how the feedforward and \
backpropagation processes can be implemented in NumPy.\
\>", "Text",
 CellChangeTimes->{{3.881435319372505*^9, 3.881435331866007*^9}, {
  3.8814355619681673`*^9, 3.8814356052230873`*^9}, {3.881511511271793*^9, 
  3.881511533529985*^9}},ExpressionUUID->"8b73b4c7-0b1d-4724-8b45-\
436e47ba944c"],

Cell[TextData[{
 "\.08Here is an implementation of a 2-layer perceptron in pure NumPy:\n",
 StyleBox["\n  \t#======== Feedforward\n\tu1 = x0 @ w01\n\tx1 = np.tanh (u1)\n\
\tu2 = x1 @ w12\n\tx2 = np.tanh (u2)\n\tF = np.sum((x2-y)**2)\n  \t#======== \
Backpropagate\\n\[CloseCurlyDoubleQuote],\n  \tdFdx2  = 2*(x2-y)    \n  \t\
dFdu2  = sech2(u2) * dFdx2\n  \tdFdx1  = dFdu2 @ w12.T    \n  \tdFdw12 = x1.T \
@ dFdu2     \n  \tdFdu1  = sech2(u1) * dFdx1\n  \tdFdx0  = w01 @ dFdu1.T    \n\
  \tdFdw01 = x0.T @ dFdu1     \n  \t#======== Train\n  \tw01 -= tau * dFdw01\n\
  \tw12 -= tau * dFdw12", "Input"]
}], "Text",
 CellChangeTimes->{{3.881511770017542*^9, 3.881511847855612*^9}, {
  3.881511880927655*^9, 
  3.881511883716436*^9}},ExpressionUUID->"0895abd0-6ae3-4749-944d-\
d1cc6bef8aae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Biases"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783251423880968*^9, 3.783251424930087*^9}, {
   3.794075454927227*^9, 3.794075459494254*^9}, {3.797637005329781*^9, 
   3.7976370086115923`*^9}, {3.797865279551886*^9, 3.797865279683609*^9}, {
   3.797870056677476*^9, 3.7978700598985367`*^9}, {3.797871467777864*^9, 
   3.797871472852104*^9}, {3.797893226254278*^9, 3.7978932277778873`*^9}, {
   3.797893353557663*^9, 3.7978933562816563`*^9}, {3.7988076822719917`*^9, 
   3.798807687475935*^9}, {3.799423316383911*^9, 3.79942334736749*^9}, 
   3.799520053241275*^9, {3.7995217615222473`*^9, 3.799521767448908*^9}, {
   3.799528244343799*^9, 3.799528244599413*^9}, {3.799529859834388*^9, 
   3.79952986552422*^9}, {3.799529957196987*^9, 3.799529968924465*^9}, {
   3.799605900150002*^9, 3.799605900265793*^9}, {3.799666713119458*^9, 
   3.7996667147670803`*^9}, {3.800631558654924*^9, 3.800631568496448*^9}, {
   3.802534794321082*^9, 3.802534794432829*^9}, {3.802534905919509*^9, 
   3.802534907233739*^9}, {3.802537846702497*^9, 3.802537854800519*^9}, {
   3.802612298760582*^9, 3.802612299878598*^9}, {3.802629524088316*^9, 
   3.8026295296489973`*^9}, {3.803133928988029*^9, 3.8031339296790867`*^9}, {
   3.832075865756131*^9, 3.8320758664625883`*^9}, {3.832076207143709*^9, 
   3.832076207412361*^9}, {3.8320919582834253`*^9, 3.832091960290627*^9}, {
   3.832093634314348*^9, 3.8320936362393827`*^9}, {3.83209494355807*^9, 
   3.832094948114861*^9}, 3.832097914816745*^9, 3.832275533264202*^9, {
   3.879362712586899*^9, 3.879362719320096*^9}, {3.879423007946261*^9, 
   3.879423012200039*^9}, {3.879434449108389*^9, 3.879434459291218*^9}, {
   3.879434768469531*^9, 3.879434769211688*^9}, {3.879434923899747*^9, 
   3.879434977173169*^9}, {3.879435022111643*^9, 3.879435023500846*^9}, {
   3.8794351580874987`*^9, 3.879435158937639*^9}, {3.879435265845237*^9, 
   3.879435268485083*^9}, {3.879443335502281*^9, 3.87944334654316*^9}, {
   3.879443855336084*^9, 3.87944385544781*^9}, {3.881413400319121*^9, 
   3.881413400626779*^9}, {3.881413895192565*^9, 3.8814138968196087`*^9}, {
   3.881511552149897*^9, 
   3.881511552565461*^9}},ExpressionUUID->"4763f704-a66d-4b23-82d6-\
844e159c36fd"],

Cell[TextData[{
 "A linear layer usually includes a bias term.  This just adds one more \
equation to the list:  \n\n\tForward evaluation\t\tJacobian\t\t\t\
Backpropagate to obtain gradient\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        UnderscriptBox[
         StyleBox["Y",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "-", 
        UnderscriptBox[
         StyleBox["y",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"]}], ")"}], "\[Transpose]"}], 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"b5706a51-52c5-46ee-ac99-57a4d6977581"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}]], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"44bba1d0-fb94-47e0-b348-21364b407d11"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}]], "=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "-", 
       UnderscriptBox[
        StyleBox["y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}], ")"}], "1"}]}], TraditionalForm]],
  ExpressionUUID->"705d57dc-d34d-4915-a3b8-4138a68db9aa"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderscriptBox[
     StyleBox["Y",
      FontWeight->"Bold",
      FontSlant->"Plain"], "_"], "=", 
    RowBox[{"tanh", " ", 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "54311342-ddf3-4892-bbe1-3c96b4edf1ae"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      UnderscriptBox[
       StyleBox["Y",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", 
    RowBox[{
     SuperscriptBox["sech", "2"], 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["u",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "d80f9e60-240a-47ef-8427-bd3d19a5404a"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], "\[Star]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       UnderscriptBox[
        StyleBox["Y",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "4cda9c9a-b59b-4d55-87d5-7f4d948a6a73"],
 "\t\t(elementwise multiplication)\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     UnderscriptBox[
      StyleBox["u",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "3"], "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"], 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}], "+", 
     SubscriptBox[
      UnderscriptBox[
       StyleBox["b",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "ff1788fd-69e7-41b6-bec7-33887ed12a9a"],
 "\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      UnderscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], "_"], "_"], "23"]}], TraditionalForm]],
  ExpressionUUID->"b1fbe3fe-84a0-4ac4-a88c-5cbc258a2e83"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"]}]], "=", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox[
       UnderscriptBox[
        StyleBox["w",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "_"], "23"], "\[CenterDot]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox[
        UnderscriptBox[
         StyleBox["u",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "3"]}]]}]}], TraditionalForm]],
  ExpressionUUID->"aa375ec5-a01b-4f4d-89bb-f34259e7f81d"],
 "\t\t\t(inner product)\n\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}]], "=", 
    SubscriptBox[
     UnderscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], "_"], "2"]}], TraditionalForm]],ExpressionUUID->
  "8984640c-23ca-4eef-9d32-b23f2eef0cea"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        UnderscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], "_"], "_"], "23"]}]], "=", 
    SuperscriptBox[
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        StyleBox["x",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "2"], "(", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubscriptBox[
         UnderscriptBox[
          StyleBox["u",
           FontWeight->"Bold",
           FontSlant->"Plain"], "_"], "3"]}]], ")"}], 
     StyleBox["T",
      FontSlant->"Plain"]]}], TraditionalForm]],ExpressionUUID->
  "c92f2b55-8768-44c4-bebb-66a6ce053123"],
 "\t\t\t(outer product)\n\t\t\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["b",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"55056ea2-4930-4b47-8bbb-c700a5ec65d7"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["b",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]], "=", 
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubscriptBox[
       UnderscriptBox[
        StyleBox["u",
         FontWeight->"Bold",
         FontSlant->"Plain"], "_"], "3"]}]]}], TraditionalForm]],
  ExpressionUUID->"02a57b89-606d-43ee-8428-b738f6e2c8b4"],
 "\t\t\t\t(equal)\netc."
}], "Text",
 CellChangeTimes->{{3.8814108143121233`*^9, 3.881411414912712*^9}, {
  3.881411517912261*^9, 3.881411564257752*^9}, {3.881411651147046*^9, 
  3.881411686118704*^9}, {3.881411725124538*^9, 3.881411906468422*^9}, {
  3.881413652312295*^9, 3.881413766568818*^9}, {3.8814138106813707`*^9, 
  3.8814138174317293`*^9}, {3.8814139057914658`*^9, 3.8814139617019*^9}, {
  3.8814141280564127`*^9, 3.881414218132372*^9}, {3.881414279371621*^9, 
  3.881414435855385*^9}, {3.8814145136277*^9, 3.881414522444971*^9}, {
  3.881414564330834*^9, 3.8814146106658707`*^9}, {3.881414663085581*^9, 
  3.88141469309147*^9}, {3.881414728841662*^9, 3.8814147479437113`*^9}, {
  3.8814353569563313`*^9, 3.88143543296898*^9}, {3.8815115613653603`*^9, 
  3.881511706124673*^9}},ExpressionUUID->"fb4499f2-791b-4264-9dbb-\
d209f3069cec"],

Cell["See Jupyter notebooks.", "Text",
 CellChangeTimes->{{3.881511770017542*^9, 3.8815119000791073`*^9}, {
  3.8815123897886553`*^9, 3.881512452968129*^9}, {3.881512807618476*^9, 
  3.881512813290843*^9}},ExpressionUUID->"ebf148e0-057f-4dbf-979a-\
da82301435c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Optimizers [TBD]"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.87943443380969*^9, 3.8794344370117397`*^9}, {
   3.87944309989867*^9, 3.879443124267099*^9}, {3.879631231465434*^9, 
   3.879631235666828*^9}},ExpressionUUID->"47f83dcb-7ea2-4aac-b888-\
9b50dc271fe0"],

Cell["Mainly Stochastic Gradient Descent (SGD) and ADAM.", "Text",
 CellChangeTimes->{{3.879717033487027*^9, 
  3.879717043860273*^9}},ExpressionUUID->"ba2c7d56-5c71-4ed1-ac2e-\
af6bc7cd12ce"],

Cell[TextData[{
 "Training a neural network is basically like this:\n\n\[Dash] Feedforward \
(given inputs ",
 StyleBox["x",
  FontSlant->"Italic"],
 " and learnable parameters ",
 StyleBox["w",
  FontSlant->"Italic"],
 ",",
 " calculate hidden node values ",
 StyleBox["u",
  FontSlant->"Italic"],
 ", model output ",
 StyleBox["Y",
  FontSlant->"Italic"],
 ", and ultimately calculate loss ",
 StyleBox["F",
  FontSlant->"Italic"],
 ")\n\[Dash] Backpropagate (work backwards to calculate ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", "\[Ellipsis]"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "50b1e282-c603-4323-817c-718838288b8c"],
 " with respect to all nodes, especially w.r.t. ",
 StyleBox["w",
  FontSlant->"Italic"],
 ")\n\[Dash] Adjust weights (usually \tas simple as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"w", "-=", 
    RowBox[{"\[Tau]", 
     FractionBox[
      RowBox[{"\[PartialD]", "F"}], 
      RowBox[{"\[PartialD]", "w"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "19d5b457-6c6c-4230-8b4e-45ec17a07ad1"],
 ")"
}], "Text",
 CellChangeTimes->{{3.881750281541576*^9, 3.88175041426866*^9}, 
   3.8817505104411592`*^9},ExpressionUUID->"874f9631-352e-40dd-be85-\
8921377a7483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Multi-Layer Perceptron (MLP) \[Dash] this section is a bit old and needs to \
be updated"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.8814146317156363`*^9, 
   3.88141463769823*^9}},ExpressionUUID->"ad4ffe0b-5c03-4322-8db3-\
564d33382f06"],

Cell[TextData[{
 "GLMs and SLPs have a linear dependence on the inputs.  This makes it \
impossible for them to nonlinear learn functions like XOR.  Even though \
kernelized GLMs are nonlinear, they are still based on ",
 StyleBox["pattern recognition ",
  FontSlant->"Italic"],
 "\[Dash] comparison to known examples.  To demonstrate ",
 StyleBox["cognitive thinking",
  FontSlant->"Italic"],
 ", ",
 StyleBox["logical thinking",
  FontSlant->"Italic"],
 ", ",
 StyleBox["deduction",
  FontSlant->"Italic"],
 ", and ultimately ",
 StyleBox["artificial intelligence",
  FontSlant->"Italic"],
 ", a computer has to be able to do much more than pattern recognition.  This \
motivates us to explore ",
 StyleBox["deep learning",
  FontSlant->"Italic"],
 " architectures such as multi-layer neural networks."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.832095821357936*^9, 
   3.832095952606741*^9}, {3.832269091536751*^9, 3.8322692184392977`*^9}, {
   3.8322692945355167`*^9, 3.832269402500255*^9}, {3.832269446146225*^9, 
   3.832269592730218*^9}, {3.832269951385817*^9, 3.832270030218607*^9}, {
   3.832270191735132*^9, 3.832270402863863*^9}, {3.8322705089260798`*^9, 
   3.832270508995623*^9}, {3.832270550937976*^9, 3.8322706664332323`*^9}, {
   3.8322714482505713`*^9, 3.83227144840666*^9}, {3.832279188802932*^9, 
   3.832279226464314*^9}, {3.832291253028184*^9, 3.832291258783105*^9}, {
   3.879362631199203*^9, 
   3.879362679187978*^9}},ExpressionUUID->"ec728b00-4354-4179-a284-\
5a93184a18b7"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Multi-Layer Perceptrons"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.832270654627335*^9, 
   3.8322706607090893`*^9}, {3.832275516802005*^9, 
   3.83227553227425*^9}},ExpressionUUID->"70367c77-053e-44d1-aba6-\
ea54b4afe76d"],

Cell["\<\
From https://en.wikipedia.org/wiki/Multilayer_perceptron:

A multilayer perceptron (MLP) is a class of feedforward artificial neural \
network (ANN). The term MLP is used ambiguously, sometimes loosely to any \
feedforward ANN, sometimes strictly to refer to networks composed of multiple \
layers of perceptrons (with threshold activation). Multilayer perceptrons are \
sometimes colloquially referred to as \[OpenCurlyDoubleQuote]vanilla\
\[CloseCurlyDoubleQuote] neural networks, especially when they have a single \
hidden layer.

An MLP consists of at least three layers of nodes: an input layer, a hidden \
layer and an output layer. Except for the input nodes, each node is a neuron \
that uses a nonlinear activation function. MLP utilizes a supervised learning \
technique called backpropagation for training. Its multiple layers and \
non-linear activation distinguish MLP from a linear perceptron. It can \
distinguish data that is not linearly separable.

The term \[OpenCurlyDoubleQuote]multilayer perceptron\[CloseCurlyDoubleQuote] \
does not refer to a single perceptron that has multiple layers. Rather, it \
contains many perceptrons that are organized into layers. An alternative is \
\[OpenCurlyDoubleQuote]multilayer perceptron network\[CloseCurlyDoubleQuote]. \
Moreover, MLP \[OpenCurlyDoubleQuote]perceptrons\[CloseCurlyDoubleQuote] are \
not perceptrons in the strictest possible sense. True perceptrons are \
formally a special case of artificial neurons that use a threshold activation \
function such as the Heaviside step function. MLP perceptrons can employ \
arbitrary activation functions. A true perceptron performs binary \
classification, an MLP neuron is free to either perform classification or \
regression, depending upon its activation function.

The term \[OpenCurlyDoubleQuote]multilayer perceptron\[CloseCurlyDoubleQuote] \
later was applied without respect to nature of the nodes/layers, which can be \
composed of arbitrarily defined artificial neurons, and not perceptrons \
specifically. This interpretation avoids the loosening of the definition of \
\[OpenCurlyDoubleQuote]perceptron\[CloseCurlyDoubleQuote] to mean an \
artificial neuron in general.\
\>", "Text",
 CellChangeTimes->{{3.832067990320881*^9, 3.8320680150493917`*^9}, {
   3.8320680472771378`*^9, 3.832068049602974*^9}, 
   3.83206810895784*^9},ExpressionUUID->"118644d7-9c50-4143-b882-\
1f5d67a4749c"],

Cell[TextData[{
 "Consider a problem with an input vector ",
 Cell[BoxData[
  FormBox[
   StyleBox["x",
    FontWeight->"Bold",
    FontSlant->"Plain"], TraditionalForm]],ExpressionUUID->
  "3349c4b4-a490-44b8-abe6-ca19d18471b2"],
 " and an output vector ",
 StyleBox["y",
  FontWeight->"Bold"],
 " (where the values may be real numbers in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "]"}], TraditionalForm]],ExpressionUUID->
  "ae24b40c-2e29-40bf-9910-74a7e8b8da24"],
 ").  Consider a MLP with ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]],ExpressionUUID->
  "cf9cb047-a57c-4a94-9ad2-8b487852466e"],
 " layers.  For concreteness, let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "cefeb5ad-ca5d-4025-87b7-c359ff64c634"],
 ".  The model function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["Y",
     FontWeight->"Bold",
     FontSlant->"Plain"], "(", 
    StyleBox["x",
     FontWeight->"Bold",
     FontSlant->"Plain"], ")"}], TraditionalForm]],ExpressionUUID->
  "6c9fec3e-eab2-4a5b-9858-95600fbea86b"],
 " is defined by a nested sequence of functions, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    RowBox[{"g", "(", 
     RowBox[{
      SuperscriptBox[
       StyleBox["w",
        FontWeight->"Bold",
        FontSlant->"Plain"], 
       RowBox[{"(", "2", ")"}]], "\[CenterDot]", 
      RowBox[{"g", "(", 
       RowBox[{
        SuperscriptBox[
         StyleBox["w",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         RowBox[{"(", "1", ")"}]], "\[CenterDot]", 
        RowBox[{"g", "(", 
         RowBox[{
          SuperscriptBox[
           StyleBox["w",
            FontWeight->"Bold",
            FontSlant->"Plain"], 
           RowBox[{"(", "0", ")"}]], "\[CenterDot]", 
          StyleBox["x",
           FontWeight->"Bold",
           FontSlant->"Plain"]}], ")"}]}], ")"}]}], ")"}]}], 
   TraditionalForm]],ExpressionUUID->"75a38100-c148-4141-b760-c747950583bb"],
 ", where the nonlinear function ",
 StyleBox["g",
  FontSlant->"Italic"],
 " of a vector is understood to apply component-by-component.",
 "  Let us spell this out:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "\[Congruent]", 
    SuperscriptBox["x", 
     RowBox[{"(", "L", ")"}]]}], TraditionalForm]],ExpressionUUID->
  "294c519a-41ec-464c-aa53-20ba349525a2"],
 "\t\t\t\t(output vector is final layer of neurons),\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}]], "=", 
    RowBox[{"g", "(", 
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], "j"], 
      RowBox[{
       SubsuperscriptBox["w", 
        RowBox[{"i", "\[InvisibleSpace]", "j"}], 
        RowBox[{"(", "l", ")"}]], 
       SubsuperscriptBox["x", "j", 
        RowBox[{"(", "l", ")"}]]}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"dba3a55a-a7bd-4654-bdb1-26c5ebf14d12"],
 "\twhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"l", "=", "0"}], ",", "1", ",", "2"}], TraditionalForm]],
  ExpressionUUID->"7a1adbc6-4fce-48b2-9c30-3761f0b06c9f"],
 " is the layer index,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", "0", ")"}]], "\[Congruent]", 
    SubscriptBox["x", "i"]}], TraditionalForm]],ExpressionUUID->
  "ec6be738-9dac-4866-87be-108a971d4fea"],
 "\t\t\t\t(input vector is first layer of neurons).\nHere ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubsuperscriptBox["w", 
     RowBox[{"i", "\[InvisibleSpace]", "j"}], 
     RowBox[{"(", "l", ")"}]], "}"}], TraditionalForm]],ExpressionUUID->
  "1c8dc5b0-12b2-4b49-b5b8-6b6c7e13bbc4"],
 " are weights connecting neurons in layer ",
 StyleBox["l",
  FontSlant->"Italic"],
 " to neurons in layer ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "421bbb68-6558-4abd-a879-81bb9f3e5791"],
 ".  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"g", "(", "z", ")"}], TraditionalForm]],ExpressionUUID->
  "b6cbdd0d-ee61-4603-97aa-7ad23a6aa43a"],
 " is a sigmoid function.  The structure of the MLP is summarized below:"
}], "Text",
 CellChangeTimes->{{3.832068268926043*^9, 3.832068273218731*^9}, {
  3.832099985766858*^9, 3.8320999910727673`*^9}, {3.832100040467372*^9, 
  3.832100162134666*^9}, {3.862569352742263*^9, 
  3.862569352772645*^9}},ExpressionUUID->"34e0b062-e055-4fd9-a808-\
85049b81739f"],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["x",
     FontWeight->"Bold",
     FontSlant->"Plain"], "\[Congruent]", 
    RowBox[{
     SuperscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], 
      RowBox[{"(", "0", ")"}]], 
     OverscriptBox["\[LongRightArrow]", 
      RowBox[{"        ", 
       RowBox[{"g", "(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["w",
           FontWeight->"Bold",
           FontSlant->"Plain"], 
          RowBox[{"(", "0", ")"}]], "\[CenterDot]", "\[Ellipsis]"}], ")"}], 
       "        "}]], 
     SuperscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], 
      RowBox[{"(", "1", ")"}]], 
     OverscriptBox["\[LongRightArrow]", 
      RowBox[{"        ", 
       RowBox[{"g", "(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["w",
           FontWeight->"Bold",
           FontSlant->"Plain"], 
          RowBox[{"(", "1", ")"}]], "\[CenterDot]", "\[Ellipsis]"}], ")"}], 
       "        "}]], 
     SuperscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], 
      RowBox[{"(", "2", ")"}]], 
     OverscriptBox["\[LongRightArrow]", 
      RowBox[{"        ", 
       RowBox[{"g", "(", 
        RowBox[{
         SuperscriptBox[
          StyleBox["w",
           FontWeight->"Bold",
           FontSlant->"Plain"], 
          RowBox[{"(", "2", ")"}]], "\[CenterDot]", "\[Ellipsis]"}], ")"}], 
       "        "}]], 
     SuperscriptBox[
      StyleBox["x",
       FontWeight->"Bold",
       FontSlant->"Plain"], 
      RowBox[{"(", "3", ")"}]]}], "\[Congruent]", "Y"}], TraditionalForm]],
  ExpressionUUID->"e2f725d1-8271-4f45-882e-bfcad8edb527"]
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, {3.8320697218054037`*^9, 3.832069767590661*^9}, {
   3.8320698025403347`*^9, 3.8320698379521017`*^9}, {3.83207350384485*^9, 
   3.8320735118171473`*^9}},ExpressionUUID->"7c23eba3-d656-4f9e-a53b-\
b983239c74b8"],

Cell["\<\
The mathematics for the sigmoid function is so important that we will devote \
the next section to it.\
\>", "Text",
 CellChangeTimes->{{3.832242662660664*^9, 
  3.8322426760452623`*^9}},ExpressionUUID->"8efd4802-97d8-4daa-a31d-\
57ed9f5489df"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Derivative identities for various sigmoid functions"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832242774495273*^9, 3.832242778741681*^9}, {3.879631240392335*^9, 
   3.879631240397702*^9}},ExpressionUUID->"57eab9da-f42c-4bc7-b547-\
9c6a99ee086a"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "(", "z", ")"}], "=", 
   RowBox[{"tanh", " ", "z"}]}], 
  TraditionalForm]],ExpressionUUID->"31292ed5-f3a8-4028-a094-2534c86ececf"]], \
"Subsubsection",
 CellChangeTimes->{{3.832242679270975*^9, 3.832242720431745*^9}, 
   3.8322427808924932`*^9},ExpressionUUID->"b0f42efb-bd1b-46da-a1f7-\
7d41d4079001"],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], "=", 
    RowBox[{"tanh", " ", "z"}]}], TraditionalForm]],ExpressionUUID->
  "c94b0296-1db9-407f-a446-106aa765745a"],
 "\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", "\[Prime]"], "(", "z", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["sech", "2"], "z"}], "=", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["tanh", "2"], "z"}]}], "=", 
      RowBox[{
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"g", "(", "z", ")"}], "2"]}], "=", 
       RowBox[{"h", "(", 
        RowBox[{"g", "(", "z", ")"}], ")"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"0c6afa04-7206-49e8-beea-483d0fea32a9"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "(", "g", ")"}], "=", 
    RowBox[{"1", "-", 
     SuperscriptBox["g", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "05d3638d-a4e0-4ff1-bb9c-bd8f2194a274"],
 "."
}], "Text",
 CellChangeTimes->{{3.83224272549115*^9, 3.832242764593134*^9}, {
  3.83224284688586*^9, 
  3.832242846946637*^9}},ExpressionUUID->"033b3168-00e8-4300-91d5-\
6b92be1d3469"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tanh", "[", "z", "]"}], ",", 
        SuperscriptBox[
         RowBox[{"Sech", "[", "z", "]"}], "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{
       "{", "\"\<\!\(\*StyleBox[\"z\",FontSlant->\"Italic\"]\)\>\"", "}"}]}], 
      ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\"g\", \"(\", \
\"z\", \")\"}], \
TraditionalForm]],ExpressionUUID->\"16bb14a7-3f3c-4b68-9fd6-2bfd491911f1\"]],\
ExpressionUUID->\"47e49595-37a5-48fe-9410-1845526a768b\"]\)\>\"", ",", 
           "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{
SuperscriptBox[\"g\", \"\[Prime]\"], \"(\", \"z\", \")\"}], \
TraditionalForm]],ExpressionUUID->\"42a5df21-61be-4f51-b2a7-190ffc0d5cf2\"]],\
ExpressionUUID->\"04a2eb70-f3ea-4f44-b68a-2c0fcbfa4f91\"]\)\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{".8", ",", ".2"}], "}"}]}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", "-", 
        SuperscriptBox["g", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{
       "{", "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\"g\", \
\"(\", \"z\", \")\"}], \
TraditionalForm]],ExpressionUUID->\"47175172-802c-43f8-ac5b-95ba0804dc77\"]],\
ExpressionUUID->\"70ebb009-2054-40e9-9992-7e138526dc0a\"]\)\>\"", "}"}]}], 
      ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{
SuperscriptBox[\"g\", \"\[Prime]\"], \"(\", \"z\", \")\"}], \
TraditionalForm]],ExpressionUUID->\"c3305dd5-4cc7-4dd0-94a3-38d183af0ea6\"]],\
ExpressionUUID->\"3d92bb39-d616-4f1b-94d7-abd22e95446a\"]\)\>\"", "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{".8", ",", ".2"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.832071091102974*^9, 3.8320711726105423`*^9}, {
   3.83207146632012*^9, 3.8320715097782927`*^9}, {3.832071611038333*^9, 
   3.832071613929034*^9}, {3.832072242462474*^9, 3.832072253500018*^9}, 
   3.832072287076509*^9, {3.832242796667035*^9, 3.832242965468915*^9}},
 CellLabel->
  "In[779]:=",ExpressionUUID->"aeb18008-d481-4472-b1cf-87fecae0363a"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    GraphicsBox[{{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwt2Xk4VN//APCxM8aMRBFaZEsqypKlzk32ohAVWUOohIqSKLK0WKJ8tItI
kYQi5FyVJdlTlrLvY2auZWxj+53f83z/us/rue+Z+z7vc97n3Oe5W9wuWHtw
k0ikRS4S6f+vO8E6+uoqDbdin/W7ySHghYWtMQscGn5d/2NkMHJegbri9AwN
F9xinngRebeyhdvwOA1/N6Jy3wNZe82tzro2Gh5/I1HeDBkbmKx99J6G7wqT
SaEiW0fXZ+9xpuGXJXVcEhcImHTgr9kOexpuIpFjege5dXF0RNGWhgucnlAM
R7bz45XfcIiGX8r+/N0f2eGk3lOSNg1/FjoYcRTZffube/VUGi7fuIaPghzU
eOv8mXIqft9CsCB4noD3xgPb2MVU/GKz2gU/5DQB7wPhBVR8u8EJWU/kOmAh
8SyLirsEHj9ihSyXJ/GlJZGKM804AkrIDQmZlP1nqPil0KSSxjkCKlrXZIuL
UvGKm+EPJZD1fUsk0shUPFwu3EcI2epOTtguPip+pX505/IsAUO+JtiYc0Rw
vtyEyEHklt0nF8MGRfDW2h9n8pGvr6WbjxeL4H/bLo6bI7e2CtMrXEXwqwMJ
Rr4zBLzp/rE8+5QI7j97o8EFeSfbKenhcRHc4vRhYxvkmLX5+t4WIvj9FVnu
vcj7rE/Ei+qI4OViB7NIyJmNrzScRUVwz1bW4zg2Aa/U7gtbKqfgI8qZgU+n
CahgP2Iz/JmCS+OPc+8ht4wlKDcVUvC8/istIciqQoPN6W8p+Pq7d7tOIfeZ
3JE/lEzBjR5or0gjm1f++fHoPAUvuP3aOnmKgLL4BXFtGQrelfIrJngS1VdM
85Luegr+gVv8jBdysAfn1z4xCi5e/XGnHfIfcmSSoSAFH0zIuaqOnGD7WMya
LYw3/zJbHJ4gIM/4d9HzdcL49rMDSRbIYxIbRNJDhPF9ThRTQYKAKV495zKD
hHGRWCWpaRYBjUtf1b0JEMaH0toau5DTXHbdy/MSxpvaApj5yKeyDYXLjwnj
nPKpIQfkRuyCUIeqML72X3BuFpOAH89+56N1kfE73rOvVRkE3LvZVz2zjYyv
VPg0rEEuaV3vuK+FjE9nxDbNjhMQ33e28Gw1GW//seEMjlxLEztd84GMi8sM
t1kh9xY44zejyDi/FNfT83QCkpc4wexdZJzvm/D+6FECxua9yryrQsb9N+wJ
PIMs6mHZIqdAxrnC3CJMkCUaXm6z2kDGZX0npQWQN6eatr/jJeM3azzBrREC
ahoma57pEMJ3AjfpwGECutxTn+gIF8IT0jwuaQ2iehcmRtVfF8In87wc1iI/
/DctU3FFCOcPUFk3MYDyVf1kluUrhK/aCfO/Qd5Tr5seaC+EFwXK/JBE5qca
2q3dLYTnU93eEn0EzIm3KzvcJ4iPdRXqXO0hYFVRkTX2TxC/kOSsdBS5r0dy
bE+bIP7zlGmfIvI6tb8S0vWCOOBpKv7VTcCwJucLY8WCeOrXGEIF2XqNt1xU
giC+4r/hQOM/As4nXouBQBDf829rPLODgCMyFXRjXUF8mfws6DPyn0x+iwYN
QbxsmCMZiVxQcn9N1zZBPKmk75Y0sm//68ectYL4999vZw3bCTig3pqjOSqA
q8gQ9Nt/UD83qTZnJwjg1pYGWEcLAcvsA/bsuSuAy4UQYU+QsweLHpZECuCl
P93POiLHzBvY/wgWwJ86dh/sbSbgwc0nB4bdBXBymDerr4mAxRciZ7boCOAj
JPxrawMB06ndUil9/HjdeWvq5VoCJjoAAZ1//HiC7SGNHcjhWansjj/8OH2b
CmfwBwHdDE43Stfx4x16j0/bIMsFjt568Ykf/1K49cX2GrR+u6aIzLv8eP9w
ltGPSgKm5ghUfdTkxx0OViR+xFG/LHgV2Kmh55nM5rkg3zCuTZ1T4cd/faxy
FEZ26b13TWczP2483uPiDAm4SVxM/QuZH9f2t1niKifg82syT7/38OHLujkk
9VICPjVXD/h1mw/XPmLYrv6RgPLC5rVNt/hwUXbAidZCVJ+fbnINYXy4cZml
eyByyeEHLTWXkR82ynwuIGCH5dzuclc+/K2PLJdOPpp/my/TWTp8uJRit4Tc
ewLGO5hdDh3jxWvTjhs8zEL3Zdzqrw3y4hni7eLKyM//BStc7eHFZZ+VOJe8
JmCuY87vi7958c7P5FNdmWg/caZpeVfw4tsyzv2TySCgoPvvWZtHvDj5prHn
zZeovudcr2wz48U/tLV8+/uIgN1xTk9LDvLiCvBajBWy7gcH/NB+XlzQ+kBS
VQoBp2ZsBX338OK3NY2Dcv8joGuYeUq+LC/+nDTuePkhOr8S9xTrTfHgPJ0S
1d0JBFwp4pu3eMKDs2dGGyWjCWjfyS3T85AHz7ko4Xo5ioCfllaBXwIPfvry
yrrmSLQeD3CiEyN58N3D1xmRtwjYVcta33aBBz+op7xx6CZaf11t2i6GPLgO
jeu/KyEEvMbzNiiAyY0/vFDqMe6Hfv/Iid9llBu3/psrq43stmvtQ4sBbpyb
coN98wLafx1C8pU7uPFsCx+OuC8BJQssmd3fufH+6n+mamcJWOg27XboKTeu
zWHO6XoQkFWhbyl/iBs/652RnHKCgP3HJ/+tMebGf8RLcCqPE/A3M+PsKsaN
n9Y8enzKDuUnRbvdqcWNBz9X4JjYEvCuf9+3BDmUXwZP+bAVAZW3ROksL3Dh
L3+ZbZo0R/W70Sj/J4sL50nyXNmlj87vjhf7u9K58PCdKYz9eijf3X4nBp9z
4dcsUz8e1iWgxqDovakHXHij1fcW971oPk2tp6k3ufB9+nNi0Rpo/mm/K0xO
cuFfploCElUJuPi80+mzEBe+qST0SYk0ASfm3l7BebnwYgqUT9tAwMGj1xKr
V0l49wdr+xgp1O/cMlW/Z0i4yUbN70fXo37ydNwx1UfCfbY1eDaLEdB0Z++i
SgkJ7yT9uZEghPbHL0MpT31I+FnYEMiZYUGnK49DtT1IeJvm+5QUNgsq7zni
3uJMwttP5Y1rTLNgSVbxLkFbEp6xTEh7TbBgd9LdqouAhIdE1LsX01lQyUed
bS5Owv+Unbmz0s2CATs4z6eurUIhg2lF0SoW5E0/7aPsvwo9ypx/XvjOgsmS
9ZpOnqswYM1N6/qvLFjKk1r34+gqtDt5bOUmRPGdRpxUhVX4iVp4s7kYxUfd
tz3SuAK3qGzq4M9G+fQoU3LkVmDx749aRbEsGKLP9e6x5AokV5W8Y91lwX2P
OixuU1eg3lWe1a13WBC3vhPvyVmGMD9aMSaKBasrx8W2tCzDraUDB7XCWLA1
O1cq+eYyDAvrjlDyY0FWkIbSjd4leNrCf/LQURbMa6XU+P5ZglhSV6mOJQv6
qw95OdYtQS6fAYrCYRZk0x++1S1eguVxD7XZJiy46Di3YyZ+CV5qJlwuARYU
NCzR8AFL0BV3iVzYwYJbRTGDY88X4WLPq0RuIRaMU+sL9klahAuBoc1n+Flw
/mh4wY2YRbgN1Bb/4GHBuvvf5d8FLMLCks9+EStMeGmtmQC/ySJ0erNFomGa
CavWWdcVERyor7P9aVkXE/rIuttJH+DAlCLvnX25TNi6jy9eXYsD5W5UXfiV
zYT7nTKrTbZz4Cvx/uaKLCZc+2J07yUJDvwyYT6cmMaEZZvPS9ePLcDwK7lN
fMlMSJUP7A1NXIDkCJtXKiFMmK8S49M/MA999/bsPGLEhJuaXT5v75iHZ3iL
QP0BJrwXpCN4uWEeGrVe4zbZz4Qe3+kZAp/nocxk2Z0d2kwo6WTRpxo3D+W7
WjdVKTPh9ftiJ4L2zsOOGEPZLcJMaDr/1IgSOwdX7TelOtQx4Mfnlx/Yhs9B
AYqnt3ENA8oZWQ48D5qD5tkFhqrfGXDx/uoNdbc5qFnmITNWyoC5293K7LTn
IN+IS5liNgOKOyvtedk3C4WMbMXfxTBgT+WHzVpas3A1fVUUBwwYYrNguFd1
FnbOmz47pseAkn2Yt67cLHzDvc10UIsBjy41fthPnYXLHbtH2DsYEN/NMjAZ
noEXc6JrOqUZMPWFiseJ5BlYSvSSPs6OQ7er6W+CZ9mQ7zRVNDxrHK7wj9eH
MNiw6SvLwj99HD5+sHsqtJ8N53EeMYfn47DlfYVuRAMbbq5Skdr4YBweHO75
eTeTDfd9/O+Ra9g4lLeRYT21Y8MzUWyRzmPjcEj14W74aRoe5LkDzy/SoUpo
Bms0expq59heV5yhQ9/Gj2/FXk5Dw6f9lHYWHc77/5HzvDsNfdKUoxX66ZBc
tH6tiMs0HPT0UPeuoUO1A4+n7YWm4RVO54vYJDq8ZvuicNZhCsp0eH2VkadD
PPO932arKRj0NHKpX4YOeeehqrnxFAxNCNR8KUGHcY97Xz1Tm4J3Hlvd5hOg
w9SeLQ8N+aYgxchx9dzYGKzyfnU5MXcSStnGnfyQMwbXhL7R2sk1CbHZn8l9
qmMw6pNyjejcBPwvrt9CWWEMclivT04zJuBVlXfHzsiOwX7nzJDi9glo03VY
v0FkDOYfSP9qkDcBlZ6+7t3PGoXWfM8sjztPwGi9Y4zMd6NQSWpLPekaAScV
rwn6Ko5C0TubJio90XuFdPW7QtlROM+RXXvXmoCviwRWp8RHYc2/DSclVAjI
jqy+b8czCr1SxYe2dbBgIlFLFPeMwLdKgsvW2ixo7+Z2Yjh5BKpqEaoZ0wz4
a85B9dvKMPTcGRb2uYsB9euvUeXZw/CFIq2lvpoB9yodvRY8NgzF1u8Kmn3C
gE9OBfcItA7DuTnfChNDBuR+8UD/VdYw/PqZZUtH8/4Muwa7jwzDE/tYobu0
6LBv48DnvclDMMKQ2fT5ygikxL9nJ3MNwq+mjCMap0cgVaHu3GX2ACRZjDfk
WoxA7F/OP9ORARhiO1aXLjcCT1JWnzTUDcBAz6Ga2LphqHY4yNP2vwHoFdOF
u24ehhGztCZLlQF4uK4+T6hmEP7KnmobM+mHEsdyE06u74elm3/Z17j2wvzZ
SlqNfCd0lSzx/1HdDjP+DsWO3WqAl6aXzyuy66GjlUzh39OFUJ7MK9VxohB+
Jl/7/fVyAbhFZ1PUzhUAzX6ujTdPNIJeXY0PHaUNYOtE6YLu1w5Q6uTe23Sx
HZild9RbnugH5FcH4iLv94KJyFzPyvP9ACubK9R82QtSvCJW9SL6wYBwKdGZ
1wtGd+xQ35bbD7amLCbzNvWCmOIbD3h4B0AROcirVaQP1NQrORS/HwBtjzgG
7tF9wGT+8ugWgSHwzE/vq25APzCyEOOZ+TgC3p/QSv+kOAjiXIUmF36MgDHN
z6FVuwdB+2VSz0rXCHhiZddWt38Q+DxnlQjyjwKzbGeBL3YonqgNkLEbBaSg
qkfbo1D8/Yj+g7OjgP3GxfPgAIr/w65I1KIDSbmiJt/kIVBAH3//nzkdqId4
V1q/HAJLK/3PnjrRwdHDMjE7coZAnFLz1cwoOvD9pX+rugLFX3mnXvKHDip9
zufHMlD8Bs+XfYHj4EFTb6cHNgzindtuqBUxAOuwf4ZT3zCIYuiD4ToGyI+o
H54ZHwahV9OWn/QzwLMPXP3hs8PAN+l8sACVCc56C0mHCo8Ay2qeS93uTMA7
Kb6DozECqLvUztwTY4HdEk/+E4kaAXErMRaj5wlwJrBZ/8fmURB1lyX8PIIA
6+/phsupjIJQyWO1No8IcG7Aam/AnlHgu3uTCfxOgEUFPtqM0ShQKrDf/FNk
AmgbDIrd9hkFAiMTUmnuE+CCdd4w8WEUVFvKihwVmwR7Zr5sGtIZA+I7+9YF
yEyCtfFqxrEHxoCLSMbmB4qTQO0lq2aH2Rjg/FTVaNedBC17X8wfPzEGVM30
HVxOT4LE9e7JVoFjIOGgwxu/wkmQRj0Z0p03Buz3PjK6bzcFdBkz2bc200Hm
escjBS5TwOSReKWBEh1Mz24++dtnCsjsZg8v7KCDex+zzkmFTYGWr2n2Nnp0
AHcXJ718PQWUdH0fFdjSgfyOtr4P81Pgkoyb+s7bdMDcIhHa8ngayNuaP1Af
p4O91176V7yaBqcla68vT9BBeOsOj7zcabCRX83h2ywdrIs2Phz3dRo4ZX7l
28c9DvYzgjaY06dBRvKhzFHJcRD/qfNThQ4bdJn+CVAwGgfqh1KJvHY2MAhs
7Tz+aByEvFIdeNHPBk+iDHvPPh8HVcvFf+IYbHAu3ycoOH0c2Oc1fzlHmgH5
dRt9o9+Ng3AJnnvKyjOg5/cTHteKcfCrx0M5NWgGlN1tWlw3Og4uX9ruGr9u
Foga6qx7r84A68hEmd2WWRAuEDscqsUAxS/yJTeqzoItC9w8ZnoMsFSr05Rz
YBbUUsO16wwZIHyLKag9NwtcVQ6qxR9ngLgGd1m+b7PgLXXChRLCAJnKzzuC
L8yBwOEmLuEKBjAtd9U0CJ4DZ6xuH95VyQBjNgr3hSLnwJOA4YeWPxhANSzH
NOXxHDjcNqAT2ozW8e+Soo+Vc8CR4+6Q1scA5eFtDyek54HNsZtPuLmYoO2f
qLVnzTyQ4xxYMNZnAvO7Hu2XWuaBj9+2IymACcp0Spwi/s0D381ObUMGTJCa
fPps6sQ8aDrpFXfZjAm8jn661Sm5AAJGPHi97JiA882hyNJ7Aewy1vB/eoEJ
ZLIzZbTJHCATllfk+IIJ4k4uphmJc4CZlU+pfhoTkASPbju2kQMW3c97S2Yw
waD7gqb/bg7ICo9oqXzLBO82Hj6Sbc8BjD2FegsfmWB/4uTNTdno/5z9Ait/
MoHLVf0RgcOLYNqmx1p4hglU3Gt+s+wWwUjPcGTpHBNMWx77/tt1ERA6rYe9
OEwQJX/uZXrQIlCWTsosWmWCnMYnDiB9EQSvV+DsILPAgsJiYyBnEXRG5qSE
bGSBxJbPxUNZSyD/w/dnZYYscOqL0eu6giVgtjXmL78JCyhkNT8sKF8C5VcO
KVmasUDx9bGAm63ofs/auV8WLNCtLLVDlrQMwgTfdJbZsYBK2JWXx44vAzH5
t1/4vVjg23btO9/4VoDSd8b9xBgWcNp1LH2StgJCIzMw9zssML/bv2zThhWg
uKxQuuceC6jqZrOu7VwBbeQM2bp4FnhguslG4/gKiBne0NOfzAKeHgIyGVkr
oPr22bC3r1hA8EXbu6hDq+BdzySloJwF0tLYVYW2q+BWvTlhgLOAfuaa3n7n
VXD2euNYUwUL+L07JAYurQI9M0O1ke8s0FEKA+eergJR6zxsuZYF3ra/Bl6s
VZCheM+u+Q8LKAqVjb4yJWGMdy0SykwWmKre6ZNmQcKug+FzV1gsUB71cvyF
NQl7/8h2VzXBAna80azHp0hY7MrTZecpFohctWIn+JGwOwKfpkLnWGBwZmQ1
JIWESeGsxotcBEjrX7vedpSE1SxlXzUSJ4Dvy6gUayYJgw6HMzwlCKDrsiB1
dIqE2djYXIxaR4CWrm6ZQ0skLPrD4lKFJAG4Ot7IHRDlwtKi5aaVZQng0gh2
7tjLhcXZhNQUKRBAtuysEV8MF2YqvT5nQJMA4lIcjm8sF7avnSo9qUUASmBM
XnsiFxb0xlRpWZsAS7sypHOecWEMt2cb1+gSoDO9e9K6gAtTLaWWKO8nQPJd
q+ep3VzYGK6lJGlMAKqD9pyeJjc2s1U/mseWAPzFlTkZutzYxd30kRHkZfFj
bjSMG7MaLt/w044AjAa/+n5zbmwJYy/FniBArcHb9Nsu3Niu8vouvlMEiFaR
Pdp2lxtr2LTFEboRgMThfhPQz40Fr++3Pn0BjW+gYzpshBtTHLxCX+9HALwu
b38sgxt7+F9U2k/kGy+cWl/PcmOeHoZX1AIIsGpYsvqPzIPp6xW2EZcIsBLv
b2eyhwc7n1ZsYRyMxqvQyyNziwdbtYwWO3mLAKdoRZbbbvNg/pc35k0jl83H
PtKK48HalX7HxkYSIOSn3i6rFB5sUdhcBEahc8zvP/uoHB6M41KgKXWbAJxS
yw8TrTwYI1qM/TaWAHNWX5wqFXgx83zhHebJBAjveN+1fzsvtt304N0OZKpr
2qliNV6s9reZstd/BFD0i7bP1uPFpE5UyUWkEOBYnJXdfSte7DnVWDPvMQHy
aocsHK/zYhv1rr0deU4A74PUfTOtvNgXao5HSyYB2LWkMt9OXuzMknHQodeo
HtbTuqM9vJjPa6+hb8gpru17/9J5sQGXrM78LAJUhaVpVJD4sMRbhdjttwSQ
K9NSjVXlw7IMDAslcwnwV8NZWuEWH8Y+2PqzupAAnguatMjbfJiWSaO86kcC
THyh8AzF8WFbuGLm45F5TUrorx7xYWOihJjdJwLsPClRIv+eD1ubelvxXxHK
5/rPE/KdfJjU6xrHphI03irt5K1q/NiRcXK0I47Gd4d6J0KTH8vAR4PzkXWP
DF0f0OXHsiXrl/krCHCkPdEj3Ygf0/m7lJ+LfIXO1NjqwI8VWK4fn/9KgJ/U
V7/kovix8G/lolcrCeB3XHSN3D9+7GaFDUm1lgBuWbseK/TxYz+r7dddQLZd
sNy6bZgfq3sj3PEBWfdJrKbaBD/2fpDPU+snAfh6yPb7eQUwx+3X3+jVEeCx
J1+6vaoAdjNjfId2AwG+X+ZoJIUIYD/vTjeymwnwqUqqPPmmAMYSttTZ2UKA
N+t1TB5HCWDfcowcziDHfQ46+TJBALvKPlfbjnxymX39/SsB7MkjZefiXwRg
3SKqftYJYAMLLu98fhNA6sHgCV5ZQUzXRmnz83YC7I3YtO6SnCB2fynD9Rey
XYD9rwElQSzs2GEHwQ4CJB5tsvi2WxCL8Lx/xR+ZIlJmEG4qiPVF+nhgnWj9
Ryapki4JYuV2yvbNfwkwGGRAWqoVxCYqTil87SYA95nrX842CWJFwSdlCeTN
dsXBf38LYjaWqe3SPQRw1Ng5U9IriK13tX58CfnPhBT96qwgFoJJ22ztJcAP
78lfc1uEsH+pwT2X+wiQ65D6evqKENZC3XBlcoAAGm1bOfyhQtjHgIpx8UEC
lFq/PrwhQggTScjbvRe5xix3EosVwrbfN9YLRR7QLtOLeymEpT7x3Cc4RABJ
8fZG5Voh7G+8vqb4MOqnOtq8ozQZc/UsOy0ySgBB0yRz/81kzPa3QtZ25Phv
657dUiBj0OZUlRny0xJZg+xdZGzp9kRCJHJR1vZ78wfJWPWasdOLyIxbJpuT
zpEx7+6pbb1jBDi+L8y05gsZ09rg7x8/ToB/M8O0r1/JmNrfsKosZLdcy7bS
ajLWvmvPUgXyuU0bPd83k7FvhnJkNnI415eI5CEydvmhdaEdA9WjklPuLiKM
uSYNu61jon6xDNTkchTGHn4bVbzBIsAd/u4ljqswhletbX+ITING39mewpjR
BTffbOQNahI2o37CWL45Yf4HeZdYoV/jLWEsNMypWoUggP2fyexnOcJY5vba
sQbkD07n5XSXhDF1j5Rc3kmU78cJ2VQuCia02aNVElmcckmKX4CCBbZt6lFF
DvwcLNqyhoLhhhPpx5B1xWNWvJUomFb1GCsN+euPtM5H1hTsvaTQG90pArRq
tCcuZFEw59ftj49PEyDyrkOccy4Fk+He89ILWau/+3ZlAQUL/p2dcBU5JX7o
xv1yCnYu7uL2J8iO9Cnfba0UTHM6x6YLefiFyKGTqxRMer4pxpFNgHnyQZ7P
tiLY2TU7LS1nCCDGoj74ai+CxVJVSx2Qtzd3ytc5i2BmDKv13shO/wUY93iL
YDFPvJ9FIH/bmnabL1QEo5mtGShCjtPnErXOFMFW1qh7ys4SQMEXyozPimD8
6gJ//iHvt7r7jr0ogm3VmLccRT6hcXz/ComKBVRGfJ5GvsNhOa8RpmKRb/NP
k+fQ/he1MV17ExXL1ztN1UYue3F92y0TKsZoda+LRbZu1tOSTaFi8tt3uqrP
E4CsJ1xR9oyKvb7TbKWPXPGq89CpdCrmYiS3xwRZ7cpV1ye5VOxcwJaaU8jU
TUX3pCqpWHveyL5o5B/ndg9ITFGxnv5Snw5kTHBbAvUwDftsMHvs4gKql//8
hlwrGjYy+jI8BPn93+oMi+M0rJMSkB6JvPG9Z+k9dCK3fagu/w95yfbVMPkq
DYPquk6lyEXpm/YJZNIw23NXj5A46H1EhKjOzKZhTRGZRYLIikHl1sYfaBgR
SxFfg/zA3NErsoyGOdpVvtmCHDD5OInnFw1TKflgboCs4uCzMb2dhglQLtiZ
I/d913lj0E3D6ouH7ayRj6a0l98co2G5qoZabsiC3FlmWwgaFn/ATMIHGZ4N
asXZNEzOwmTMHznwt7GzC4eG/YAW+VeR//d9Hvvf93nwfxMawz0=
            "]]}, Annotation[#, "Charting`Private`Tag$25447#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
//e+Cfn/903/A6x5RJI=
            "]]}, Annotation[#, "Charting`Private`Tag$25447#2"]& ]}}, {}}, {
       InsetBox[
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\\\"g\\\", \
\\\"(\\\", \\\"z\\\", \\\")\\\"}], \
TraditionalForm]],FormatType->TraditionalForm]]]\\)\"", 
           "\"\\!\\(\\*Cell[TextData[Cell[BoxData[FormBox[\\n \
RowBox[{\\nSuperscriptBox[\\\"g\\\", \\\"\[Prime]\\\"], \\\"(\\\", \\\"z\\\", \
\\\")\\\"}], \\n  TraditionalForm]],FormatType->TraditionalForm]]]\\)\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 14, FontFamily -> "Times", 
              GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], 
        Scaled[{0.8, 0.2}], 
        ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
        BaseStyle -> {FontSize -> Larger}]}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {
         FormBox[
         "\"\\!\\(\\*StyleBox[\\\"z\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
          TraditionalForm], None}}, FrameStyle -> Directive[{
         AbsoluteThickness[0], 
         GrayLevel[0]}], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
      LabelStyle -> {14, FontFamily -> "Times", 
        GrayLevel[0]}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-4, 4}, {-0.9993292995201363, 0.9999996208908208}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, RotateLabel -> False, 
      Ticks -> {Automatic, Automatic}}, 
     BaseStyle -> {14, FontFamily -> "Times", 
       GrayLevel[0]}], 
    InterpretTemplate[Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1:eJwt2Xk4VN//APCxM8aMRBFaZEsqypKlzk32ohAVWUOohIqSKLK0WKJ8tItI
kYQi5FyVJdlTlrLvY2auZWxj+53f83z/us/rue+Z+z7vc97n3Oe5W9wuWHtw
k0ikRS4S6f+vO8E6+uoqDbdin/W7ySHghYWtMQscGn5d/2NkMHJegbri9AwN
F9xinngRebeyhdvwOA1/N6Jy3wNZe82tzro2Gh5/I1HeDBkbmKx99J6G7wqT
SaEiW0fXZ+9xpuGXJXVcEhcImHTgr9kOexpuIpFjege5dXF0RNGWhgucnlAM
R7bz45XfcIiGX8r+/N0f2eGk3lOSNg1/FjoYcRTZffube/VUGi7fuIaPghzU
eOv8mXIqft9CsCB4noD3xgPb2MVU/GKz2gU/5DQB7wPhBVR8u8EJWU/kOmAh
8SyLirsEHj9ihSyXJ/GlJZGKM804AkrIDQmZlP1nqPil0KSSxjkCKlrXZIuL
UvGKm+EPJZD1fUsk0shUPFwu3EcI2epOTtguPip+pX505/IsAUO+JtiYc0Rw
vtyEyEHklt0nF8MGRfDW2h9n8pGvr6WbjxeL4H/bLo6bI7e2CtMrXEXwqwMJ
Rr4zBLzp/rE8+5QI7j97o8EFeSfbKenhcRHc4vRhYxvkmLX5+t4WIvj9FVnu
vcj7rE/Ei+qI4OViB7NIyJmNrzScRUVwz1bW4zg2Aa/U7gtbKqfgI8qZgU+n
CahgP2Iz/JmCS+OPc+8ht4wlKDcVUvC8/istIciqQoPN6W8p+Pq7d7tOIfeZ
3JE/lEzBjR5or0gjm1f++fHoPAUvuP3aOnmKgLL4BXFtGQrelfIrJngS1VdM
85Luegr+gVv8jBdysAfn1z4xCi5e/XGnHfIfcmSSoSAFH0zIuaqOnGD7WMya
LYw3/zJbHJ4gIM/4d9HzdcL49rMDSRbIYxIbRNJDhPF9ThRTQYKAKV495zKD
hHGRWCWpaRYBjUtf1b0JEMaH0toau5DTXHbdy/MSxpvaApj5yKeyDYXLjwnj
nPKpIQfkRuyCUIeqML72X3BuFpOAH89+56N1kfE73rOvVRkE3LvZVz2zjYyv
VPg0rEEuaV3vuK+FjE9nxDbNjhMQ33e28Gw1GW//seEMjlxLEztd84GMi8sM
t1kh9xY44zejyDi/FNfT83QCkpc4wexdZJzvm/D+6FECxua9yryrQsb9N+wJ
PIMs6mHZIqdAxrnC3CJMkCUaXm6z2kDGZX0npQWQN6eatr/jJeM3azzBrREC
ahoma57pEMJ3AjfpwGECutxTn+gIF8IT0jwuaQ2iehcmRtVfF8In87wc1iI/
/DctU3FFCOcPUFk3MYDyVf1kluUrhK/aCfO/Qd5Tr5seaC+EFwXK/JBE5qca
2q3dLYTnU93eEn0EzIm3KzvcJ4iPdRXqXO0hYFVRkTX2TxC/kOSsdBS5r0dy
bE+bIP7zlGmfIvI6tb8S0vWCOOBpKv7VTcCwJucLY8WCeOrXGEIF2XqNt1xU
giC+4r/hQOM/As4nXouBQBDf829rPLODgCMyFXRjXUF8mfws6DPyn0x+iwYN
QbxsmCMZiVxQcn9N1zZBPKmk75Y0sm//68ectYL4999vZw3bCTig3pqjOSqA
q8gQ9Nt/UD83qTZnJwjg1pYGWEcLAcvsA/bsuSuAy4UQYU+QsweLHpZECuCl
P93POiLHzBvY/wgWwJ86dh/sbSbgwc0nB4bdBXBymDerr4mAxRciZ7boCOAj
JPxrawMB06ndUil9/HjdeWvq5VoCJjoAAZ1//HiC7SGNHcjhWansjj/8OH2b
CmfwBwHdDE43Stfx4x16j0/bIMsFjt568Ykf/1K49cX2GrR+u6aIzLv8eP9w
ltGPSgKm5ghUfdTkxx0OViR+xFG/LHgV2Kmh55nM5rkg3zCuTZ1T4cd/faxy
FEZ26b13TWczP2483uPiDAm4SVxM/QuZH9f2t1niKifg82syT7/38OHLujkk
9VICPjVXD/h1mw/XPmLYrv6RgPLC5rVNt/hwUXbAidZCVJ+fbnINYXy4cZml
eyByyeEHLTWXkR82ynwuIGCH5dzuclc+/K2PLJdOPpp/my/TWTp8uJRit4Tc
ewLGO5hdDh3jxWvTjhs8zEL3Zdzqrw3y4hni7eLKyM//BStc7eHFZZ+VOJe8
JmCuY87vi7958c7P5FNdmWg/caZpeVfw4tsyzv2TySCgoPvvWZtHvDj5prHn
zZeovudcr2wz48U/tLV8+/uIgN1xTk9LDvLiCvBajBWy7gcH/NB+XlzQ+kBS
VQoBp2ZsBX338OK3NY2Dcv8joGuYeUq+LC/+nDTuePkhOr8S9xTrTfHgPJ0S
1d0JBFwp4pu3eMKDs2dGGyWjCWjfyS3T85AHz7ko4Xo5ioCfllaBXwIPfvry
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
             "]]}, "Charting`Private`Tag$25447#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
//e+Cfn/903/A6x5RJI=
             "]]}, "Charting`Private`Tag$25447#2"]}}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {
          "\!\(\*StyleBox[\"z\",FontSlant->\"Italic\"]\)", None}}, FrameStyle -> 
        Directive[{
           AbsoluteThickness[0], 
           GrayLevel[0]}], 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
        LabelStyle -> {14, FontFamily -> "Times", 
          GrayLevel[0]}, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
          None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{-4, 4}, {-0.9993292995201363, 0.9999996208908208}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, RotateLabel -> False, 
        Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[FontFamily -> "Times", 
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Directive[FontFamily -> "Times", 
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
         "\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\"g\", \"(\", \
\"z\", \")\"}], TraditionalForm]],FormatType->TraditionalForm]]]\)", 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\n RowBox[{\n\
SuperscriptBox[\"g\", \"\[Prime]\"], \"(\", \"z\", \")\"}], \n  \
TraditionalForm]],FormatType->TraditionalForm]]]\)"}, LegendMarkers -> None, 
         LabelStyle -> {14, FontFamily -> "Times", 
           GrayLevel[0]}, LegendLayout -> "Column"]], {0.8, 0.2}, 
       Identity]]& ], Editable -> True, Selectable -> True, 
    SelectWithContents -> False, AutoDelete -> True], 
   TagBox[
    GraphicsBox[{{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1: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
p4aJKZ4zlLL3E76uhvB/z0Pg/5+H/A9RpESx
            "]]}, Annotation[#, "Charting`Private`Tag$25511#1"]& ]}}, {}}, {
       InsetBox[
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*Cell[TextData[Cell[BoxData[FormBox[\\n \
RowBox[{\\nSuperscriptBox[\\\"g\\\", \\\"\[Prime]\\\"], \\\"(\\\", \\\"z\\\", \
\\\")\\\"}], \\n  TraditionalForm]],FormatType->TraditionalForm]]]\\)\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Times", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline), BaseStyle -> {14, FontFamily -> "Times", 
                    GrayLevel[0]}], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontSize -> 14, FontFamily -> "Times", 
              GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
            TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], 
        Scaled[{0.8, 0.2}], 
        ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
        BaseStyle -> {FontSize -> Larger}]}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {
         FormBox[
         "\"\\!\\(\\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\\\"g\\\", \\\
\"(\\\", \\\"z\\\", \\\")\\\"}], \
TraditionalForm]],FormatType->TraditionalForm]]]\\)\"", TraditionalForm], 
         None}}, FrameStyle -> Directive[{
         AbsoluteThickness[0], 
         GrayLevel[0]}], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
      LabelStyle -> {14, FontFamily -> "Times", 
        GrayLevel[0]}, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-1, 1}, {0., 0.9999999763056703}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, RotateLabel -> False, 
      Ticks -> {Automatic, Automatic}}, 
     BaseStyle -> {14, FontFamily -> "Times", 
       GrayLevel[0]}], 
    InterpretTemplate[Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
p4aJKZ4zlLL3E76uhvB/z0Pg/5+H/A9RpESx
             "]]}, "Charting`Private`Tag$25511#1"]}}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
        FrameLabel -> {{None, None}, {
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[RowBox[{\"g\", \"(\", \"z\
\", \")\"}], TraditionalForm]],FormatType->TraditionalForm]]]\)", None}}, 
        FrameStyle -> Directive[{
           AbsoluteThickness[0], 
           GrayLevel[0]}], 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageMargins -> 1, ImageSize -> 324, 
        LabelStyle -> {14, FontFamily -> "Times", 
          GrayLevel[0]}, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
          None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{-1, 1}, {0., 0.9999999763056703}}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, RotateLabel -> False, 
        Ticks -> {Automatic, Automatic}}], 
      Placed[
       Unevaluated[
        LineLegend[{
          Directive[FontFamily -> "Times", 
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
         "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\n RowBox[{\n\
SuperscriptBox[\"g\", \"\[Prime]\"], \"(\", \"z\", \")\"}], \n  \
TraditionalForm]],FormatType->TraditionalForm]]]\)"}, LegendMarkers -> None, 
         LabelStyle -> {14, FontFamily -> "Times", 
           GrayLevel[0]}, LegendLayout -> "Column"]], {0.8, 0.2}, 
       Identity]]& ], Editable -> True, Selectable -> True, 
    SelectWithContents -> False, AutoDelete -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.832242805532927*^9, 3.832242817423663*^9}, {
  3.8322428620599613`*^9, 3.832242927684134*^9}, {3.832242957769503*^9, 
  3.832242965731495*^9}},
 CellLabel->
  "Out[779]=",ExpressionUUID->"21910ffc-7119-4ce1-b49a-082dd81a455b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "(", "z", ")"}], "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["e", 
       RowBox[{"-", "z"}]]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"396d5f5d-fb53-43a6-aa5f-520da0664c75"]], \
"Subsubsection",
 CellChangeTimes->{{3.832242679270975*^9, 3.832242691734748*^9}, 
   3.832242784307555*^9},ExpressionUUID->"9ca97b9d-ca6d-4618-b56c-\
2d902ea24d48"],

Cell[TextData[{
 "Suppose we use a Fermi-Dirac function as the sigmoid function,\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], "=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["e", 
       RowBox[{"-", "z"}]]}]]}], TraditionalForm]],ExpressionUUID->
  "02cea2ce-76b6-4046-b686-f53cf91a8215"],
 ".\nThe derivative of this function is\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", "\[Prime]"], "(", "z", ")"}], "=", 
    FractionBox[
     SuperscriptBox["e", "z"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["e", "z"]}], ")"}], "2"]]}], TraditionalForm]],
  ExpressionUUID->"ca80f1f2-2a74-4633-80ba-e7f15029b2d6"],
 "\nWe may write the ",
 StyleBox["derivative",
  FontSlant->"Italic"],
 " of the function in terms of the ",
 StyleBox["value",
  FontSlant->"Italic"],
 " of the function instead:",
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", "\[Prime]"], "(", "z", ")"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "+", 
        SuperscriptBox["e", 
         RowBox[{"-", "z"}]]}]], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         RowBox[{"1", "+", 
          SuperscriptBox["e", 
           RowBox[{"-", "z"}]]}]]}], ")"}]}], "=", 
     RowBox[{"h", "(", 
      RowBox[{"g", "(", "z", ")"}], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"69a2a875-56c9-490c-ab86-f3390cc3bdb4"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"h", "(", "g", ")"}], "=", 
    RowBox[{"g", "(", 
     RowBox[{"1", "-", "g"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "33a89b87-ebc9-40f3-a966-c1ce9a97e918"],
 ".\t"
}], "Text",
 CellChangeTimes->{{3.832071065394548*^9, 3.8320710667595053`*^9}, {
  3.8320724249095583`*^9, 
  3.832072472422161*^9}},ExpressionUUID->"a164135d-5c7e-44dd-ab47-\
7a71bd2dcc05"],

Cell[TextData[{
 "We can derive this directly as follows:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       SuperscriptBox["e", 
        RowBox[{"-", "z"}]]}]], "=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"tanh", " ", 
         FractionBox["z", "2"]}]}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"63c5b16d-f907-4d2a-ae7c-b24085671277"],
 "\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"2", 
     RowBox[{"arctanh", "(", 
      RowBox[{
       RowBox[{"2", "\[InvisibleSpace]", "g"}], "-", "1"}], ")"}]}]}], 
   TraditionalForm]],ExpressionUUID->"d2140bc2-fa7e-4bc6-9e55-b507bed90f95"],
 "\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "z"}], 
     RowBox[{"\[PartialD]", "g"}]], "=", 
    FractionBox["1", 
     RowBox[{"g", "(", 
      RowBox[{"1", "-", "g"}], ")"}]]}], TraditionalForm]],ExpressionUUID->
  "8c70ebbb-4457-4117-b4b5-5f1f52b20a53"],
 "\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "g"}], 
     RowBox[{"\[PartialD]", "z"}]], "=", 
    RowBox[{"g", "(", 
     RowBox[{"1", "-", "g"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "439d0790-1d67-42d3-a562-5999bbcce33c"],
 "."
}], "Text",
 CellChangeTimes->{{3.83207100554121*^9, 3.832071064856901*^9}, 
   3.832072425551812*^9, {3.832072479933947*^9, 
   3.832072484226809*^9}},ExpressionUUID->"975a1bbd-83f8-4864-a6cb-\
56185e5e802a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"g", "(", "z", ")"}], "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "+", 
    RowBox[{"z", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["z", "2"]}]]}], ")"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"f4c5581a-cfbb-422b-80cb-b04704e5e60a"]], \
"Subsubsection",
 CellChangeTimes->{{3.832242679270975*^9, 3.832242707445285*^9}, 
   3.8322427862357683`*^9},ExpressionUUID->"d641f9e6-6640-4cd8-8e34-\
2fc5483d3d8b"],

Cell[TextData[{
 "A similar result can be obtained for any other type of sigmoid function.  \
For example, suppose\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g", "(", "z", ")"}], "=", 
    RowBox[{
     FractionBox["1", "2"], "+", 
     RowBox[{
      FractionBox["1", "2"], "\[InvisibleSpace]", 
      FractionBox["z", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox["z", "2"]}]]]}]}]}], TraditionalForm]],ExpressionUUID->
  "bd3fddbf-1cd9-47a2-8484-84fb6fc42a24"],
 "\t\t\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"2", "\[InvisibleSpace]", "g"}], "-", "1"}], "=", 
    FractionBox["z", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["z", "2"]}]]]}], TraditionalForm]],ExpressionUUID->
  "64e080e0-e78b-40bc-a78a-56f4650d48c2"],
 " \[Therefore] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "\[InvisibleSpace]", "g"}], "-", "1"}], ")"}], "2"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["z", "2"]}], ")"}]}], "=", 
    SuperscriptBox["z", "2"]}], TraditionalForm]],ExpressionUUID->
  "6bc0bc6f-83aa-4d88-88fa-7b217bae732e"],
 " \[Therefore] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", "\[InvisibleSpace]", 
         SuperscriptBox["g", "2"]}], "-", 
        RowBox[{"4", "\[InvisibleSpace]", "g"}]}], ")"}], 
      SuperscriptBox["z", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "\[InvisibleSpace]", "g"}], "-", "1"}], ")"}], "2"]}], 
    "=", "0"}], TraditionalForm]],ExpressionUUID->
  "df4c7968-79c7-4bd8-a0c2-6048327f76e0"],
 " \n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{"\[PlusMinus]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"2", "\[InvisibleSpace]", "g"}], "-", "1"}], 
       RowBox[{"4", "\[InvisibleSpace]", 
        RowBox[{"g", "(", 
         RowBox[{"g", "-", "1"}], ")"}]}]]]}]}], TraditionalForm]],
  ExpressionUUID->"eee991c7-cc51-4d32-b3b9-f7c1382ec895"],
 "\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "z"}], 
     RowBox[{"\[PartialD]", "g"}]], "=", 
    RowBox[{"[", 
     RowBox[{"some", " ", "sleight", " ", "of", " ", "hand"}], "]"}]}], 
   TraditionalForm]],ExpressionUUID->"81655f38-e575-40c2-97d7-79535ace4d65"],
 "\t\t\t\t\n\[Therefore]\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "g"}], 
     RowBox[{"\[PartialD]", "z"}]], "=", 
    RowBox[{"4", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["g", 
        RowBox[{"3", "/", "2"}]], "(", 
       RowBox[{"1", "-", "g"}], ")"}], 
      RowBox[{"3", "/", "2"}]]}]}], TraditionalForm]],ExpressionUUID->
  "12821103-aecb-4418-9d2a-19b3a70528ec"],
 "."
}], "Text",
 CellChangeTimes->{{3.8320710523906612`*^9, 3.832071088910244*^9}, {
   3.83207118474679*^9, 3.832071210910315*^9}, 3.8320714212089243`*^9, {
   3.832071513692308*^9, 3.832071538977455*^9}, {3.832071627970233*^9, 
   3.8320716680067787`*^9}, {3.832071925102413*^9, 3.832072064416418*^9}, {
   3.83207214563307*^9, 3.832072145855801*^9}, {3.8320723865150557`*^9, 
   3.832072407979553*^9}, {3.8320724898269167`*^9, 
   3.832072491804873*^9}},ExpressionUUID->"98ed9b66-6cdf-405b-8446-\
ae28afcdbd71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "z_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", "2"], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     FractionBox["z", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["z", "2"]}]]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", "z"], 
   RowBox[{"g", "[", "z", "]"}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"4", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g", "[", "z", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"g", "[", "z", "]"}]}], ")"}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}], "//", "FullSimplify"}], "//", 
  "PowerExpand"}]}], "Input",
 CellChangeTimes->{{3.832072270375972*^9, 3.832072362005742*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"03ab884a-28c2-49e3-a1da-8b106519588d"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["z", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8320722783415623`*^9, 3.832072283129486*^9}, {
  3.8320723246841507`*^9, 3.8320723622404623`*^9}},
 CellLabel->
  "Out[301]=",ExpressionUUID->"a27d1494-fd01-4668-bc0d-fb3637fe7ace"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["z", "2"]}], ")"}], 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.8320722783415623`*^9, 3.832072283129486*^9}, {
  3.8320723246841507`*^9, 3.8320723622429647`*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"99e4a8e0-d034-42f0-ace0-9c849b36a9d8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Backpropagation"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 
   3.832072502900221*^9}},ExpressionUUID->"2ed76352-6f57-4d27-824e-\
3a23ba7f00e9"],

Cell[TextData[{
 "Recall that\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}]], "=", 
    RowBox[{"g", "(", 
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], "j"], 
      RowBox[{
       SubsuperscriptBox["w", 
        RowBox[{"i", "\[InvisibleSpace]", "j"}], 
        RowBox[{"(", "l", ")"}]], 
       SubsuperscriptBox["x", "j", 
        RowBox[{"(", "l", ")"}]]}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"6c77ed29-188c-4144-ac61-5a4ea2013d99"],
 ".\nTake partial derivatives:\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["x", "i", 
       RowBox[{"(", 
        RowBox[{"l", "+", "1"}], ")"}]]}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "l", ")"}]]}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "\[Prime]"], "(", 
       RowBox[{
        UnderscriptBox[
         StyleBox["\[Sum]",
          FontSize->24], "j"], 
        RowBox[{
         SubsuperscriptBox["w", 
          RowBox[{"i", "\[InvisibleSpace]", "j"}], 
          RowBox[{"(", "l", ")"}]], 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "l", ")"}]]}]}], ")"}], 
      SubsuperscriptBox["x", "j", 
       RowBox[{"(", "l", ")"}]]}], "=", 
     RowBox[{
      RowBox[{"h", "(", 
       SubsuperscriptBox["x", "i", 
        RowBox[{"(", 
         RowBox[{"l", "+", "1"}], ")"}]], ")"}], 
      SubsuperscriptBox["x", "j", 
       RowBox[{"(", "l", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "e1fad04b-83d4-449a-bbd0-ddd36506cde4"],
 ",\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["x", "i", 
       RowBox[{"(", 
        RowBox[{"l", "+", "1"}], ")"}]]}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["x", "j", 
       RowBox[{"(", "l", ")"}]]}]], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "\[Prime]"], "(", 
       RowBox[{
        UnderscriptBox[
         StyleBox["\[Sum]",
          FontSize->24], "j"], 
        RowBox[{
         SubsuperscriptBox["w", 
          RowBox[{"i", "\[InvisibleSpace]", "j"}], 
          RowBox[{"(", "l", ")"}]], 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "l", ")"}]]}]}], ")"}], 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "l", ")"}]]}], "=", 
     RowBox[{
      RowBox[{"h", "(", 
       SubsuperscriptBox["x", "i", 
        RowBox[{"(", 
         RowBox[{"l", "+", "1"}], ")"}]], ")"}], 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "l", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "d49c242f-3c29-412d-8e99-35750602daa9"],
 "."
}], "Text",
 CellChangeTimes->{{3.83206832062217*^9, 3.832068362646289*^9}, {
   3.832068466228835*^9, 3.8320684985928373`*^9}, {3.8320685592122393`*^9, 
   3.8320685707630177`*^9}, {3.832068770132443*^9, 3.832068843606699*^9}, {
   3.8320688998214903`*^9, 3.832068905369164*^9}, {3.832072510953424*^9, 
   3.832072536748204*^9}, 
   3.83207351955879*^9},ExpressionUUID->"74085cc9-a97d-4c58-812c-\
d349967d2bc1"],

Cell[TextData[{
 "Let the cost function be\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       UnderscriptBox[
        StyleBox["\[Sum]",
         FontSize->24], "n"], 
       RowBox[{
        UnderscriptBox[
         StyleBox["\[Sum]",
          FontSize->24], "i"], 
        SuperscriptBox[
         RowBox[{"[", 
          RowBox[{
           SubsuperscriptBox["x", 
            RowBox[{"n", "\[InvisibleSpace]", "i"}], 
            RowBox[{"(", "3", ")"}]], "-", 
           SubscriptBox["y", 
            RowBox[{"n", "\[InvisibleSpace]", "i"}]]}], "]"}], "2"]}]}]}], 
     "=", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{
       UnderscriptBox[
        StyleBox["\[Sum]",
         FontSize->24], "n"], 
       RowBox[{
        UnderscriptBox[
         StyleBox["\[Sum]",
          FontSize->24], "i"], 
        SuperscriptBox[
         RowBox[{"[", 
          SubsuperscriptBox["\[Epsilon]", 
           RowBox[{"n", "\[InvisibleSpace]", "i"}], 
           RowBox[{"(", "3", ")"}]], "]"}], "2"]}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"a9e4e1f3-e9ad-4f08-9e24-e46f50052ef8"],
 "\nwhere ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is the data point index and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", 
     RowBox[{"n", "\[InvisibleSpace]", "i"}], 
     RowBox[{"(", "3", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["x", 
      RowBox[{"n", "\[InvisibleSpace]", "i"}], 
      RowBox[{"(", "3", ")"}]], "-", 
     SubscriptBox["y", 
      RowBox[{"n", "\[InvisibleSpace]", "i"}]]}]}], TraditionalForm]],
  ExpressionUUID->"e7b0c9a7-fa94-4987-b929-3f69dc0d77ff"],
 ".",
 "\n",
 "\nWe wish to minimize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "(", 
    RowBox[{"{", 
     SubsuperscriptBox["w", 
      RowBox[{"i", "\[InvisibleSpace]", "j"}], 
      RowBox[{"(", "l", ")"}]], "}"}], ")"}], TraditionalForm]],
  ExpressionUUID->"e235069e-d2ba-4b9e-b768-63a77ff0efee"],
 " using gradient descent, so we need to be able to compute the derivatives \
of ",
 StyleBox["F",
  FontSlant->"Italic"],
 " with respect to all the weights.",
 "  Suppressing the ",
 StyleBox["n",
  FontSlant->"Italic"],
 " index for brevity,",
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "2", ")"}]]}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], "n"], 
     RowBox[{
      SubsuperscriptBox["\[Epsilon]", "i", 
       RowBox[{"(", "3", ")"}]], 
      FractionBox[
       RowBox[{"\[PartialD]", 
        SubsuperscriptBox["\[Epsilon]", "i", 
         RowBox[{"(", "3", ")"}]]}], 
       RowBox[{"\[PartialD]", 
        SubsuperscriptBox["w", 
         RowBox[{"i", "\[InvisibleSpace]", "j"}], 
         RowBox[{"(", "2", ")"}]]}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "8c1a54bf-a2bf-4185-b670-cda11eb44a34"],
 "\t\t\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], "n"], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "i", 
          RowBox[{"(", "3", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["w", 
          RowBox[{"i", "\[InvisibleSpace]", "j"}], 
          RowBox[{"(", "2", ")"}]]}]]}]}], "=", 
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], "n"], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "i", 
         RowBox[{"(", "3", ")"}]], ")"}], 
       SubsuperscriptBox["x", "j", 
        RowBox[{"(", "2", ")"}]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "f14ec223-0aeb-4df3-9c7f-b94005dc9767"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"j", "\[InvisibleSpace]", "k"}], 
       RowBox[{"(", "1", ")"}]]}]], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], 
       RowBox[{"n", "\[InvisibleSpace]", "i"}]], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "i", 
          RowBox[{"(", "3", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "2", ")"}]]}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "2", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["w", 
          RowBox[{"j", "\[InvisibleSpace]", "k"}], 
          RowBox[{"(", "1", ")"}]]}]]}]}], "=", 
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], 
       RowBox[{"n", "\[InvisibleSpace]", "i"}]], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "i", 
         RowBox[{"(", "3", ")"}]], ")"}], 
       SubsuperscriptBox["w", 
        RowBox[{"i", "\[InvisibleSpace]", "j"}], 
        RowBox[{"(", "2", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "j", 
         RowBox[{"(", "2", ")"}]], ")"}], 
       SubsuperscriptBox["x", "k", 
        RowBox[{"(", "1", ")"}]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "8831ad05-4e82-48f1-9595-96a59f37bba1"],
 "\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"k", "\[InvisibleSpace]", "l"}], 
       RowBox[{"(", "0", ")"}]]}]], "=", 
    RowBox[{
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], 
       RowBox[{"n", "\[InvisibleSpace]", "i", "\[InvisibleSpace]", "j"}]], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "i", 
          RowBox[{"(", "3", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "2", ")"}]]}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "j", 
          RowBox[{"(", "2", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "k", 
          RowBox[{"(", "1", ")"}]]}]], 
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["x", "k", 
          RowBox[{"(", "1", ")"}]]}], 
        RowBox[{"\[PartialD]", 
         SubsuperscriptBox["w", 
          RowBox[{"k", "\[InvisibleSpace]", "l"}], 
          RowBox[{"(", "0", ")"}]]}]]}]}], "=", 
     RowBox[{
      UnderscriptBox[
       StyleBox["\[Sum]",
        FontSize->24], 
       RowBox[{"n", "\[InvisibleSpace]", "i", "\[InvisibleSpace]", "j"}]], 
      RowBox[{
       SubsuperscriptBox["\[Epsilon]", "i", 
        RowBox[{"(", "3", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "i", 
         RowBox[{"(", "3", ")"}]], ")"}], 
       SubsuperscriptBox["w", 
        RowBox[{"i", "\[InvisibleSpace]", "j"}], 
        RowBox[{"(", "2", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "j", 
         RowBox[{"(", "2", ")"}]], ")"}], 
       SubsuperscriptBox["w", 
        RowBox[{"j", "\[InvisibleSpace]", "k"}], 
        RowBox[{"(", "1", ")"}]], 
       RowBox[{"h", "(", 
        SubsuperscriptBox["x", "k", 
         RowBox[{"(", "1", ")"}]], ")"}], 
       SubsuperscriptBox["x", "l", 
        RowBox[{"(", "0", ")"}]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "19e58a9d-fa59-4f5b-ad58-8dffba151d54"],
 "."
}], "Text",
 CellChangeTimes->{{3.8320683056846533`*^9, 3.83206830979564*^9}, {
  3.832068906393764*^9, 3.832068948125464*^9}, {3.832068980569572*^9, 
  3.8320693012681437`*^9}, {3.832069357466144*^9, 3.8320693635984373`*^9}, {
  3.8320694070500593`*^9, 3.832069653631034*^9}, {3.832069701412867*^9, 
  3.832069707290513*^9}, {3.832069848752068*^9, 3.832069976375114*^9}, {
  3.832070070241062*^9, 3.832070075189549*^9}, {3.832070545790188*^9, 
  3.8320706038516073`*^9}, {3.832072543618347*^9, 
  3.832072600089466*^9}},ExpressionUUID->"e8cdd4fc-fe3c-4426-ab6c-\
bcefa534202e"],

Cell[TextData[{
 "The derivatives above appear complicated, but we can write them in a simple \
form using \[OpenCurlyDoubleQuote]backpropagation\[CloseCurlyDoubleQuote].  \
Let\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", "i", 
     RowBox[{"(", "3", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["x", "i", 
      RowBox[{"(", "3", ")"}]], "-", 
     SubscriptBox["y", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "7f988d9a-fa3c-44b8-bebf-f42eb491da4c"],
 "\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Delta]", "i", 
     RowBox[{"(", "3", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["\[Epsilon]", "i", 
      RowBox[{"(", "3", ")"}]], 
     RowBox[{"h", "(", 
      SubsuperscriptBox["x", "i", 
       RowBox[{"(", "3", ")"}]], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "bcf0bec7-ff4c-47b1-b337-81cc357d0609"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", "j", 
     RowBox[{"(", "2", ")"}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], "i"], 
     RowBox[{
      SubsuperscriptBox["\[Delta]", "i", 
       RowBox[{"(", "3", ")"}]], 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "2", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "2f140611-c636-4b4b-a389-d1b7eae01562"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Delta]", "j", 
     RowBox[{"(", "2", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["\[Epsilon]", "j", 
      RowBox[{"(", "2", ")"}]], 
     RowBox[{"h", "(", 
      SubsuperscriptBox["x", "j", 
       RowBox[{"(", "2", ")"}]], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "6ed24103-5759-4101-900f-ada597a4e5d0"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", "k", 
     RowBox[{"(", "1", ")"}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], "j"], 
     RowBox[{
      SubsuperscriptBox["\[Delta]", "j", 
       RowBox[{"(", "2", ")"}]], 
      SubsuperscriptBox["w", 
       RowBox[{"j", "\[InvisibleSpace]", "k"}], 
       RowBox[{"(", "1", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "7aa1c662-2e90-4cc2-aaea-e0a566b404c3"],
 "\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Delta]", "k", 
     RowBox[{"(", "1", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["\[Epsilon]", "k", 
      RowBox[{"(", "1", ")"}]], 
     RowBox[{"h", "(", 
      SubsuperscriptBox["x", "k", 
       RowBox[{"(", "1", ")"}]], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "2e03439e-4747-4767-a912-03a6fae40833"],
 "."
}], "Text",
 CellChangeTimes->{{3.832069993750198*^9, 3.832070139891539*^9}, {
  3.832070183519618*^9, 3.8320701887780647`*^9}, {3.8320702315145407`*^9, 
  3.8320702497693453`*^9}, {3.832070292048191*^9, 3.832070292048564*^9}, {
  3.832070335773292*^9, 3.832070428754581*^9}, {3.8320706447531357`*^9, 
  3.832070644753572*^9}, {3.832072602875638*^9, 
  3.832072605777952*^9}},ExpressionUUID->"2240cb1d-dd3a-4244-b008-\
edd48089346e"],

Cell[TextData[{
 "Then\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"i", "\[InvisibleSpace]", "j"}], 
       RowBox[{"(", "2", ")"}]]}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], "n"], 
     RowBox[{
      SubsuperscriptBox["\[Delta]", "i", 
       RowBox[{"(", "3", ")"}]], 
      SubsuperscriptBox["x", "j", 
       RowBox[{"(", "2", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "a747c156-a8f8-4705-bdb8-38b593ef60af"],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"j", "\[InvisibleSpace]", "k"}], 
       RowBox[{"(", "1", ")"}]]}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], 
      RowBox[{"n", "\[InvisibleSpace]", "i"}]], 
     RowBox[{
      SubsuperscriptBox["\[Delta]", "j", 
       RowBox[{"(", "2", ")"}]], 
      SubsuperscriptBox["x", "k", 
       RowBox[{"(", "1", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "608e48a7-2731-42b7-adc2-d169d15b8d7b"],
 "\t\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "F"}], 
     RowBox[{"\[PartialD]", 
      SubsuperscriptBox["w", 
       RowBox[{"j", "\[InvisibleSpace]", "k"}], 
       RowBox[{"(", "0", ")"}]]}]], "=", 
    RowBox[{
     UnderscriptBox[
      StyleBox["\[Sum]",
       FontSize->24], 
      RowBox[{"n", "\[InvisibleSpace]", "j"}]], 
     RowBox[{
      SubsuperscriptBox["\[Delta]", "k", 
       RowBox[{"(", "1", ")"}]], 
      SubsuperscriptBox["x", "l", 
       RowBox[{"(", "0", ")"}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "ae4676b3-b9c4-49cf-9908-fc5ff3b0a7cc"],
 "."
}], "Text",
 CellChangeTimes->{{3.832070427401833*^9, 3.832070475239656*^9}, {
  3.832070518641468*^9, 3.832070523200513*^9}, {3.832070618436262*^9, 
  3.832070656529409*^9}, {3.8320730784491863`*^9, 
  3.832073111215811*^9}},ExpressionUUID->"711c2bd9-a067-4708-be9b-\
cf5ad63a521d"],

Cell[TextData[{
 "In principle, we may minimize ",
 StyleBox["F",
  FontSlant->"Italic"],
 " with respect to ",
 StyleBox["w",
  FontSlant->"Italic"],
 ", performing a sum over ",
 StyleBox["n",
  FontSlant->"Italic"],
 " for each derivative computation."
}], "Text",
 CellChangeTimes->{{3.8320731103487377`*^9, 
  3.8320731967330008`*^9}},ExpressionUUID->"709815d6-47d0-42da-88c5-\
f70ccabeb809"],

Cell["\<\
In practice, one considers the data points one by one as follows:\
\>", "Text",
 CellChangeTimes->{{3.832072679344145*^9, 3.8320730776143913`*^9}, {
  3.832073131080821*^9, 3.832073139359425*^9}, {3.8320731995233707`*^9, 
  3.832073270307231*^9}},ExpressionUUID->"9d5d88c4-f798-4d58-82ad-\
3eac30b761d6"],

Cell[TextData[{
 "1.  Initialize ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    SubscriptBox["w", 
     RowBox[{"i", "\[InvisibleSpace]", "j"}]], "}"}], TraditionalForm]],
  ExpressionUUID->"fdfc5cbf-d3a7-4c98-b280-e86ac0e9d513"],
 " randomly.  \n2.  For each training data point ",
 StyleBox["n",
  FontSlant->"Italic"],
 ":\n\t\[Dash] Given training inputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", "0", ")"}]], "\[Congruent]", 
    SubscriptBox["x", "i"]}], TraditionalForm]],ExpressionUUID->
  "4bda62d6-a3dc-44a7-b734-cbcd190a385a"],
 ", compute neuron values ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", "1", ")"}]], ",", 
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", "2", ")"}]], ",", 
    SubsuperscriptBox["x", "i", 
     RowBox[{"(", "3", ")"}]]}], TraditionalForm]],ExpressionUUID->
  "fc3dfb49-cf92-457b-ad0f-3844f7b642ba"],
 " using feedforward equations.\n\t\[Dash] Calculate level-3 error ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Epsilon]", "i", 
     RowBox[{"(", "3", ")"}]], "=", 
    RowBox[{
     SubsuperscriptBox["x", "i", 
      RowBox[{"(", "3", ")"}]], "-", 
     SubscriptBox["y", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "a771c98d-b47c-4963-8a81-aa90dd90f047"],
 ".\n\t\[Dash] Calculate derivatives ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "F"}], 
    RowBox[{"\[PartialD]", 
     SubsuperscriptBox["w", 
      RowBox[{"i", "\[InvisibleSpace]", "j"}], 
      RowBox[{"(", "l", ")"}]]}]], TraditionalForm]],ExpressionUUID->
  "70fb3e53-f1f6-4f02-ac3c-4e0191b934e3"],
 " at all levels using backpropagation.\n\t\[Dash] Update each weight using \
learning rule ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["w", 
     RowBox[{"i", "\[InvisibleSpace]", "j"}], 
     RowBox[{"(", "l", ")"}]], ":=", 
    RowBox[{
     SubsuperscriptBox["w", 
      RowBox[{"i", "\[InvisibleSpace]", "j"}], 
      RowBox[{"(", "l", ")"}]], "-", 
     RowBox[{"\[Eta]", 
      FractionBox[
       RowBox[{"\[PartialD]", "F"}], 
       RowBox[{"\[PartialD]", 
        SubsuperscriptBox["w", 
         RowBox[{"i", "\[InvisibleSpace]", "j"}], 
         RowBox[{"(", "2", ")"}]]}]]}]}]}], TraditionalForm]],ExpressionUUID->
  "4b5f72be-2163-4ac2-b21a-b7ab1e8c83d2"],
 " with appropriate ",
 StyleBox["learning rate",
  FontSlant->"Italic"],
 " \[Eta].\t\n3.  Repeat step 2 (sweep through data again and again) until \
convergence."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, {3.8320697218054037`*^9, 3.832069767590661*^9}, {
   3.8320698025403347`*^9, 3.8320698379521017`*^9}, {3.832073217043024*^9, 
   3.832073256004232*^9}},ExpressionUUID->"1458d132-9140-4ffe-976f-\
d7df9efd2035"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Additional remarks"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 3.832072502900221*^9}, {3.83207369226546*^9, 
   3.8320736936544228`*^9}},ExpressionUUID->"548d17b4-a6b7-41a5-9aa1-\
45741f46f137"],

Cell[TextData[{
 "Each layer may have a different number of neurons, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"(", "l", ")"}]], TraditionalForm]],ExpressionUUID->
  "24f765f7-ec82-4059-b574-03c3364193fa"],
 " (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"l", "=", "0"}], ",", "1", ",", "2", ",", "3"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"552a5b75-acf3-4da2-bd9b-0d01b26dbab2"],
 ".\n\nIn order to incorporate biases, one may include a \
\[OpenCurlyDoubleQuote]zeroth node\[CloseCurlyDoubleQuote] in each layer \
whose value is fixed at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "0", 
     RowBox[{"(", "l", ")"}]], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "3f0a32f3-d547-4a78-b740-0fcaf690dcd6"],
 ", and let the index run from 0 to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", 
    RowBox[{"(", "l", ")"}]], TraditionalForm]],ExpressionUUID->
  "9aa07146-baf1-48f4-95df-8dc4fd877454"],
 ".\n\nIn our problem specification, we have allowed multiple outputs, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["N", 
     RowBox[{"(", "L", ")"}]], ">", "1"}], TraditionalForm]],ExpressionUUID->
  "da4c6cc4-998a-46e0-aa47-c795bce73829"],
 ".  But ultimately, each output can be thought of as a separate function of \
the inputs.  So in principle one may break down the problem into \
scalar-output problems with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["N", 
     RowBox[{"(", "L", ")"}]], "=", "1."}], TraditionalForm]],ExpressionUUID->
  "d468d98c-b881-4ddd-b2d2-6a73bcca9e91"]
}], "Text",
 CellChangeTimes->{{3.83011896442706*^9, 3.830119141984129*^9}, {
   3.830119238376539*^9, 3.830119365028533*^9}, {3.8301194737210913`*^9, 
   3.830119474716588*^9}, {3.83011955699185*^9, 3.8301195933774767`*^9}, {
   3.830119805570675*^9, 3.830119817419694*^9}, {3.832068186571621*^9, 
   3.832068297919383*^9}, {3.83207263970689*^9, 3.832072644074654*^9}, 
   3.832073287666191*^9, {3.8320733327260437`*^9, 3.8320734492577257`*^9}, {
   3.8320735418846292`*^9, 
   3.832073676914832*^9}},ExpressionUUID->"43cf9642-cb1c-4945-a041-\
d7f187a4fcb4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Simulation"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 3.832072502900221*^9}, {3.83207369226546*^9, 
   3.8320736936544228`*^9}, {3.8321957947226973`*^9, 3.832195799665254*^9}, {
   3.832240197805305*^9, 3.8322402013859997`*^9}, 3.8322415318209057`*^9, {
   3.832242083230609*^9, 3.832242084255184*^9}, 
   3.832242988305203*^9},ExpressionUUID->"512bded2-867e-43f0-8e98-\
68f998df2e64"],

Cell[TextData[{
 "The code below applies a 3-layer MLP to a dataset with number of data \
points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "=", "6"}], TraditionalForm]],ExpressionUUID->
  "826d0d85-dda7-44e0-bf62-81dab32f450a"],
 " and feature dimension ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "f0483230-3204-4a96-929f-bcbf1d908bee"],
 ".  \nThis training dataset is easily learnable, because it corresponds to \
the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"], "+", 
     RowBox[{
      SubscriptBox["x", "3"], "."}]}]}], TraditionalForm]],ExpressionUUID->
  "d43423cb-1290-415c-9c9c-a2dbb24e2afd"]
}], "Text",
 CellChangeTimes->{{3.83224154194567*^9, 3.832241617130788*^9}, {
  3.8322420805537233`*^9, 3.832242081963662*^9}, {3.83224257172567*^9, 
  3.8322426053758087`*^9}, {3.8322429928851433`*^9, 3.83224300716045*^9}, {
  3.862571421007613*^9, 
  3.8625714458093433`*^9}},ExpressionUUID->"1bd8cfe7-874c-42ee-8330-\
8118eef1e537"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "TRAINING", " ", "DATA", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"SET", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataTrain", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"-", "1"}], "1", 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1"}]},
        {
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1"}], "1", 
         RowBox[{"-", "1"}]},
        {
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1"}], 
         RowBox[{"-", "1"}], "1"},
        {"1", "1", "1", 
         RowBox[{"-", "1"}]},
        {"1", "1", 
         RowBox[{"-", "1"}], "1"},
        {"1", 
         RowBox[{"-", "1"}], "1", "1"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "FIRST", " ", "column", " ", "is", " ", "the", " ", "training", " ", 
      "output", " ", "y"}], ",", " ", 
     RowBox[{"OTHER", " ", "cols", " ", "are", " ", "x"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xndTrain", "=", 
     RowBox[{"Rest", "/@", "dataTrain"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ynTrain", "=", 
     RowBox[{"First", "/@", "dataTrain"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nmax", ",", "dmax"}], "}"}], "=", 
     RowBox[{"Dimensions", "@", "xndTrain"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832195814981228*^9, 3.8321960022659063`*^9}, {
  3.832196159683733*^9, 3.832196160155417*^9}, {3.832196338533141*^9, 
  3.832196348700193*^9}, {3.832240123941321*^9, 3.832240151636189*^9}, {
  3.832242087274273*^9, 3.8322421241555233`*^9}, {3.832242403683823*^9, 
  3.832242444475116*^9}, {3.8322426075854263`*^9, 3.8322426076900063`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5f655070-1798-4895-a936-80bf3794677f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "NEURAL", " ", "NETWORK", 
    " ", "AND", " ", "INITIALIZE", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PARAMETERS", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "x_", "]"}], ":=", 
     RowBox[{"Tanh", "[", "x", "]"}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "sigmoid", " ", "function", " ", "whose", " ", "output", " ", "varies", 
      " ", "between"}], " ", "-", 
     RowBox[{"1", " ", "and"}], " ", "+", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", "g_", "]"}], ":=", 
     RowBox[{"1", "-", 
      SuperscriptBox["g", "2"]}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "derivative", " ", "of", " ", "sigmoid", " ", "function", " ", "as", " ", 
     "function", " ", "of", " ", "its", " ", "value"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eta", "=", 
     RowBox[{"+", "0.2"}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"learning", " ", "rate"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m0", "=", "dmax"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", "0.", 
      "  ", "Should", " ", "be", " ", "equal", " ", "to", " ", "number", " ", 
      "of", " ", "inputs"}], ",", " ", 
     RowBox[{"unless", " ", "we", " ", "use", " ", "bias"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m1", "=", "4"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", "1"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m2", "=", "3"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", "2"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m3", "=", "1"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
    "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", "3.", "  ",
      "Should", " ", "be", " ", "equal", " ", "to", " ", "number", " ", "of", 
     " ", 
     RowBox[{"outputs", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w0", "=", 
     RowBox[{".2", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m1", ",", "m0"}], "}"}]}], "]"}]}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"weights", " ", 
     SubsuperscriptBox["w", "ij", 
      RowBox[{"(", "0", ")"}]], " ", "connecting", " ", "layer", " ", "0", 
     " ", "to", " ", "layer", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"w1", "=", 
     RowBox[{".2", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m2", ",", "m1"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w2", "=", 
     RowBox[{".2", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m3", ",", "m2"}], "}"}]}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.832240174366016*^9, 3.832240174448514*^9}, {
   3.832240835140751*^9, 3.832240835857299*^9}, {3.83224159607657*^9, 
   3.832241596155237*^9}, {3.832241630527979*^9, 3.832241706971491*^9}, {
   3.832241841335699*^9, 3.8322418561938*^9}, 3.832241974758274*^9, {
   3.832242125969524*^9, 3.832242154897904*^9}, {3.832242250996097*^9, 
   3.8322422531934233`*^9}, {3.8322422856525793`*^9, 3.832242285748757*^9}, {
   3.832242478398314*^9, 3.832242478612341*^9}, {3.832242523150817*^9, 
   3.832242532227878*^9}, {3.8322426179944077`*^9, 3.8322426229460077`*^9}, {
   3.832242985483004*^9, 3.8322429861258163`*^9}, {3.832243021835204*^9, 
   3.832243022521173*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"2109060c-ade7-4b74-8386-36750b5c464d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "TRAIN"}]}]}]}], " ", "NEURAL", " ", "NETWORK", " ",
     "USING", " ", "TRAINING", " ", "DATA", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"SET", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{"(*", " ", 
     RowBox[{"loop", " ", "over", " ", "iterations", " ", 
      RowBox[{"(", 
       RowBox[{"\"\<passes\>\"", " ", "or", " ", "\"\<sweeps\>\""}], ")"}]}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"chiSquared", "=", "0."}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"loop", " ", "over", " ", "training", " ", "inputs"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "=", 
          RowBox[{"{", 
           RowBox[{
           "ynTrain", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
           "}"}]}], ";", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{"training", " ", "output"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"x0", "=", 
          RowBox[{
          "xndTrain", "\[LeftDoubleBracket]", "n", 
           "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
          "set", " ", "zeroth", " ", "layer", " ", "of", " ", "neurons", " ", 
           "equal", " ", "to", " ", "training", " ", "inputs"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"x1", "=", 
          RowBox[{"g", "[", 
           RowBox[{"w0", ".", "x0"}], "]"}]}], ";", 
         RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"x2", "=", 
          RowBox[{"g", "[", 
           RowBox[{"w1", ".", "x1"}], "]"}]}], ";", 
         RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"x3", "=", 
          RowBox[{"g", "[", 
           RowBox[{"w2", ".", "x2"}], "]"}]}], ";", 
         RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"e3", "=", 
          RowBox[{"x3", "-", "y"}]}], ";", 
         RowBox[{"d3", "=", 
          RowBox[{"e3", "*", 
           RowBox[{"h", "[", "x3", "]"}]}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"calculate", " ", "level"}], "-", 
           RowBox[{"3", " ", "error", " ", "and", " ", "level"}], "-", 
           RowBox[{"3", " ", "delta"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         
         RowBox[{"e2", "=", 
          RowBox[{"d3", ".", "w2"}]}], ";", 
         RowBox[{"d2", "=", 
          RowBox[{"e2", "*", 
           RowBox[{"h", "[", "x2", "]"}]}]}], ";", 
         RowBox[{"(*", " ", "backpropagate", " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"e1", "=", 
          RowBox[{"d2", ".", "w1"}]}], ";", 
         RowBox[{"d1", "=", 
          RowBox[{"e1", "*", 
           RowBox[{"h", "[", "x1", "]"}]}]}], ";", 
         RowBox[{"(*", " ", "backpropagate", " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"w2", "-=", 
          RowBox[{"eta", "*", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"d3", ",", "x2"}], "]"}]}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{"update", " ", "weights"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"w1", "-=", 
          RowBox[{"eta", "*", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"d2", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"w0", "-=", 
          RowBox[{"eta", "*", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{"d1", ",", "x0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"chiSquared", "+=", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Norm", "[", "e3", "]"}], "2"], "/", "2"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nmax"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"iter", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Iteration = \>\"", ",", "iter", ",", 
          "\"\<   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = \>\"", ",", 
          "chiSquared"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "0", ",", "100"}], "}"}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.832195992072069*^9, 3.832196052880212*^9}, {
   3.832196088142418*^9, 3.8321962038913937`*^9}, {3.8321962363694553`*^9, 
   3.8321964402150097`*^9}, {3.8321965625585623`*^9, 
   3.8321965735222483`*^9}, {3.832197167924666*^9, 3.832197175293749*^9}, {
   3.8321987999361153`*^9, 3.8321988643389053`*^9}, {3.832198961262205*^9, 
   3.832199001029216*^9}, {3.832199093007736*^9, 3.832199133784815*^9}, 
   3.832199168223259*^9, {3.832199306909731*^9, 3.832199548483204*^9}, {
   3.8321995814488487`*^9, 3.8321995848294697`*^9}, {3.832239912666902*^9, 
   3.832239936640461*^9}, {3.8322399801198397`*^9, 3.832240101990518*^9}, {
   3.832241751642764*^9, 3.83224175174505*^9}, {3.832241799360094*^9, 
   3.832241800488121*^9}, {3.832241926399832*^9, 3.832241946635281*^9}, {
   3.8322421467741756`*^9, 3.83224214933241*^9}, {3.832242181682012*^9, 
   3.8322422761625977`*^9}, {3.832242483367339*^9, 3.832242484017582*^9}, {
   3.83224305603426*^9, 3.832243057357665*^9}, {3.83224420072122*^9, 
   3.832244253983027*^9}, {3.832244288032033*^9, 3.8322443095098963`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"13aa8c8b-4539-4c4c-9d1e-86772d611001"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "3.013838815797709`"}],
  SequenceForm[
  "Iteration = ", 0, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   3.013838815797709],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.8625714591034393`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"6ad5342e-28ff-4de9-a5ab-10bf059949f0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "1.4381531953627702`"}],
  SequenceForm[
  "Iteration = ", 10, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   1.4381531953627702`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459105538*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"7b08cdc0-7fbe-4ba3-9a72-e40fb8e90876"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "20", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.02043300269351056`"}],
  SequenceForm[
  "Iteration = ", 20, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.02043300269351056],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459107687*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"a28e12d7-fca5-4a13-8381-91e16ef21f3d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "30", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.008723274503624654`"}],
  SequenceForm[
  "Iteration = ", 30, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.008723274503624654],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459109212*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"9f53ac7e-5d1e-4252-bb16-3c7f02b73802"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "40", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.005404204521586891`"}],
  SequenceForm[
  "Iteration = ", 40, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.005404204521586891],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.86257145911078*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"709ae6bd-1509-40cd-b4da-7a57eb88db31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "50", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.003873875105477832`"}],
  SequenceForm[
  "Iteration = ", 50, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.003873875105477832],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.8625714591124153`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"dda1ab81-4854-40e9-b3cf-a85772af7445"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "60", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.0030023248940427944`"}],
  SequenceForm[
  "Iteration = ", 60, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.0030023248940427944`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459114259*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"9c968a2e-c4c4-4966-8cba-1e65518be223"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "70", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.0024427056755738055`"}],
  SequenceForm[
  "Iteration = ", 70, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.0024427056755738055`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459116001*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"197b31e9-4df0-42d3-a98c-46cede6c1e4b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "80", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.0020543580758960664`"}],
  SequenceForm[
  "Iteration = ", 80, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.0020543580758960664`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.86257145911769*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"70fcbbd8-1c92-4f4d-b5fa-16747f91c105"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "90", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.0017697773441171035`"}],
  SequenceForm[
  "Iteration = ", 90, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.0017697773441171035`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459119503*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"87441c15-9c7b-47bd-9446-887aa818cb8f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration = \"\>", "\[InvisibleSpace]", "100", 
   "\[InvisibleSpace]", "\<\"   \\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)]\\) = \"\>", "\[InvisibleSpace]", "0.0015526509982924724`"}],
  SequenceForm[
  "Iteration = ", 100, "   \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) = ", 
   0.0015526509982924724`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.83224004998594*^9, 3.83224010256479*^9}, {
   3.832240154221002*^9, 3.832240176125759*^9}, 3.832240836819125*^9, {
   3.8322415907137203`*^9, 3.832241626346114*^9}, {3.8322416942882566`*^9, 
   3.832241707506556*^9}, 3.832241803631575*^9, {3.832241843240141*^9, 
   3.8322418572114277`*^9}, 3.832241977209015*^9, 3.832242155603425*^9, {
   3.8322422468956347`*^9, 3.832242257280067*^9}, {3.832242287599482*^9, 
   3.832242300775202*^9}, 3.832242445863768*^9, {3.832242479974844*^9, 
   3.832242532930215*^9}, {3.832242990324856*^9, 3.832243023184757*^9}, 
   3.832243061678492*^9, {3.83224421438968*^9, 3.8322442560535*^9}, 
   3.832257284815914*^9, 3.8625714027955637`*^9, 3.862571459121282*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"943671d4-7139-4627-9117-a89ad935b5f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "DISPLAY"}]}]}]}], " ", "TABLE", " ", "OF", " ", 
    "INPUTS", " ", "AND", " ", "OUTPUTS", " ", "TO", " ", "VERIFY", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ACCURACY", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "=", 
       RowBox[{
       "ynTrain", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}]}], 
      ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"training", " ", "output", " ", "scalar"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"x0", "=", 
       RowBox[{
       "xndTrain", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "set", " ", "zeroth", " ", "layer", " ", "of", " ", "neurons", " ", 
        "equal", " ", "to", " ", "training", " ", "inputs"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"x1", "=", 
       RowBox[{"g", "[", 
        RowBox[{"w0", ".", "x0"}], "]"}]}], ";", 
      RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"g", "[", 
        RowBox[{"w1", ".", "x1"}], "]"}]}], ";", 
      RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"x3", "=", 
       RowBox[{"g", "[", 
        RowBox[{"w2", ".", "x2"}], "]"}]}], ";", 
      RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Y", "=", 
       RowBox[{
        RowBox[{"x3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "//", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"#", ",", "0.001"}], "]"}], "&"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"predicted", " ", "output", " ", "scalar"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x0", ",", "\"\<\>\"", ",", "y", ",", "Y"}], "}"}], "//", 
       "Flatten"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "nmax"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"TableForm", "[", 
     RowBox[{"#", ",", 
      RowBox[{"TableHeadings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(x\), \(3\)]\)\>\""}], "}"}], ",", 
            "\"\<\>\"", ",", "\"\<y (train)\>\"", ",", "\"\<Y (pred)\>\""}], 
           "}"}], "//", "Flatten"}]}], "}"}]}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.832241740734586*^9, 3.832241832009859*^9}, {
   3.8322419894559793`*^9, 3.832242058520095*^9}, {3.8322423588835163`*^9, 
   3.832242378017003*^9}, {3.83224246017725*^9, 3.832242467458012*^9}, {
   3.8322443198341417`*^9, 3.8322443245763693`*^9}, {3.832244357073995*^9, 
   3.832244372054942*^9}, 
   3.862571704901999*^9},ExpressionUUID->"c4d7518d-9f4e-4159-9801-\
274b958a11b4"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \\(3\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\"\>",
       HoldForm], 
      TagBox["\<\"y (train)\"\>",
       HoldForm], 
      TagBox["\<\"Y (pred)\"\>",
       HoldForm]},
     {"1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "\<\"\"\>", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.977`"}]},
     {
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], "\<\"\"\>", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.977`"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "\<\"\"\>", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "0.977`"}]},
     {"1", "1", 
      RowBox[{"-", "1"}], "\<\"\"\>", "1", "0.977`"},
     {"1", 
      RowBox[{"-", "1"}], "1", "\<\"\"\>", "1", "0.977`"},
     {
      RowBox[{"-", "1"}], "1", "1", "\<\"\"\>", "1", "0.977`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"\!\(\*SubscriptBox[\(x\), \(1\)]\)", 
       "\!\(\*SubscriptBox[\(x\), \(1\)]\)", 
       "\!\(\*SubscriptBox[\(x\), \(3\)]\)", "", "y (train)", 
       "Y (pred)"}}]]]], "Output",
 CellChangeTimes->{{3.832241768829094*^9, 3.8322417941931963`*^9}, {
   3.8322418246420603`*^9, 3.832241845940742*^9}, {3.8322419833881683`*^9, 
   3.832242012748663*^9}, {3.8322420462914352`*^9, 3.8322420586406307`*^9}, 
   3.832242157994216*^9, {3.83224226008549*^9, 3.8322423047229633`*^9}, {
   3.8322423593825197`*^9, 3.832242378165663*^9}, {3.832242449168288*^9, 
   3.832242535940772*^9}, {3.8322429968888483`*^9, 3.832243025239316*^9}, 
   3.832243063740965*^9, 3.832244232522784*^9, 3.832244324899413*^9, 
   3.832257285175405*^9, 3.8625714046661587`*^9, 3.8625714749205227`*^9},
 CellLabel->
  "Out[95]//TableForm=",ExpressionUUID->"3f7d6eb5-bd77-4835-9c16-\
45f4619a14c7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Visualization of the above simulation"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 3.832072502900221*^9}, {3.83207369226546*^9, 
   3.8320736936544228`*^9}, {3.8321957947226973`*^9, 3.832195799665254*^9}, {
   3.832240197805305*^9, 3.8322402013859997`*^9}, {3.8322415318209057`*^9, 
   3.8322415391731443`*^9}},ExpressionUUID->"c98963d0-d93f-4822-a4c7-\
13f5cc5222f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"layers", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeCount", "=", 
   RowBox[{"{", 
    RowBox[{"m0", ",", "m1", ",", "m2", ",", "m3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nodePos", "[", 
    RowBox[{"layer_", ",", "index_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"layer", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"index", "-", ".51"}], 
        RowBox[{
         RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
          RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}], "+", 
         ".03"}]], ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Arrowheads", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Medium", ",", ".5"}], "}"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"weights", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Arrow", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nodePos", "[", 
               RowBox[{
                RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], ",", 
              RowBox[{"nodePos", "[", 
               RowBox[{"layer", ",", "i"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \
\((``)\)]\)\>\"", ",", "i", ",", "j", ",", 
               RowBox[{"layer", "-", "1"}]}], "]"}], ",", 
             RowBox[{".5", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nodePos", "[", 
                 RowBox[{
                  RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], "+", 
                RowBox[{"nodePos", "[", 
                 RowBox[{"layer", ",", "i"}], "]"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
           "nodeCount", "\[LeftDoubleBracket]", "layer", 
            "\[RightDoubleBracket]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
            RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], "}"}]}],
         "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"layer", ",", "1", ",", "layers"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"nodes", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Inset", "[", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"node", " ", "--"}], "--"}], "--"}], "--"}]}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"FaceForm", "@", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{".69", ",", ".878", ",", ".902"}], "]"}]}], ",", 
                RowBox[{"EdgeForm", "@", "Black"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}], ",", 
             RowBox[{"nodePos", "[", 
              RowBox[{"layer", ",", "i"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)\>\"", 
               ",", "i", ",", "layer"}], "]"}], ",", 
             RowBox[{"nodePos", "[", 
              RowBox[{"layer", ",", "i"}], "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
            RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], "}"}]}],
         "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"layer", ",", "0", ",", "layers"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
       RowBox[{"inputs", "/", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"outputs", " ", "--"}], "--"}], "--"}], "--"}]}]}], "*)"}],
      "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(x\), \(``\)]\) \[LongRightArrow]\>\"", 
           ",", "i"}], "]"}], ",", 
         RowBox[{
          RowBox[{"nodePos", "[", 
           RowBox[{"0", ",", "i"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".3"}], ",", "0"}], "}"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
          RowBox[{"1", "+", "0"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "Draw"}]}]}]}], " ", "output", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", "s", ")"}], " ", "--"}], "--"}], "--"}], "--"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\[LongRightArrow] \!\(\*SubscriptBox[\(y\), \(``\)]\)\>\"", 
           ",", "i"}], "]"}], ",", 
         RowBox[{
          RowBox[{"nodePos", "[", 
           RowBox[{"layers", ",", "i"}], "]"}], "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"+", ".3"}], ",", "0"}], "}"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
          RowBox[{"1", "+", "layers"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"648", ",", "324"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", 
    RowBox[{"Scaled", "[", ".1", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8322402128460913`*^9, 3.8322406222472*^9}, {
  3.832240658610623*^9, 3.832240669698717*^9}, {3.832240706027273*^9, 
  3.8322408065124073`*^9}, {3.8322408491005774`*^9, 3.8322409213323936`*^9}, {
  3.8322409554926567`*^9, 3.832241053832365*^9}, {3.832241101500495*^9, 
  3.8322412434696693`*^9}, {3.8322414014644823`*^9, 3.83224146704535*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"f4610c5e-df06-4ad6-991f-aaa640a822ba"],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[{{
     Medium, 0.5}}], {{{{
       ArrowBox[{{0, -0.1617161716171617}, {1, -0.12158808933002481`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 1, 0],
         Editable->False], {0.5, -0.14165213047359326}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.1617161716171617}, {1, -0.369727047146402}}], InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 1, 0],
         Editable->False], {0.5, -0.26572160938178185}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.1617161716171617}, {1, -0.6178660049627792}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 1, 0],
         Editable->False], {0.5, -0.38979108828997044}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.1617161716171617}, {1, -0.8660049627791563}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 4, 1, 0],
         Editable->False], {0.5, -0.513860567198159}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}, {{
       ArrowBox[{{0, -0.49174917491749176`}, {1, -0.12158808933002481`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 2, 0],
         Editable->False], {0.5, -0.3066686321237583}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.49174917491749176`}, {1, -0.369727047146402}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 2, 0],
         Editable->False], {0.5, -0.43073811103194687}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.49174917491749176`}, {1, -0.6178660049627792}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 2, 0],
         Editable->False], {0.5, -0.5548075899401355}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.49174917491749176`}, {1, -0.8660049627791563}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 4, 2, 0],
         Editable->False], {0.5, -0.678877068848324}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}, {{
       ArrowBox[{{0, -0.8217821782178218}, {1, -0.12158808933002481`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 3, 0],
         Editable->False], {0.5, -0.47168513377392335}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.8217821782178218}, {1, -0.369727047146402}}], InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 3, 0],
         Editable->False], {0.5, -0.5957546126821119}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.8217821782178218}, {1, -0.6178660049627792}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 3, 0],
         Editable->False], {0.5, -0.7198240915903005}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{0, -0.8217821782178218}, {1, -0.8660049627791563}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"0\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 4, 3, 0],
         Editable->False], {0.5, -0.8438935704984891}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}}, {{{
       ArrowBox[{{1, -0.12158808933002481`}, {2, -0.1617161716171617}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 1, 1],
         Editable->False], {1.5, -0.14165213047359326}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.12158808933002481`}, {2, -0.49174917491749176`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 1, 1],
         Editable->False], {1.5, -0.3066686321237583}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.12158808933002481`}, {2, -0.8217821782178218}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 1, 1],
         Editable->False], {1.5, -0.47168513377392335}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}, {{
       ArrowBox[{{1, -0.369727047146402}, {2, -0.1617161716171617}}], InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 2, 1],
         Editable->False], {1.5, -0.26572160938178185}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.369727047146402}, {2, -0.49174917491749176`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 2, 1],
         Editable->False], {1.5, -0.43073811103194687}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.369727047146402}, {2, -0.8217821782178218}}], InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 2, 1],
         Editable->False], {1.5, -0.5957546126821119}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}, {{
       ArrowBox[{{1, -0.6178660049627792}, {2, -0.1617161716171617}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 3, 1],
         Editable->False], {1.5, -0.38979108828997044}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.6178660049627792}, {2, -0.49174917491749176`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 3, 1],
         Editable->False], {1.5, -0.5548075899401355}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.6178660049627792}, {2, -0.8217821782178218}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 3, 1],
         Editable->False], {1.5, -0.7198240915903005}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}, {{
       ArrowBox[{{1, -0.8660049627791563}, {2, -0.1617161716171617}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 1, 4, 1],
         Editable->False], {1.5, -0.513860567198159}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.8660049627791563}, {2, -0.49174917491749176`}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 2, 4, 1],
         Editable->False], {1.5, -0.678877068848324}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
       ArrowBox[{{1, -0.8660049627791563}, {2, -0.8217821782178218}}], 
       InsetBox[
        InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"4\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
         StringForm[
         "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \((``)\)]\
\)", 3, 4, 1],
         Editable->False], {1.5, -0.8438935704984891}, 
        ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}}, {{
      ArrowBox[{{2, -0.1617161716171617}, {3, -0.47572815533980584`}}], 
      InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \
\((``)\)]\)", 1, 1, 2],
        Editable->False], {2.5, -0.31872216347848376}, 
       ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
      ArrowBox[{{2, -0.49174917491749176`}, {3, -0.47572815533980584`}}], 
      InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \
\((``)\)]\)", 1, 2, 2],
        Editable->False], {2.5, -0.4837386651286488}, 
       ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}, {
      ArrowBox[{{2, -0.8217821782178218}, {3, -0.47572815533980584`}}], 
      InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(w\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", \
TraditionalForm]\\)\[InvisibleSpace]\\!\\(\\*FormBox[\\\"3\\\", \
TraditionalForm]\\)\\), \\((\\!\\(\\*FormBox[\\\"2\\\", \
TraditionalForm]\\))\\)]\\)\"\>",
        StringForm[
        "\!\(\*SubsuperscriptBox[\(w\), \(``\[InvisibleSpace]``\), \
\((``)\)]\)", 1, 3, 2],
        Editable->False], {2.5, -0.6487551667788138}, 
       ImageScaled[{Rational[1, 2], -0.09999999999999998}]]}}}, {{{InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {0, -0.1617161716171617}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 1, 0],
        Editable->False], {0, -0.1617161716171617}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {0, -0.49174917491749176}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 2, 0],
        Editable->False], {0, -0.49174917491749176}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {0, -0.8217821782178218}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"0\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 3, 0],
        Editable->False], {0, -0.8217821782178218}]}}, {{InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {1, -0.12158808933002481}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 1, 1],
        Editable->False], {1, -0.12158808933002481}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {1, -0.369727047146402}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 2, 1],
        Editable->False], {1, -0.369727047146402}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {1, -0.6178660049627792}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 3, 1],
        Editable->False], {1, -0.6178660049627792}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {1, -0.8660049627791563}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"4\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 4, 1],
        Editable->False], {1, -0.8660049627791563}]}}, {{InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {2, -0.1617161716171617}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 1, 2],
        Editable->False], {2, -0.1617161716171617}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {2, -0.49174917491749176}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 2, 2],
        Editable->False], {2, -0.49174917491749176}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
         DiskBox[{0, 0}, 0.3]},
        BaseStyle->{14, FontFamily -> "Times", 
          GrayLevel[0]}], {2, -0.8217821782178218}, {0, 0}, 0.3], InsetBox[
       InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\))\\)]\\)\"\>",
        StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 3, 2],
        Editable->False], {2, -0.8217821782178218}]}}, {InsetBox[
      GraphicsBox[
       {EdgeForm[GrayLevel[0]], FaceForm[RGBColor[0.69, 0.878, 0.902]], 
        DiskBox[{0, 0}, 0.3]},
       BaseStyle->{14, FontFamily -> "Times", 
         GrayLevel[0]}], {3, -0.47572815533980584}, {0, 0}, 0.3], InsetBox[
      InterpretationBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\), \
\\((\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\))\\)]\\)\"\>",
       StringForm["\!\(\*SubsuperscriptBox[\(x\), \(``\), \((``)\)]\)", 1, 3],
       
       Editable->False], {3, -0.47572815533980584}]}}, 
   {RGBColor[1, 0, 0], {InsetBox[
      InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\)]\\) \[LongRightArrow]\"\
\>",
       StringForm["\!\(\*SubscriptBox[\(x\), \(``\)]\) \[LongRightArrow]", 1],
       
       Editable->False], {-0.3, -0.1617161716171617}], InsetBox[
      InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"2\\\", TraditionalForm]\\)\\)]\\) \[LongRightArrow]\"\
\>",
       StringForm["\!\(\*SubscriptBox[\(x\), \(``\)]\) \[LongRightArrow]", 2],
       
       Editable->False], {-0.3, -0.49174917491749176}], InsetBox[
      InterpretationBox["\<\"\\!\\(\\*SubscriptBox[\\(x\\), \
\\(\\!\\(\\*FormBox[\\\"3\\\", TraditionalForm]\\)\\)]\\) \[LongRightArrow]\"\
\>",
       StringForm["\!\(\*SubscriptBox[\(x\), \(``\)]\) \[LongRightArrow]", 3],
       
       Editable->False], {-0.3, -0.8217821782178218}]}, InsetBox[
     InterpretationBox["\<\"\[LongRightArrow] \\!\\(\\*SubscriptBox[\\(y\\), \
\\(\\!\\(\\*FormBox[\\\"1\\\", TraditionalForm]\\)\\)]\\)\"\>",
      StringForm["\[LongRightArrow] \!\(\*SubscriptBox[\(y\), \(``\)]\)", 1],
      Editable->False], {3.3, -0.47572815533980584}]}},
  AspectRatio->Full,
  BaseStyle->{14, FontFamily -> "Times", 
    GrayLevel[0]},
  ImageSize->{648, 324},
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.832240725639183*^9, 3.832240748208918*^9}, {
   3.832240783987968*^9, 3.8322408386966257`*^9}, {3.832240887004671*^9, 
   3.832240921501235*^9}, {3.8322409676873827`*^9, 3.8322410540192623`*^9}, {
   3.832241103132764*^9, 3.832241127570243*^9}, {3.832241169713682*^9, 
   3.832241176242868*^9}, {3.832241224094686*^9, 3.8322412436874638`*^9}, {
   3.832241407616384*^9, 3.832241467279358*^9}, 3.8322425541764183`*^9, 
   3.832242999224173*^9, 3.832243066624473*^9, 3.832257285807295*^9, 
   3.8625716544245663`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"c06be691-b57e-4ea3-bc83-476d37051756"]
}, Open  ]],

Cell[TextData[{
 "The above schematic shows a 3-level ",
 StyleBox["multilevel perceptron",
  FontSlant->"Italic"],
 " (MLP).  This is a kind of ",
 StyleBox["feedforward artificial neural network",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, {3.8320697218054037`*^9, 3.832069767590661*^9}, {
   3.8320698025403347`*^9, 3.8320698379521017`*^9}, {3.832073217043024*^9, 
   3.832073256004232*^9}, 
   3.832241511398335*^9},ExpressionUUID->"530c451c-8686-4bdc-be2d-\
d1cb11dc19ff"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Animation of the training process for a MLP of the above simulation"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 3.832072502900221*^9}, {3.83207369226546*^9, 
   3.8320736936544228`*^9}, {3.8321957947226973`*^9, 3.832195799665254*^9}, {
   3.832240197805305*^9, 3.8322402013859997`*^9}, {3.8322415318209057`*^9, 
   3.8322415391731443`*^9}, {3.83225679714128*^9, 3.832256803900848*^9}, 
   3.832276297232203*^9},ExpressionUUID->"8d1d3931-3507-4b90-84c0-\
6d239d707fcd"],

Cell["Run all the cells below.", "Text",
 CellChangeTimes->{{3.83226075236843*^9, 
  3.8322607543143044`*^9}},ExpressionUUID->"605965d3-03c3-4e25-ba6f-\
0e0702b22f36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "DO"}]}]}]}], " ", "THE", " ", "NEXT", " ", "STEP", 
    " ", "IN", " ", "THE", " ", "TRAINING", " ", "PROCESS", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "EFFECTIVELY", " ", "LOOPING", " ", "OVER", " ", "n", " ", "AND", 
          " ", "iter"}], ")"}], " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nextStep", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nCurrent", "\[Equal]", "nmax"}], ",", 
         RowBox[{"iterCurrent", "++"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"fake", " ", "the", " ", "Do", " ", "loop"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"nCurrent", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"nCurrent", "+", "1"}], ",", "nmax", ",", "1"}], "]"}]}], 
       ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"fake", " ", "the", " ", "Do", " ", "loop"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"{", 
         RowBox[{
         "ynTrain", "\[LeftDoubleBracket]", "nCurrent", 
          "\[RightDoubleBracket]"}], "}"}]}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"training", " ", "output"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"x0", "=", 
        RowBox[{
        "xndTrain", "\[LeftDoubleBracket]", "nCurrent", 
         "\[RightDoubleBracket]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "zeroth", " ", "layer", " ", "of", " ", "neurons", " ", 
         "equal", " ", "to", " ", "training", " ", "inputs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"x1", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w0", ".", "x0"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"x2", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w1", ".", "x1"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"x3", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w2", ".", "x2"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e3", "=", 
        RowBox[{"x3", "-", "y"}]}], ";", 
       RowBox[{"d3", "=", 
        RowBox[{"e3", "*", 
         RowBox[{"h", "[", "x3", "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"calculate", " ", "level"}], "-", 
         RowBox[{"3", " ", "error", " ", "and", " ", "level"}], "-", 
         RowBox[{"3", " ", "delta"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e2", "=", 
        RowBox[{"d3", ".", "w2"}]}], ";", 
       RowBox[{"d2", "=", 
        RowBox[{"e2", "*", 
         RowBox[{"h", "[", "x2", "]"}]}]}], ";", 
       RowBox[{"(*", " ", "backpropagate", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e1", "=", 
        RowBox[{"d2", ".", "w1"}]}], ";", 
       RowBox[{"d1", "=", 
        RowBox[{"e1", "*", 
         RowBox[{"h", "[", "x1", "]"}]}]}], ";", 
       RowBox[{"(*", " ", "backpropagate", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"w2", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d3", ",", "x2"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"update", " ", "weights"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"w1", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d2", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"w0", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d1", ",", "x0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dw2", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d3", ",", "x2"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dw1", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d2", ",", "x1"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dw0", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d1", ",", "x0"}], "]"}]}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
      " ", "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8322574948813963`*^9, 3.832257498509482*^9}, {
  3.832257539150549*^9, 3.8322576290599957`*^9}, {3.8322576800671053`*^9, 
  3.8322576928328114`*^9}, {3.83225935173428*^9, 3.8322593782215643`*^9}, {
  3.832260356985228*^9, 3.832260387932897*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"e1d2e321-3dc9-47ce-bd72-e7f19bbb6bfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"DRAW", " ", "--"}], "--"}], "--"}], "--"}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"drawNode", "[", 
      RowBox[{"pos_", ",", "color_", ",", "text_"}], "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"node", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"FaceForm", "@", "color"}], ",", 
            RowBox[{"EdgeForm", "@", "Black"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "pos", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{"text", ",", "pos"}], "]"}]}], "\[IndentingNewLine]", "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drawEdge", "[", 
      RowBox[{"posStart_", ",", "posEnd_", ",", "val_"}], "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"colorFunc2", "@", 
        RowBox[{"wlij", "\[LeftDoubleBracket]", 
         RowBox[{"layer", ",", "i", ",", "j"}], "\[RightDoubleBracket]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"AbsoluteThickness", "[", 
        RowBox[{"9", 
         RowBox[{"Tanh", "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"wlij", "\[LeftDoubleBracket]", 
            RowBox[{"layer", ",", "i", ",", "j"}], 
            "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Arrow", "@", 
        RowBox[{"{", 
         RowBox[{"posStart", ",", "posEnd"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"fmt", "@", 
          RowBox[{"wlij", "\[LeftDoubleBracket]", 
           RowBox[{"layer", ",", "i", ",", "j"}], "\[RightDoubleBracket]"}]}],
          ",", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"posStart", "+", "posEnd"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drawEdgeChange", "[", 
      RowBox[{"posStart_", ",", "posEnd_", ",", "color_", ",", "text_"}], 
      "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"color", ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{"text", ",", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"posStart", "+", "posEnd"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"+", "1.2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colorFunc", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Orange", ",", "Yellow", ",", "Green"}], "}"}], 
       ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colorFunc2", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Orange", ",", "Yellow", ",", 
         RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fmt", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"myFormat", "@", 
        RowBox[{"Round", "[", 
         RowBox[{"#", ",", "0.01"}], "]"}]}], "&"}], "@", "x"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fmt2", "[", "dw_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dw", ">", "0"}], ",", "\"\<++\>\"", ",", "\"\<--\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"layers", "=", "3"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodeCount", "=", 
         RowBox[{"{", 
          RowBox[{"m0", ",", "m1", ",", "m2", ",", "m3"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xli", "=", 
         RowBox[{"{", 
          RowBox[{"x0", ",", "x1", ",", "x2", ",", "x3"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"wlij", "=", 
         RowBox[{"{", 
          RowBox[{"w0", ",", "w1", ",", "w2"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dwlij", "=", 
         RowBox[{"{", 
          RowBox[{"dw0", ",", "dw1", ",", "dw2"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nodePos", "[", 
          RowBox[{"layer_", ",", "index_"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"layer", ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             FractionBox[
              RowBox[{"index", "-", ".51"}], 
              RowBox[{
               RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}], "+", 
               ".03"}]], ")"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "@", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Arrowheads", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"Medium", ",", ".5"}], "}"}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"weights", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawEdge", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{
                   RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], ",", 
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"wlij", "\[LeftDoubleBracket]", 
                  RowBox[{"layer", ",", "i", ",", "j"}], 
                  "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", 
               ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "1", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{
                 "nodeCount", "\[LeftDoubleBracket]", "layer", 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", "CHANGES", " ", 
               "to", " ", "weights", " ", "based", " ", "on", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"backpropagation", " ", "--"}], "--"}], "--"}], 
                "--"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawEdgeChange", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{
                   RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], ",", 
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"colorFunc2", "@", 
                  RowBox[{"Sign", "@", 
                   RowBox[{"dwlij", "\[LeftDoubleBracket]", 
                    RowBox[{"layer", ",", "i", ",", "j"}], 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{"fmt2", "@", 
                  RowBox[{"dwlij", "\[LeftDoubleBracket]", 
                   RowBox[{"layer", ",", "i", ",", "j"}], 
                   "\[RightDoubleBracket]"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "1", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{
                 "nodeCount", "\[LeftDoubleBracket]", "layer", 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"nodes", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawNode", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"colorFunc", "@", 
                  RowBox[{"xli", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"1", "+", "layer"}], ",", "i"}], 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"fmt", "@", 
                  RowBox[{"xli", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"1", "+", "layer"}], ",", "i"}], 
                   "\[RightDoubleBracket]"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "0", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", "TRAINING", " ", 
               "OUTPUT", " ", "and", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ERRORS", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"drawNode", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".6", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"colorFunc", "@", 
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                   RowBox[{"fmt", "@", 
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"drawNode", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"colorFunc", "@", 
                    RowBox[{
                    "e3", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                   RowBox[{"fmt", "@", 
                    RowBox[{
                    "e3", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(y\), \(``\)]\)\>\"", ",", "i"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(Y\), \(``\)]\)\>\"", ",", "i"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".6", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(``\)]\)\>\"", 
                    ",", "i"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", 
                 RowBox[{"{", "layers", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{"inputs", "/", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"outputs", " ", "--"}], "--"}], "--"}], "--"}]}]}],
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(x\), \(``\)]\) \
\[LongRightArrow]\>\"", ",", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"nodePos", "[", 
                   RowBox[{"0", ",", "i"}], "]"}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "0"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"648", ",", "324"}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
           RowBox[{"PlotRangePadding", "\[Rule]", 
            RowBox[{"Scaled", "[", ".1", "]"}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Iteration=``     Training example \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=``\>\"", ",", "iterCurrent", 
                ",", "nCurrent"}], "]"}], "//", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "Black"}], "]"}], "&"}]}], ")"}]}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8322402128460913`*^9, 3.8322406222472*^9}, {
   3.832240658610623*^9, 3.832240669698717*^9}, {3.832240706027273*^9, 
   3.8322408065124073`*^9}, {3.8322408491005774`*^9, 
   3.8322409213323936`*^9}, {3.8322409554926567`*^9, 3.832241053832365*^9}, {
   3.832241101500495*^9, 3.8322412434696693`*^9}, {3.8322414014644823`*^9, 
   3.83224146704535*^9}, {3.83225682830018*^9, 3.8322568364560833`*^9}, {
   3.83225730728897*^9, 3.832257308011739*^9}, {3.832257695424418*^9, 
   3.832257700246738*^9}, {3.832258074309569*^9, 3.8322580867181377`*^9}, {
   3.832258127736174*^9, 3.8322581815639267`*^9}, 3.8322582403493357`*^9, {
   3.832258280445951*^9, 3.832258312476502*^9}, {3.83225844012438*^9, 
   3.832258560690752*^9}, {3.8322586555018177`*^9, 3.83225894289634*^9}, {
   3.8322589813022118`*^9, 3.832259031867137*^9}, {3.83225906432419*^9, 
   3.832259215957787*^9}, {3.832259300007928*^9, 3.832259338525567*^9}, {
   3.8322595996927156`*^9, 3.832259600381132*^9}, {3.832259680915948*^9, 
   3.8322596870908813`*^9}, {3.8322597259580603`*^9, 
   3.8322597440300503`*^9}, {3.832259781469685*^9, 3.8322600091638947`*^9}, {
   3.83226021310653*^9, 3.832260223884807*^9}, {3.832260403927515*^9, 
   3.832260515843934*^9}, {3.832260614268959*^9, 3.832260625311796*^9}, {
   3.8322625743983183`*^9, 3.8322626318835783`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"57f6a6eb-191f-4b36-8745-46560bb8fdbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"initNN", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "TRAINING", " ", "DATA", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"SET", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataTrain", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"-", "1"}], "1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "1", 
           RowBox[{"-", "1"}]},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "1"},
          {"1", "1", "1", 
           RowBox[{"-", "1"}]},
          {"1", "1", 
           RowBox[{"-", "1"}], "1"},
          {"1", 
           RowBox[{"-", "1"}], "1", "1"}
         }], ")"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "FIRST", " ", "column", " ", "is", " ", "the", " ", "training", " ", 
         "output", " ", "y"}], ",", " ", 
        RowBox[{"OTHER", " ", "cols", " ", "are", " ", "x"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"xndTrain", "=", 
       RowBox[{"Rest", "/@", "dataTrain"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ynTrain", "=", 
       RowBox[{"First", "/@", "dataTrain"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nmax", ",", "dmax"}], "}"}], "=", 
       RowBox[{"Dimensions", "@", "xndTrain"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "NEURAL", " ", "NETWORK",
         " ", "AND", " ", "INITIALIZE", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PARAMETERS", " ", "--"}], "--"}], "--"}], "--"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nCurrent", "=", "0"}], ";", 
      RowBox[{"iterCurrent", "=", "1"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"pre", "-", "start"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"Tanh", "[", "x", "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "sigmoid", " ", "function", " ", "whose", " ", "output", " ", 
         "varies", " ", "between"}], " ", "-", 
        RowBox[{"1", " ", "and"}], " ", "+", "1"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h", "[", "g_", "]"}], ":=", 
       RowBox[{"1", "-", 
        SuperscriptBox["g", "2"]}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "derivative", " ", "of", " ", "sigmoid", " ", "function", " ", "as", 
        " ", "function", " ", "of", " ", "its", " ", "value"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"eta", "=", 
       RowBox[{"+", "0.2"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"learning", " ", "rate"}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"m0", "=", "dmax"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
         "0.", "  ", "Should", " ", "be", " ", "equal", " ", "to", " ", 
         "number", " ", "of", " ", "inputs"}], ",", " ", 
        RowBox[{"unless", " ", "we", " ", "use", " ", "bias"}]}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"m1", "=", "4"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "1"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"m2", "=", "2"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "2"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"m3", "=", "1"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "3.", "  ", "Should", " ", "be", " ", "equal", " ", "to", " ", 
        "number", " ", "of", " ", 
        RowBox[{"outputs", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"w0", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m1", ",", "m0"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"weights", " ", 
        SubsuperscriptBox["w", "ij", 
         RowBox[{"(", "0", ")"}]], " ", "connecting", " ", "layer", " ", "0", 
        " ", "to", " ", "layer", " ", "1"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"w1", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m2", ",", "m1"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w2", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m3", ",", "m2"}], "}"}]}], "]"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832195814981228*^9, 3.8321960022659063`*^9}, {
  3.832196159683733*^9, 3.832196160155417*^9}, {3.832196338533141*^9, 
  3.832196348700193*^9}, {3.832240123941321*^9, 3.832240151636189*^9}, {
  3.832242087274273*^9, 3.8322421241555233`*^9}, {3.832242403683823*^9, 
  3.832242444475116*^9}, {3.8322426075854263`*^9, 3.8322426076900063`*^9}, {
  3.832260152178412*^9, 3.8322601739681377`*^9}, {3.832262741944386*^9, 
  3.832262742097445*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"8187281c-9142-420b-9683-88bb354f7d00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "MAKE"}]}]}]}], " ", "THE", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DEMO", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", "gr", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"initNN", "[", "]"}], ";", "  ", 
      RowBox[{"(*", " ", "initialize", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nextStep", "[", "]"}], ";", 
      RowBox[{"gr", "=", 
       RowBox[{"draw", "[", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "to", " ", "the", " ", "first", " ", "iteration", " ", "of",
         " ", "the", " ", "process"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "@", 
       RowBox[{"Deploy", "@", 
        RowBox[{"Panel", "@", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Dynamic", "@", "gr"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "@", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Next step\>\"", ",", 
                  RowBox[{
                   RowBox[{"nextStep", "[", "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "@", "16"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Skip 60 steps\>\"", ",", 
                  RowBox[{
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"nextStep", "[", "]"}], ",", 
                    RowBox[{"{", "60", "}"}]}], "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "@", "16"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Skip 600 steps\>\"", ",", 
                  RowBox[{
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"nextStep", "[", "]"}], ",", 
                    RowBox[{"{", "600", "}"}]}], "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}],
            ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FinishDynamic", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.832256846103459*^9, 3.8322568627691298`*^9}, {
   3.8322568963960667`*^9, 3.832256909521018*^9}, {3.83225693979112*^9, 
   3.8322569616364098`*^9}, {3.832257224357931*^9, 3.832257227641049*^9}, 
   3.832257271175654*^9, {3.832257316523951*^9, 3.832257360839613*^9}, {
   3.832257405393293*^9, 3.832257406173177*^9}, {3.832257440691133*^9, 
   3.832257490769849*^9}, {3.832257599212844*^9, 3.8322576005373707`*^9}, {
   3.832257631378625*^9, 3.83225763384256*^9}, {3.8322577045557756`*^9, 
   3.832257708867928*^9}, {3.832259282220359*^9, 3.832259292230598*^9}, {
   3.832259344703067*^9, 3.8322593465402718`*^9}, {3.832259387219212*^9, 
   3.832259401358955*^9}, {3.832259442595717*^9, 3.8322594459887457`*^9}, {
   3.832259499371726*^9, 3.832259567647678*^9}, {3.8322596029629993`*^9, 
   3.8322596067040854`*^9}, {3.8322596956749897`*^9, 3.832259710200404*^9}, {
   3.832260079801155*^9, 3.832260134552095*^9}, {3.832260177946537*^9, 
   3.8322601846326838`*^9}, {3.832260720078743*^9, 3.832260731215732*^9}, {
   3.832262704030376*^9, 3.8322627052173567`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"c285fc1f-fbcc-4543-a560-dfae052a7f13"],

Cell[BoxData[
 TagBox[
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[$CellContext`gr$7905, StandardForm],
        ImageSizeCache->{37.9921875, {2., 7.}}]},
      {
       TemplateBox[{
         ButtonBox[
         "\"Next step\"", 
          ButtonFunction :> ($CellContext`nextStep[]; $CellContext`gr$7905 = \
$CellContext`draw[]; Null), ImageSize -> 160, Background -> 
          RGBColor[0.87, 0.94, 1], Appearance -> Automatic, Evaluator -> 
          Automatic, Method -> "Preemptive"], 
         TemplateBox[{16}, "Spacer1"], 
         ButtonBox["\"Skip 60 steps\"", ButtonFunction :> (Do[
             $CellContext`nextStep[], {
             60}]; $CellContext`gr$7905 = $CellContext`draw[]; Null), 
          ImageSize -> 160, Background -> RGBColor[0.87, 0.94, 1], Appearance -> 
          Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
         TemplateBox[{16}, "Spacer1"], 
         ButtonBox["\"Skip 600 steps\"", ButtonFunction :> (Do[
             $CellContext`nextStep[], {
             600}]; $CellContext`gr$7905 = $CellContext`draw[]; Null), 
          ImageSize -> 160, Background -> RGBColor[0.87, 0.94, 1], Appearance -> 
          Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
        "RowDefault"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Print",
 CellChangeTimes->{{3.8322573542503977`*^9, 3.832257361002982*^9}, 
   3.832257406344861*^9, {3.832257441510661*^9, 3.832257464468094*^9}, 
   3.832257637516552*^9, 3.832258242891659*^9, {3.8322582824981947`*^9, 
   3.832258313504857*^9}, {3.83225853919037*^9, 3.8322585625728617`*^9}, 
   3.832258678402403*^9, {3.832258802766715*^9, 3.832258813334671*^9}, {
   3.832258846411989*^9, 3.832258900661145*^9}, 3.83225894362811*^9, 
   3.83225900083742*^9, 3.832259065140622*^9, {3.8322591055837803`*^9, 
   3.832259110670493*^9}, {3.832259144522357*^9, 3.832259216512651*^9}, {
   3.8322592847028847`*^9, 3.832259293197377*^9}, {3.832259380725857*^9, 
   3.832259401718925*^9}, 3.832259446202879*^9, {3.83225952736161*^9, 
   3.832259567828141*^9}, 3.832259604511278*^9, {3.832259687981078*^9, 
   3.8322597455752573`*^9}, {3.8322598522212048`*^9, 3.832259868003001*^9}, 
   3.8322599171177063`*^9, {3.832259958084799*^9, 3.83226002689157*^9}, {
   3.8322601120031548`*^9, 3.8322601230106153`*^9}, 3.832260187874711*^9, 
   3.832260225389872*^9, {3.832260468262597*^9, 3.832260484908345*^9}, 
   3.832260518082458*^9, 3.832260628048725*^9, {3.832260731664199*^9, 
   3.832260761422309*^9}, 3.832262634345755*^9, {3.8322626661899652`*^9, 
   3.832262705575539*^9}, 3.832262744717071*^9, 3.834336380875689*^9, 
   3.862571721816951*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"bee66143-8465-48a2-9240-8992a6808285"]
}, Open  ]],

Cell[TextData[{
 "The demo above shows a 3-layer neural network with 3 inputs and 1 output.  \
Click the \[OpenCurlyDoubleQuote]Next step\[CloseCurlyDoubleQuote] button and \
observe the following:\n1.  A new training example is loaded into the input \
nodes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "fe82fefd-2bbe-4815-84ba-785e87277e93"],
 ".  The 6 training examples are used cyclically.\n2.  The values of nodes in \
subsequent layers are calculated by the feedforward equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}]], "=", 
    RowBox[{"g", "(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"], "\[CenterDot]", 
      SuperscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], 
       RowBox[{"(", "l", ")"}]]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "c1347742-d032-4ebb-b2c5-d9158a3e4183"],
 ".\n     The weights ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", 
    StyleBox["ij",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "d643fc09-2979-44a7-bb38-29ee40662ae1"],
 " are indicated using arrows.  (The weights are initially small random \
numbers.)",
 "\n3.  The predicted output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],ExpressionUUID->
  "cc24cd64-40bb-4498-8c5b-561e169a965b"],
 " is compared with the training output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "1"], TraditionalForm]],ExpressionUUID->
  "d718592a-0386-468b-8092-b57584d78bc4"],
 " to obtain the error ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "1"], TraditionalForm]],ExpressionUUID->
  "13894a55-002f-45ef-9a51-29bf27309cdf"],
 ".\n4.  The weight changes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]", "\[InvisibleSpace]", 
     SubsuperscriptBox["w", 
      StyleBox["ij",
       FontSlant->"Italic"], 
      RowBox[{"(", "l", ")"}]]}], "=", 
    RowBox[{
     RowBox[{"-", "\[Eta]"}], "   ", 
     RowBox[{
      RowBox[{"\[PartialD]", "\[InvisibleSpace]", "F"}], "\[InvisibleSpace]", 
      "/", "\[InvisibleSpace]", 
      RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
       SubsuperscriptBox["w", 
        StyleBox["ij",
         FontSlant->"Italic"], 
        RowBox[{"(", "l", ")"}]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "d1ac1c26-480b-4617-aacb-0755e53d391d"],
 " are found using backpropagation.\n     For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "1", 
     RowBox[{"(", "2", ")"}]], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "f258564a-81b6-45d5-bd5b-ba48dcd7a916"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "1"], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"350e8e25-23c6-4208-9953-26004f74ef5e"],
 ", then the connection ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["w", "11", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "816e3184-d308-4901-ae2b-ffdaddb1d955"],
 " is weakened (indicated by \
\[OpenCurlyDoubleQuote]\[Dash]\[NonBreakingSpace]\[Dash]\
\[CloseCurlyDoubleQuote]).\n     Conversely, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "1", 
     RowBox[{"(", "2", ")"}]], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "abe73d95-ca21-48c8-b686-daf91cab4978"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "1"], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"69866e4b-7470-42e1-822e-d73680b51bbc"],
 ", then the connection ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["w", "11", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "7d2d2ae0-0be1-43bd-bdc9-2eddfb50f656"],
 " is strengthened (indicated by \[OpenCurlyDoubleQuote]+ +\
\[CloseCurlyDoubleQuote])."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, {3.8320697218054037`*^9, 3.832069767590661*^9}, {
   3.8320698025403347`*^9, 3.8320698379521017`*^9}, {3.832073217043024*^9, 
   3.832073256004232*^9}, 3.832241511398335*^9, {3.83224438614571*^9, 
   3.8322445154188137`*^9}, {3.832260760809998*^9, 3.8322609222435303`*^9}, {
   3.832261954203518*^9, 3.832262098506576*^9}, {3.832262230497929*^9, 
   3.832262243450674*^9}, {3.832262288780952*^9, 
   3.8322624478023167`*^9}},ExpressionUUID->"feee7ea6-8116-4bcb-b97c-\
29edf920fc4c"],

Cell[TextData[{
 "For this particular example, the true function is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"], "+", 
     SubscriptBox["x", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "344e6454-8a9e-4aa3-bb00-652015b8e55f"],
 ".  The weights should converge to some kind of fixed point after 100 \
iterations.  \n\n\t(TBD: Screenshot an example and explain why it works)"
}], "Text",
 CellChangeTimes->{{3.832262512452938*^9, 3.83226255335639*^9}, {
  3.832262654936633*^9, 3.83226265759175*^9}, {3.832262812326088*^9, 
  3.832262822942968*^9}, {3.832262899991989*^9, 3.832262922538023*^9}, {
  3.832263009476988*^9, 
  3.832263060345521*^9}},ExpressionUUID->"499ab812-905c-4aa1-8f80-\
e127554e7fac"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 StyleBox["\t",
  FontSize->12],
 "Animation of the training process for a MLP for learning a XOR function"
}], "Subsection",
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.541899881791147*^9, 
   3.541899916362341*^9}, {3.5434115347253323`*^9, 3.543411546368896*^9}, {
   3.543415487486391*^9, 3.543415497749453*^9}, {3.543447821629345*^9, 
   3.5434478352635*^9}, {3.6020701424319077`*^9, 3.6020701499406233`*^9}, {
   3.602072592357066*^9, 3.602072593730229*^9}, {3.602167753031536*^9, 
   3.6021677571537523`*^9}, {3.665335293623766*^9, 3.66533529539882*^9}, {
   3.665364051491444*^9, 3.665364054780818*^9}, {3.665753514217204*^9, 
   3.665753516668743*^9}, {3.668286718528466*^9, 3.668286718623683*^9}, {
   3.668286786567048*^9, 3.668286790524091*^9}, {3.669983036855146*^9, 
   3.669983054604299*^9}, {3.829138236516528*^9, 3.829138240184496*^9}, {
   3.829138412986101*^9, 3.829138427468975*^9}, {3.8291396023004913`*^9, 
   3.829139604246298*^9}, 3.82938345232003*^9, {3.82994247084936*^9, 
   3.829942471105575*^9}, {3.829944335226465*^9, 3.829944337304579*^9}, {
   3.8299461548651648`*^9, 3.82994615755398*^9}, {3.829946376705764*^9, 
   3.8299463830113688`*^9}, {3.829946636180297*^9, 3.829946642442161*^9}, {
   3.830030085233921*^9, 3.830030093644343*^9}, {3.83011894325214*^9, 
   3.830118959783847*^9}, {3.830120656352852*^9, 3.83012065817768*^9}, {
   3.8320679773057117`*^9, 3.8320679811526117`*^9}, {3.8320680695444107`*^9, 
   3.8320680699873247`*^9}, {3.8320709928759336`*^9, 3.832070998991671*^9}, {
   3.832072501769918*^9, 3.832072502900221*^9}, {3.83207369226546*^9, 
   3.8320736936544228`*^9}, {3.8321957947226973`*^9, 3.832195799665254*^9}, {
   3.832240197805305*^9, 3.8322402013859997`*^9}, {3.8322415318209057`*^9, 
   3.8322415391731443`*^9}, {3.83225679714128*^9, 3.832256803900848*^9}, 
   3.832276297232203*^9, {3.8343364052931967`*^9, 
   3.834336409214553*^9}},ExpressionUUID->"8c7eb160-5316-45ac-befc-\
dc5bafe5037d"],

Cell["Run all the cells below.", "Text",
 CellChangeTimes->{{3.83226075236843*^9, 
  3.8322607543143044`*^9}},ExpressionUUID->"05c6a54c-d808-4ddb-95f4-\
1145706d72a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "DO"}]}]}]}], " ", "THE", " ", "NEXT", " ", "STEP", 
    " ", "IN", " ", "THE", " ", "TRAINING", " ", "PROCESS", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "EFFECTIVELY", " ", "LOOPING", " ", "OVER", " ", "n", " ", "AND", 
          " ", "iter"}], ")"}], " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nextStep", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nCurrent", "\[Equal]", "nmax"}], ",", 
         RowBox[{"iterCurrent", "++"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"fake", " ", "the", " ", "Do", " ", "loop"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"nCurrent", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"nCurrent", "+", "1"}], ",", "nmax", ",", "1"}], "]"}]}], 
       ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"fake", " ", "the", " ", "Do", " ", "loop"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"{", 
         RowBox[{
         "ynTrain", "\[LeftDoubleBracket]", "nCurrent", 
          "\[RightDoubleBracket]"}], "}"}]}], ";", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{"training", " ", "output"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"x0", "=", 
        RowBox[{
        "xndTrain", "\[LeftDoubleBracket]", "nCurrent", 
         "\[RightDoubleBracket]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "set", " ", "zeroth", " ", "layer", " ", "of", " ", "neurons", " ", 
         "equal", " ", "to", " ", "training", " ", "inputs"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"x1", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w0", ".", "x0"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"x2", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w1", ".", "x1"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"x3", "=", 
        RowBox[{"g", "[", 
         RowBox[{"w2", ".", "x2"}], "]"}]}], ";", 
       RowBox[{"(*", " ", "feedforward", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e3", "=", 
        RowBox[{"x3", "-", "y"}]}], ";", 
       RowBox[{"d3", "=", 
        RowBox[{"e3", "*", 
         RowBox[{"h", "[", "x3", "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"calculate", " ", "level"}], "-", 
         RowBox[{"3", " ", "error", " ", "and", " ", "level"}], "-", 
         RowBox[{"3", " ", "delta"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e2", "=", 
        RowBox[{"d3", ".", "w2"}]}], ";", 
       RowBox[{"d2", "=", 
        RowBox[{"e2", "*", 
         RowBox[{"h", "[", "x2", "]"}]}]}], ";", 
       RowBox[{"(*", " ", "backpropagate", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"e1", "=", 
        RowBox[{"d2", ".", "w1"}]}], ";", 
       RowBox[{"d1", "=", 
        RowBox[{"e1", "*", 
         RowBox[{"h", "[", "x1", "]"}]}]}], ";", 
       RowBox[{"(*", " ", "backpropagate", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"w2", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d3", ",", "x2"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"update", " ", "weights"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"w1", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d2", ",", "x1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"w0", "-=", 
        RowBox[{"eta", "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d1", ",", "x0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dw2", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d3", ",", "x2"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dw1", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d2", ",", "x1"}], "]"}]}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dw0", "=", 
        RowBox[{
         RowBox[{"-", "eta"}], "*", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{"d1", ",", "x0"}], "]"}]}]}], ";"}]}], 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "visualization", " ", "purposes", " ", "only"}], 
      " ", "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8322574948813963`*^9, 3.832257498509482*^9}, {
  3.832257539150549*^9, 3.8322576290599957`*^9}, {3.8322576800671053`*^9, 
  3.8322576928328114`*^9}, {3.83225935173428*^9, 3.8322593782215643`*^9}, {
  3.832260356985228*^9, 3.832260387932897*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"e2750e4d-2b01-45e0-b3c0-919fb22b50c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"DRAW", " ", "--"}], "--"}], "--"}], "--"}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"drawNode", "[", 
      RowBox[{"pos_", ",", "color_", ",", "text_"}], "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"node", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"FaceForm", "@", "color"}], ",", 
            RowBox[{"EdgeForm", "@", "Black"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Disk", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "pos", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", ".3"}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{"text", ",", "pos"}], "]"}]}], "\[IndentingNewLine]", "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drawEdge", "[", 
      RowBox[{"posStart_", ",", "posEnd_", ",", "val_"}], "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"colorFunc2", "@", 
        RowBox[{"wlij", "\[LeftDoubleBracket]", 
         RowBox[{"layer", ",", "i", ",", "j"}], "\[RightDoubleBracket]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"AbsoluteThickness", "[", 
        RowBox[{"9", 
         RowBox[{"Tanh", "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"wlij", "\[LeftDoubleBracket]", 
            RowBox[{"layer", ",", "i", ",", "j"}], 
            "\[RightDoubleBracket]"}]}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Arrow", "@", 
        RowBox[{"{", 
         RowBox[{"posStart", ",", "posEnd"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"fmt", "@", 
          RowBox[{"wlij", "\[LeftDoubleBracket]", 
           RowBox[{"layer", ",", "i", ",", "j"}], "\[RightDoubleBracket]"}]}],
          ",", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"posStart", "+", "posEnd"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"drawEdgeChange", "[", 
      RowBox[{"posStart_", ",", "posEnd_", ",", "color_", ",", "text_"}], 
      "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"color", ",", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{"text", ",", 
         RowBox[{".5", 
          RowBox[{"(", 
           RowBox[{"posStart", "+", "posEnd"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"+", "1.2"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colorFunc", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Orange", ",", "Yellow", ",", "Green"}], "}"}], 
       ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colorFunc2", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Orange", ",", "Yellow", ",", 
         RowBox[{"Darker", "@", "Green"}]}], "}"}], ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fmt", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"myFormat", "@", 
        RowBox[{"Round", "[", 
         RowBox[{"#", ",", "0.01"}], "]"}]}], "&"}], "@", "x"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fmt2", "[", "dw_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dw", ">", "0"}], ",", "\"\<++\>\"", ",", "\"\<--\>\""}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"layers", "=", "3"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodeCount", "=", 
         RowBox[{"{", 
          RowBox[{"m0", ",", "m1", ",", "m2", ",", "m3"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xli", "=", 
         RowBox[{"{", 
          RowBox[{"x0", ",", "x1", ",", "x2", ",", "x3"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"wlij", "=", 
         RowBox[{"{", 
          RowBox[{"w0", ",", "w1", ",", "w2"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dwlij", "=", 
         RowBox[{"{", 
          RowBox[{"dw0", ",", "dw1", ",", "dw2"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nodePos", "[", 
          RowBox[{"layer_", ",", "index_"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"layer", ",", 
           RowBox[{"-", 
            RowBox[{"(", 
             FractionBox[
              RowBox[{"index", "-", ".51"}], 
              RowBox[{
               RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}], "+", 
               ".03"}]], ")"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "@", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Arrowheads", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"Medium", ",", ".5"}], "}"}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"weights", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawEdge", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{
                   RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], ",", 
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"wlij", "\[LeftDoubleBracket]", 
                  RowBox[{"layer", ",", "i", ",", "j"}], 
                  "\[RightDoubleBracket]"}]}], "]"}], "\[IndentingNewLine]", 
               ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "1", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{
                 "nodeCount", "\[LeftDoubleBracket]", "layer", 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", "CHANGES", " ", 
               "to", " ", "weights", " ", "based", " ", "on", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"backpropagation", " ", "--"}], "--"}], "--"}], 
                "--"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawEdgeChange", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{
                   RowBox[{"layer", "-", "1"}], ",", "j"}], "]"}], ",", 
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"colorFunc2", "@", 
                  RowBox[{"Sign", "@", 
                   RowBox[{"dwlij", "\[LeftDoubleBracket]", 
                    RowBox[{"layer", ",", "i", ",", "j"}], 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                 RowBox[{"fmt2", "@", 
                  RowBox[{"dwlij", "\[LeftDoubleBracket]", 
                   RowBox[{"layer", ",", "i", ",", "j"}], 
                   "\[RightDoubleBracket]"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "1", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{
                 "nodeCount", "\[LeftDoubleBracket]", "layer", 
                  "\[RightDoubleBracket]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"nodes", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"drawNode", "[", 
                RowBox[{
                 RowBox[{"nodePos", "[", 
                  RowBox[{"layer", ",", "i"}], "]"}], ",", 
                 RowBox[{"colorFunc", "@", 
                  RowBox[{"xli", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"1", "+", "layer"}], ",", "i"}], 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"fmt", "@", 
                  RowBox[{"xli", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"1", "+", "layer"}], ",", "i"}], 
                   "\[RightDoubleBracket]"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", "0", ",", "layers"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", "TRAINING", " ", 
               "OUTPUT", " ", "and", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ERRORS", " ", "--"}], "--"}], "--"}], "--"}]}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"drawNode", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".6", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"colorFunc", "@", 
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                   RowBox[{"fmt", "@", 
                    RowBox[{
                    "y", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"drawNode", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"colorFunc", "@", 
                    RowBox[{
                    "e3", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], ",", 
                   RowBox[{"fmt", "@", 
                    RowBox[{
                    "e3", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(y\), \(``\)]\)\>\"", ",", "i"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(Y\), \(``\)]\)\>\"", ",", "i"}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".6", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(``\)]\)\>\"", 
                    ",", "i"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"nodePos", "[", 
                    RowBox[{"layer", ",", "i"}], "]"}], "+", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "4"}], "}"}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"layer", ",", 
                 RowBox[{"{", "layers", "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "layer"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "Draw"}]}]}]}], " ", 
               RowBox[{"inputs", "/", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"outputs", " ", "--"}], "--"}], "--"}], "--"}]}]}],
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(x\), \(``\)]\) \
\[LongRightArrow]\>\"", ",", "i"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"nodePos", "[", 
                   RowBox[{"0", ",", "i"}], "]"}], "+", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"nodeCount", "\[LeftDoubleBracket]", 
                  RowBox[{"1", "+", "0"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"648", ",", "324"}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
           RowBox[{"PlotRangePadding", "\[Rule]", 
            RowBox[{"Scaled", "[", ".1", "]"}]}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Iteration=``     Training example \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)=``\>\"", ",", "iterCurrent", 
                ",", "nCurrent"}], "]"}], "//", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", "Black"}], "]"}], "&"}]}], ")"}]}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8322402128460913`*^9, 3.8322406222472*^9}, {
   3.832240658610623*^9, 3.832240669698717*^9}, {3.832240706027273*^9, 
   3.8322408065124073`*^9}, {3.8322408491005774`*^9, 
   3.8322409213323936`*^9}, {3.8322409554926567`*^9, 3.832241053832365*^9}, {
   3.832241101500495*^9, 3.8322412434696693`*^9}, {3.8322414014644823`*^9, 
   3.83224146704535*^9}, {3.83225682830018*^9, 3.8322568364560833`*^9}, {
   3.83225730728897*^9, 3.832257308011739*^9}, {3.832257695424418*^9, 
   3.832257700246738*^9}, {3.832258074309569*^9, 3.8322580867181377`*^9}, {
   3.832258127736174*^9, 3.8322581815639267`*^9}, 3.8322582403493357`*^9, {
   3.832258280445951*^9, 3.832258312476502*^9}, {3.83225844012438*^9, 
   3.832258560690752*^9}, {3.8322586555018177`*^9, 3.83225894289634*^9}, {
   3.8322589813022118`*^9, 3.832259031867137*^9}, {3.83225906432419*^9, 
   3.832259215957787*^9}, {3.832259300007928*^9, 3.832259338525567*^9}, {
   3.8322595996927156`*^9, 3.832259600381132*^9}, {3.832259680915948*^9, 
   3.8322596870908813`*^9}, {3.8322597259580603`*^9, 
   3.8322597440300503`*^9}, {3.832259781469685*^9, 3.8322600091638947`*^9}, {
   3.83226021310653*^9, 3.832260223884807*^9}, {3.832260403927515*^9, 
   3.832260515843934*^9}, {3.832260614268959*^9, 3.832260625311796*^9}, {
   3.8322625743983183`*^9, 3.8322626318835783`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"55148c29-b504-4db3-b3bb-89dd2035844e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"initNN", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "TRAINING", " ", "DATA", 
       " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"SET", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataTrain", "=", 
       RowBox[{"(", GridBox[{
          {"1", "1", "1", "1"},
          {"1", 
           RowBox[{"-", "1"}], "1", 
           RowBox[{"-", "1"}]},
          {"1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "1"},
          {"1", "1", "1", 
           RowBox[{"-", "1"}]},
          {
           RowBox[{"-", "1"}], "1", 
           RowBox[{"-", "1"}], "1"},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "1", "1"},
          {
           RowBox[{"-", "1"}], "1", "1", 
           RowBox[{"-", "1"}]},
          {
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}]}
         }], ")"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "FIRST", " ", "column", " ", "is", " ", "the", " ", "training", " ", 
         "output", " ", "y"}], ",", " ", 
        RowBox[{"OTHER", " ", "cols", " ", "are", " ", "x"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"xndTrain", "=", 
       RowBox[{"Rest", "/@", "dataTrain"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ynTrain", "=", 
       RowBox[{"First", "/@", "dataTrain"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nmax", ",", "dmax"}], "}"}], "=", 
       RowBox[{"Dimensions", "@", "xndTrain"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", " ", "DEFINE"}]}]}]}], " ", "NEURAL", " ", "NETWORK",
         " ", "AND", " ", "INITIALIZE", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PARAMETERS", " ", "--"}], "--"}], "--"}], "--"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nCurrent", "=", "0"}], ";", 
      RowBox[{"iterCurrent", "=", "1"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"pre", "-", "start"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "x_", "]"}], ":=", 
       RowBox[{"Tanh", "[", "x", "]"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "sigmoid", " ", "function", " ", "whose", " ", "output", " ", 
         "varies", " ", "between"}], " ", "-", 
        RowBox[{"1", " ", "and"}], " ", "+", "1"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h", "[", "g_", "]"}], ":=", 
       RowBox[{"1", "-", 
        SuperscriptBox["g", "2"]}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "derivative", " ", "of", " ", "sigmoid", " ", "function", " ", "as", 
        " ", "function", " ", "of", " ", "its", " ", "value"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"eta", "=", 
       RowBox[{"+", "0.2"}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"learning", " ", "rate"}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"m0", "=", "dmax"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
         "0.", "  ", "Should", " ", "be", " ", "equal", " ", "to", " ", 
         "number", " ", "of", " ", "inputs"}], ",", " ", 
        RowBox[{"unless", " ", "we", " ", "use", " ", "bias"}]}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"m1", "=", "5"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "1"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"m2", "=", "4"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "2"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"m3", "=", "1"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "number", " ", "of", " ", "neurons", " ", "in", " ", "layer", " ", 
        "3.", "  ", "Should", " ", "be", " ", "equal", " ", "to", " ", 
        "number", " ", "of", " ", 
        RowBox[{"outputs", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"w0", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m1", ",", "m0"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"weights", " ", 
        SubsuperscriptBox["w", "ij", 
         RowBox[{"(", "0", ")"}]], " ", "connecting", " ", "layer", " ", "0", 
        " ", "to", " ", "layer", " ", "1"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"w1", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m2", ",", "m1"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w2", "=", 
       RowBox[{".2", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m3", ",", "m2"}], "}"}]}], "]"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832195814981228*^9, 3.8321960022659063`*^9}, {
  3.832196159683733*^9, 3.832196160155417*^9}, {3.832196338533141*^9, 
  3.832196348700193*^9}, {3.832240123941321*^9, 3.832240151636189*^9}, {
  3.832242087274273*^9, 3.8322421241555233`*^9}, {3.832242403683823*^9, 
  3.832242444475116*^9}, {3.8322426075854263`*^9, 3.8322426076900063`*^9}, {
  3.832260152178412*^9, 3.8322601739681377`*^9}, {3.832262741944386*^9, 
  3.832262742097445*^9}, {3.8343364185384007`*^9, 3.8343364589528503`*^9}, {
  3.834336544893264*^9, 3.834336545238627*^9}, {3.862572875628088*^9, 
  3.8625729043442373`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"622149b7-1e3c-479c-83f4-87b1e5e51d44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "MAKE"}]}]}]}], " ", "THE", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DEMO", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", "gr", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"initNN", "[", "]"}], ";", "  ", 
      RowBox[{"(*", " ", "initialize", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nextStep", "[", "]"}], ";", 
      RowBox[{"gr", "=", 
       RowBox[{"draw", "[", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "to", " ", "the", " ", "first", " ", "iteration", " ", "of",
         " ", "the", " ", "process"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "@", 
       RowBox[{"Deploy", "@", 
        RowBox[{"Panel", "@", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Dynamic", "@", "gr"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Row", "@", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Next step\>\"", ",", 
                  RowBox[{
                   RowBox[{"nextStep", "[", "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "@", "16"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Skip 60 steps\>\"", ",", 
                  RowBox[{
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"nextStep", "[", "]"}], ",", 
                    RowBox[{"{", "60", "}"}]}], "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "@", "16"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Skip 600 steps\>\"", ",", 
                  RowBox[{
                   RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"nextStep", "[", "]"}], ",", 
                    RowBox[{"{", "600", "}"}]}], "]"}], ";", 
                   RowBox[{"gr", "=", 
                    RowBox[{"draw", "[", "]"}]}], ";"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "160"}], ",", 
                  RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}],
            ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FinishDynamic", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.832256846103459*^9, 3.8322568627691298`*^9}, {
   3.8322568963960667`*^9, 3.832256909521018*^9}, {3.83225693979112*^9, 
   3.8322569616364098`*^9}, {3.832257224357931*^9, 3.832257227641049*^9}, 
   3.832257271175654*^9, {3.832257316523951*^9, 3.832257360839613*^9}, {
   3.832257405393293*^9, 3.832257406173177*^9}, {3.832257440691133*^9, 
   3.832257490769849*^9}, {3.832257599212844*^9, 3.8322576005373707`*^9}, {
   3.832257631378625*^9, 3.83225763384256*^9}, {3.8322577045557756`*^9, 
   3.832257708867928*^9}, {3.832259282220359*^9, 3.832259292230598*^9}, {
   3.832259344703067*^9, 3.8322593465402718`*^9}, {3.832259387219212*^9, 
   3.832259401358955*^9}, {3.832259442595717*^9, 3.8322594459887457`*^9}, {
   3.832259499371726*^9, 3.832259567647678*^9}, {3.8322596029629993`*^9, 
   3.8322596067040854`*^9}, {3.8322596956749897`*^9, 3.832259710200404*^9}, {
   3.832260079801155*^9, 3.832260134552095*^9}, {3.832260177946537*^9, 
   3.8322601846326838`*^9}, {3.832260720078743*^9, 3.832260731215732*^9}, {
   3.832262704030376*^9, 3.8322627052173567`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"371d63f3-2344-4613-abf8-6326f4d5d33a"],

Cell[BoxData[
 TagBox[
  PanelBox[
   TagBox[GridBox[{
      {
       DynamicBox[ToBoxes[$CellContext`gr$30970, StandardForm],
        ImageSizeCache->{47.390625, {2., 8.}}]},
      {
       TemplateBox[{
         ButtonBox[
         "\"Next step\"", 
          ButtonFunction :> ($CellContext`nextStep[]; $CellContext`gr$30970 = \
$CellContext`draw[]; Null), ImageSize -> 160, Background -> 
          RGBColor[0.87, 0.94, 1], Appearance -> Automatic, Evaluator -> 
          Automatic, Method -> "Preemptive"], 
         TemplateBox[{16}, "Spacer1"], 
         ButtonBox["\"Skip 60 steps\"", ButtonFunction :> (Do[
             $CellContext`nextStep[], {
             60}]; $CellContext`gr$30970 = $CellContext`draw[]; Null), 
          ImageSize -> 160, Background -> RGBColor[0.87, 0.94, 1], Appearance -> 
          Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
         TemplateBox[{16}, "Spacer1"], 
         ButtonBox["\"Skip 600 steps\"", ButtonFunction :> (Do[
             $CellContext`nextStep[], {
             600}]; $CellContext`gr$30970 = $CellContext`draw[]; Null), 
          ImageSize -> 160, Background -> RGBColor[0.87, 0.94, 1], Appearance -> 
          Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
        "RowDefault"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Print",
 CellChangeTimes->{{3.8322573542503977`*^9, 3.832257361002982*^9}, 
   3.832257406344861*^9, {3.832257441510661*^9, 3.832257464468094*^9}, 
   3.832257637516552*^9, 3.832258242891659*^9, {3.8322582824981947`*^9, 
   3.832258313504857*^9}, {3.83225853919037*^9, 3.8322585625728617`*^9}, 
   3.832258678402403*^9, {3.832258802766715*^9, 3.832258813334671*^9}, {
   3.832258846411989*^9, 3.832258900661145*^9}, 3.83225894362811*^9, 
   3.83225900083742*^9, 3.832259065140622*^9, {3.8322591055837803`*^9, 
   3.832259110670493*^9}, {3.832259144522357*^9, 3.832259216512651*^9}, {
   3.8322592847028847`*^9, 3.832259293197377*^9}, {3.832259380725857*^9, 
   3.832259401718925*^9}, 3.832259446202879*^9, {3.83225952736161*^9, 
   3.832259567828141*^9}, 3.832259604511278*^9, {3.832259687981078*^9, 
   3.8322597455752573`*^9}, {3.8322598522212048`*^9, 3.832259868003001*^9}, 
   3.8322599171177063`*^9, {3.832259958084799*^9, 3.83226002689157*^9}, {
   3.8322601120031548`*^9, 3.8322601230106153`*^9}, 3.832260187874711*^9, 
   3.832260225389872*^9, {3.832260468262597*^9, 3.832260484908345*^9}, 
   3.832260518082458*^9, 3.832260628048725*^9, {3.832260731664199*^9, 
   3.832260761422309*^9}, 3.832262634345755*^9, {3.8322626661899652`*^9, 
   3.832262705575539*^9}, 3.832262744717071*^9, 3.834336380875689*^9, 
   3.834336465160524*^9, 3.834336546048779*^9, 3.862572575596562*^9, 
   3.86257276136924*^9, {3.8625728779427032`*^9, 3.862572905830019*^9}},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"910b5bdd-4452-407b-b6be-567bef91f7e5"]
}, Open  ]],

Cell[TextData[{
 "The demo above shows a 3-layer neural network with 3 inputs and 1 output.  \
Click the \[OpenCurlyDoubleQuote]Next step\[CloseCurlyDoubleQuote] button and \
observe the following:\n1.  A new training example is loaded into the input \
nodes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "68e59c5f-5add-41a9-9055-11407d953435"],
 ".  The 6 training examples are used cyclically.\n2.  The values of nodes in \
subsequent layers are calculated by the feedforward equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox["x",
      FontWeight->"Bold",
      FontSlant->"Plain"], 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}]], "=", 
    RowBox[{"g", "(", 
     RowBox[{
      StyleBox["w",
       FontWeight->"Bold",
       FontSlant->"Plain"], "\[CenterDot]", 
      SuperscriptBox[
       StyleBox["x",
        FontWeight->"Bold",
        FontSlant->"Plain"], 
       RowBox[{"(", "l", ")"}]]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "05278474-f1c5-42fe-a52a-14506151de5b"],
 ".\n     The weights ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", 
    StyleBox["ij",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "005a9d0b-bfcf-4cc9-8eb7-e3dc36da1179"],
 " are indicated using arrows.  (The weights are initially small random \
numbers.)",
 "\n3.  The predicted output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],ExpressionUUID->
  "728310c5-61a0-41f7-9ef0-55f8487489e9"],
 " is compared with the training output ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "1"], TraditionalForm]],ExpressionUUID->
  "2abb9674-f307-4572-a442-c4380d9735d5"],
 " to obtain the error ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "1"], TraditionalForm]],ExpressionUUID->
  "1ce99315-f1aa-41c9-a9e3-28b42a01b3d7"],
 ".\n4.  The weight changes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Delta]", "\[InvisibleSpace]", 
     SubsuperscriptBox["w", 
      StyleBox["ij",
       FontSlant->"Italic"], 
      RowBox[{"(", "l", ")"}]]}], "=", 
    RowBox[{
     RowBox[{"-", "\[Eta]"}], "   ", 
     RowBox[{
      RowBox[{"\[PartialD]", "\[InvisibleSpace]", "F"}], "\[InvisibleSpace]", 
      "/", "\[InvisibleSpace]", 
      RowBox[{"\[PartialD]", "\[InvisibleSpace]", 
       SubsuperscriptBox["w", 
        StyleBox["ij",
         FontSlant->"Italic"], 
        RowBox[{"(", "l", ")"}]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "ebf889df-512a-4977-998f-6c7c1e5dffa0"],
 " are found using backpropagation.\n     For example, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "1", 
     RowBox[{"(", "2", ")"}]], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "460ff6da-0cf5-4d76-8037-5345db4c4954"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "1"], ">", "0"}], TraditionalForm]],
  ExpressionUUID->"0c9ca9cc-a773-41bb-b9bb-bcbc8e6a4566"],
 ", then the connection ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["w", "11", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "63dcdb2d-a233-4a50-bdac-6dbd857ae277"],
 " is weakened (indicated by \
\[OpenCurlyDoubleQuote]\[Dash]\[NonBreakingSpace]\[Dash]\
\[CloseCurlyDoubleQuote]).\n     Conversely, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["x", "1", 
     RowBox[{"(", "2", ")"}]], ">", "0"}], TraditionalForm]],ExpressionUUID->
  "138b5c8e-ee33-4efa-ae59-c56aea23d496"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Epsilon]", "1"], "<", "0"}], TraditionalForm]],
  ExpressionUUID->"de6f5843-7d22-44e7-a780-d7883f617663"],
 ", then the connection ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["w", "11", 
    RowBox[{"(", "2", ")"}]], TraditionalForm]],ExpressionUUID->
  "a20fdf89-b9ba-4624-bb2f-918a117335a5"],
 " is strengthened (indicated by \[OpenCurlyDoubleQuote]+ +\
\[CloseCurlyDoubleQuote])."
}], "Text",
 CellFrame->{{0.5, 3}, {3, 0.5}},
 CellChangeTimes->{{3.537240825478484*^9, 3.537240846285551*^9}, {
   3.5372408807479687`*^9, 3.537240884771262*^9}, {3.537240918257341*^9, 
   3.537240957758065*^9}, {3.538616520779072*^9, 3.53861652088307*^9}, {
   3.538616763851562*^9, 3.5386167650116158`*^9}, {3.538616942560495*^9, 
   3.538617109223545*^9}, {3.538617219064094*^9, 3.538617219064226*^9}, {
   3.5386248629906073`*^9, 3.538624864940199*^9}, {3.538625966155332*^9, 
   3.538625966155493*^9}, {3.539048542009145*^9, 3.539048758761492*^9}, {
   3.539049428439837*^9, 3.539049439910331*^9}, {3.539050683439069*^9, 
   3.539050736544426*^9}, {3.539050908116729*^9, 3.539051016795064*^9}, {
   3.5390512023660517`*^9, 3.5390512023662167`*^9}, {3.539051439693101*^9, 
   3.539051464478467*^9}, {3.5390515122244167`*^9, 3.5390515458607492`*^9}, {
   3.5390520594791107`*^9, 3.5390520656970387`*^9}, {3.5390521771538057`*^9, 
   3.539052196364072*^9}, 3.5390522349325323`*^9, {3.539052265256748*^9, 
   3.539052268020113*^9}, {3.539052381506957*^9, 3.539052534835857*^9}, {
   3.539052882603759*^9, 3.53905291231559*^9}, {3.539128946533141*^9, 
   3.539129106468473*^9}, {3.5405083240925426`*^9, 3.540508444086706*^9}, {
   3.540508485659018*^9, 3.540508576710731*^9}, {3.540508642929371*^9, 
   3.5405086972771683`*^9}, {3.54190088491973*^9, 3.541901115031684*^9}, {
   3.54277019727363*^9, 3.542770529643713*^9}, {3.542775031043558*^9, 
   3.542775033770831*^9}, {3.542775084514246*^9, 3.542775085431816*^9}, {
   3.5427752756654673`*^9, 3.5427752756656027`*^9}, {3.542985995212709*^9, 
   3.542985996905274*^9}, {3.829160080058119*^9, 3.8291600800585814`*^9}, {
   3.829225008430043*^9, 3.829225012251895*^9}, {3.8293999512793694`*^9, 
   3.82939995713701*^9}, {3.829400033976328*^9, 3.829400240477096*^9}, {
   3.8294010282970953`*^9, 3.829401028605523*^9}, {3.829401548076373*^9, 
   3.829401575336699*^9}, {3.8294241255299463`*^9, 3.829424267708708*^9}, {
   3.82942784922856*^9, 3.829427918943562*^9}, {3.829428003219873*^9, 
   3.829428004069489*^9}, {3.8299442347301273`*^9, 3.829944287487131*^9}, {
   3.829944529764435*^9, 3.82994453241534*^9}, {3.8299876731709003`*^9, 
   3.8299876913529253`*^9}, {3.829988127492119*^9, 3.8299881950974073`*^9}, {
   3.829989247634664*^9, 3.829989285628243*^9}, {3.8300759257540197`*^9, 
   3.83007593835905*^9}, {3.8300760745268*^9, 3.830076116832987*^9}, {
   3.83012131498543*^9, 3.8301213639238663`*^9}, {3.830121398908307*^9, 
   3.830121402547614*^9}, {3.8320697218054037`*^9, 3.832069767590661*^9}, {
   3.8320698025403347`*^9, 3.8320698379521017`*^9}, {3.832073217043024*^9, 
   3.832073256004232*^9}, 3.832241511398335*^9, {3.83224438614571*^9, 
   3.8322445154188137`*^9}, {3.832260760809998*^9, 3.8322609222435303`*^9}, {
   3.832261954203518*^9, 3.832262098506576*^9}, {3.832262230497929*^9, 
   3.832262243450674*^9}, {3.832262288780952*^9, 
   3.8322624478023167`*^9}},ExpressionUUID->"8c0539a3-a761-4ce8-ae9e-\
0fdc388ccb51"],

Cell["\<\
This example is VERY hard to learn.... it\[CloseCurlyQuote]s a full XOR... \
and I think it tends to get stuck in local minima\
\>", "Text",
 CellChangeTimes->{{3.832262512452938*^9, 3.83226255335639*^9}, {
  3.832262654936633*^9, 3.83226265759175*^9}, {3.832262812326088*^9, 
  3.832262822942968*^9}, {3.832262899991989*^9, 3.832262922538023*^9}, {
  3.832263009476988*^9, 3.832263060345521*^9}, {3.8343365097783813`*^9, 
  3.834336518234015*^9}, {3.834336580253529*^9, 
  3.834336589459214*^9}},ExpressionUUID->"6d1e02b8-4905-4fcb-b7b4-\
eb4f534dcf66"]
}, Closed]]
}, Closed]],

Cell[TextData[{
 StyleBox[
 CounterBox["Section"],
  FontWeight->"Bold"],
 StyleBox["\t",
  FontSize->12],
 "Convolutional Neural Networks (CNNs) \[Dash] TBD"
}], "Section",
 CellChangeTimes->{{3.5291686288272038`*^9, 3.529168673359717*^9}, {
   3.52916943358504*^9, 3.529169445963738*^9}, {3.529169596133623*^9, 
   3.5291695976374817`*^9}, {3.529169893555318*^9, 3.529169905282453*^9}, {
   3.5291713844616127`*^9, 3.529171411939254*^9}, {3.5300417008889723`*^9, 
   3.53004170419167*^9}, {3.5300423826927233`*^9, 3.530042396971686*^9}, 
   3.536167973793385*^9, {3.536168579787781*^9, 3.5361685817847977`*^9}, {
   3.536168634342664*^9, 3.5361686433995743`*^9}, {3.536168684329932*^9, 
   3.536168689993441*^9}, {3.536176286751018*^9, 3.536176289031323*^9}, {
   3.536176325717432*^9, 3.536176349874566*^9}, {3.536187391206687*^9, 
   3.536187399781274*^9}, {3.536197727488867*^9, 3.536197734951215*^9}, {
   3.536365512519597*^9, 3.536365522813716*^9}, {3.536365807796754*^9, 
   3.536365811188205*^9}, {3.5367968310616837`*^9, 3.536796833541168*^9}, 
   3.536801764106123*^9, {3.53683891790171*^9, 3.5368389207963953`*^9}, 
   3.536883017549859*^9, {3.537063377182537*^9, 3.53706338184676*^9}, {
   3.5370647435415583`*^9, 3.537064752461142*^9}, {3.5372417546642923`*^9, 
   3.537241764295224*^9}, {3.537243370231011*^9, 3.537243419451825*^9}, {
   3.537581360995524*^9, 3.537581375910795*^9}, {3.5389090454215508`*^9, 
   3.538909048856401*^9}, 3.6617695367249537`*^9, 3.665401393635997*^9, {
   3.666096182606893*^9, 3.66609619780551*^9}, {3.666096893371356*^9, 
   3.666096901542645*^9}, {3.829138386728099*^9, 3.8291383933044567`*^9}, 
   3.829383415481415*^9, 3.8293834503787518`*^9, {3.829942465627427*^9, 
   3.829942467879101*^9}, {3.829997800196681*^9, 3.829997807078936*^9}, {
   3.830028608124951*^9, 3.8300286105677137`*^9}, {3.8301189407278423`*^9, 
   3.830118941043433*^9}, {3.830120641636561*^9, 3.8301206816207943`*^9}, {
   3.8319783172893553`*^9, 3.831978320409945*^9}, 3.832067968309473*^9, 
   3.8321014683792067`*^9, {3.832176878872037*^9, 3.832176887600047*^9}, 
   3.832269036363564*^9, {3.8796369367070513`*^9, 
   3.8796369513057117`*^9}},ExpressionUUID->"b03b8aa3-fb95-4f4b-a7af-\
071c524bdd7b"],

Cell[CellGroupData[{

Cell["Initialization cells", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.8070154598669024`*^9, 3.8070154885959997`*^9}, {
   3.807017341236628*^9, 3.80701736570385*^9}, {3.822516568346211*^9, 
   3.822516570298175*^9}, 
   3.8225168546988897`*^9},ExpressionUUID->"752c6903-eea8-411a-a465-\
4ed16f9a74a1"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     Basics"
}], "Subsection",
 CellChangeTimes->{{3.4281528403032417`*^9, 3.4281529076468563`*^9}, {
   3.428152950216391*^9, 3.428152952680171*^9}, {3.428246637908412*^9, 
   3.4282466399836693`*^9}, {3.4282479432844677`*^9, 3.428247946979678*^9}, 
   3.428252767698082*^9, {3.430756210159871*^9, 3.430756210811077*^9}, {
   3.440430597278523*^9, 3.440430603846034*^9}, {3.440430708157139*^9, 
   3.4404307211846933`*^9}, {3.452528704069104*^9, 3.452528716700231*^9}, {
   3.456683697410297*^9, 3.456683697672628*^9}, {3.456683818309866*^9, 
   3.4566838188991833`*^9}, {3.456754740884289*^9, 3.456754756683476*^9}, {
   3.457107448944416*^9, 3.457107449654791*^9}, {3.45710749273438*^9, 
   3.457107493431397*^9}, {3.457107632870536*^9, 3.457107636222329*^9}, {
   3.458569397551819*^9, 3.458569397854059*^9}, {3.458573222029723*^9, 
   3.458573222355913*^9}, {3.458574163138053*^9, 3.4585741819785147`*^9}, {
   3.458651452395811*^9, 3.458651454374943*^9}, {3.4586534486489143`*^9, 
   3.458653456472352*^9}, {3.458692858457357*^9, 3.458692858582313*^9}, {
   3.45869537605101*^9, 3.458695382383501*^9}, {3.458699834787621*^9, 
   3.458699838152005*^9}, {3.459002431296195*^9, 3.4590024315748158`*^9}, {
   3.459035355965838*^9, 3.459035410377709*^9}, {3.459035491446749*^9, 
   3.459035522455891*^9}, {3.487377145594287*^9, 3.487377145928273*^9}, {
   3.49824004039636*^9, 3.4982400480758944`*^9}, {3.70965944012087*^9, 
   3.709659444442853*^9}, {3.722962574737322*^9, 3.7229625815767927`*^9}, {
   3.722962791673148*^9, 3.7229628060028143`*^9}, {3.7229632769317427`*^9, 
   3.722963279960807*^9}, {3.722963897166394*^9, 3.7229638977941647`*^9}, {
   3.7230575355853167`*^9, 3.723057537051255*^9}, {3.723068374958317*^9, 
   3.723068375512476*^9}, {3.7232975316509333`*^9, 3.723297532071987*^9}, {
   3.725283189394959*^9, 3.725283193530905*^9}, 3.7585528789980593`*^9, {
   3.758563028472864*^9, 3.758563029011462*^9}, {3.758758253260693*^9, 
   3.758758255984445*^9}, {3.758825817018845*^9, 3.7588258408239307`*^9}, {
   3.758825880433918*^9, 3.758825881032544*^9}, {3.8185116583142014`*^9, 
   3.818511677636343*^9}, {3.818855331913563*^9, 3.8188553816155357`*^9}, {
   3.818866035227425*^9, 3.818866036955139*^9}, {3.818888232782876*^9, 
   3.8188882399634123`*^9}, {3.822511317929438*^9, 3.822511319511262*^9}, {
   3.822511508724369*^9, 3.822511517318471*^9}, {3.822515004477889*^9, 
   3.822515005400837*^9}},ExpressionUUID->"e31e17cd-506a-465e-ac06-\
d98fad9c8fc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solid", "=", 
   RowBox[{"Dashing", "@", 
    RowBox[{"{", "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DarkGreen", "=", 
   RowBox[{"Darker", "[", 
    RowBox[{"Green", ",", "0.67"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"resistorColorList", "=", 
   RowBox[{"{", 
    RowBox[{"Black", ",", "Brown", ",", "Red", ",", "Orange", ",", 
     RowBox[{"Darker", "@", "Yellow"}], ",", 
     RowBox[{"Darker", "@", "Green"}], ",", "Blue", ",", "Purple", ",", 
     "Gray", ",", "Cyan"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"resistorStyle", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AbsoluteThickness", "@", "1"}], ",", 
     RowBox[{"resistorColorList", "[", 
      RowBox[{"[", 
       RowBox[{"Mod", "[", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "@", "resistorColorList"}], ",", "1"}], "]"}], 
       "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"purpleWhite", "[", "v_", "]"}], ":=", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.75", ",", "0.25", ",", 
     RowBox[{
      RowBox[{"Abs", "[", "v", "]"}], "^", "0.5"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blueWhiteRed", "[", "v_", "]"}], ":=", 
   RowBox[{"Hue", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"v", ">", "0.5"}], ",", "0.0", ",", "0.5"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"Abs", "[", 
        RowBox[{"v", "-", "0.5"}], "]"}]}], ")"}], ",", "0.95"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colorFromComplex", "[", 
    RowBox[{"z_", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{"Brightness", "\[Rule]", "1."}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Hue", "[", 
    RowBox[{
     RowBox[{"Rescale", "[", 
      RowBox[{
       RowBox[{"Arg", "@", "z"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], ",", "0.8", ",", 
     RowBox[{"1", "-", 
      FractionBox["1", 
       RowBox[{"1", "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"z", "*", 
          RowBox[{"OptionValue", "[", "Brightness", "]"}]}], "]"}]}]]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enlargeFont", "=", 
   RowBox[{
    RowBox[{"#", "/.", 
     RowBox[{"s_String", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{"s", ",", "16"}], "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myCF", "=", 
   RowBox[{
    RowBox[{"Blend", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"0.8", ",", "0.75", ",", "0.75"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.7", ",", "0.75", ",", "0.80"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.6", ",", "0.75", ",", "0.90"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.6", ",", "0.25", ",", "1.00"}], "]"}], ",", 
        "\[IndentingNewLine]", "White", ",", "\[IndentingNewLine]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.9938925000000001`", ",", "0.989345`", ",", "0.5766145`"}],
          "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.881316`", ",", "0.5539655`", ",", "0.2226795`"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.817319`", ",", "0.134167`", ",", "0.164218`"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Clip", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myCF", "=", 
   RowBox[{
    RowBox[{"Blend", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"0.67", ",", "0.75", ",", "0.80"}], "]"}], ",", 
        "\[IndentingNewLine]", "White", ",", "\[IndentingNewLine]", 
        RowBox[{"Hue", "[", 
         RowBox[{".15", ",", ".75", ",", ".80"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Clip", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "]"}], "&"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.824583498698711*^9, 3.8245834989319572`*^9}, {
  3.824583634263726*^9, 3.824583664495422*^9}, {3.824595873567438*^9, 
  3.824595945515761*^9}, {3.8245964673616447`*^9, 3.824596484022908*^9}, {
  3.826622537825223*^9, 3.826622544154435*^9}, {3.8266225751507483`*^9, 
  3.826622582335774*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1722bef9-8f31-4d93-83ef-4bac451389db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myGS", "=", 
   RowBox[{"{", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"14", ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "Black"}], 
      "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myPS", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"14", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}], ",", "Black"}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "324"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "@", "0"}], ",", "Black"}], "}"}]}]}], 
     ",", 
     RowBox[{"ImageMargins", "\[Rule]", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myPS1", "=", 
   RowBox[{"{", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"ColorData", "[", "97", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", "myGS"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"ExclusionsStyle", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"ExclusionsStyle", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", "myGS", ",", "myPS", ",", "myPS1"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLinePlot", ",", "myGS", ",", "myPS", ",", "myPS1"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLogPlot", ",", "myGS", ",", "myPS"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLogLogPlot", ",", "myGS", ",", "myPS"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLogLinearPlot", ",", "myGS", ",", "myPS"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"DiscretePlot", ",", "myGS", ",", "myPS"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"RectangleChart", ",", "myGS", ",", "myPS"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ArrayPlot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", "0"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ContourPlot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", "0"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"DensityPlot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", "0"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"StreamPlot", ",", "myGS", ",", "myPS", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"StreamColorFunction", "\[Rule]", "None"}], ",", 
    RowBox[{"StreamStyle", "\[Rule]", 
     RowBox[{"AbsoluteThickness", "@", "1"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics3D", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", "1"}], "}"}]}], ",", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}]}], "Input",\

 InitializationGroup->True,
 CellChangeTimes->{{3.543260177830883*^9, 3.5432601926414967`*^9}, {
   3.70118808425583*^9, 3.701188134885686*^9}, {3.7099051903450727`*^9, 
   3.709905208182934*^9}, {3.7099052757579727`*^9, 3.7099052778689613`*^9}, {
   3.709905321993478*^9, 3.709905322060773*^9}, {3.70990553095455*^9, 
   3.709905550317865*^9}, {3.726242879409829*^9, 3.726242883278029*^9}, {
   3.726243005472884*^9, 3.726243051202981*^9}, {3.735999144751026*^9, 
   3.735999145275346*^9}, {3.7359991788012257`*^9, 3.7359992490932283`*^9}, {
   3.735999401021758*^9, 3.735999401138513*^9}, {3.735999759704524*^9, 
   3.735999779898828*^9}, {3.736000028103965*^9, 3.736000051355198*^9}, {
   3.736000145893031*^9, 3.7360001460269203`*^9}, {3.736011631177737*^9, 
   3.736011632466868*^9}, {3.796484846923273*^9, 3.796484848897849*^9}, {
   3.8245730516160307`*^9, 3.824573059589797*^9}, {3.824573191481657*^9, 
   3.824573193006625*^9}, {3.82458317961399*^9, 3.8245832727717133`*^9}, {
   3.824583495875238*^9, 3.824583518784813*^9}, {3.824583622401236*^9, 
   3.8245836319148073`*^9}, {3.824585312073741*^9, 3.824585336313025*^9}, {
   3.8245857059317503`*^9, 3.824585706583116*^9}, {3.824587308134736*^9, 
   3.824587337926002*^9}, 3.8245874190398903`*^9, {3.8245874817249804`*^9, 
   3.824587490727861*^9}, {3.824589349645647*^9, 3.824589360530993*^9}, {
   3.824589401575365*^9, 3.8245894146403*^9}, {3.82459583909206*^9, 
   3.824595839559206*^9}, {3.824652692024395*^9, 3.8246527144220657`*^9}, {
   3.8246527557080193`*^9, 3.8246527570279217`*^9}, {3.826055712545827*^9, 
   3.826055713323737*^9}, {3.8267036876506*^9, 3.826703689187323*^9}, {
   3.82670373760083*^9, 3.826703759389452*^9}, {3.827914547365705*^9, 
   3.82791455337099*^9}, {3.829407922331644*^9, 3.829407925126978*^9}, {
   3.830023823607357*^9, 3.8300238253993464`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"83e0adc0-dab6-449a-b398-11f8b27d8aee"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     Dimension lines (relatively new code: 2021-2-16)"
}], "Subsection",
 CellChangeTimes->{{3.4281528403032417`*^9, 3.4281529076468563`*^9}, {
   3.428152950216391*^9, 3.428152952680171*^9}, {3.428246637908412*^9, 
   3.4282466399836693`*^9}, {3.4282479432844677`*^9, 3.428247946979678*^9}, 
   3.428252767698082*^9, {3.430756210159871*^9, 3.430756210811077*^9}, {
   3.440430597278523*^9, 3.440430603846034*^9}, {3.440430708157139*^9, 
   3.4404307211846933`*^9}, {3.452528704069104*^9, 3.452528716700231*^9}, {
   3.456683697410297*^9, 3.456683697672628*^9}, {3.456683818309866*^9, 
   3.4566838188991833`*^9}, {3.456754740884289*^9, 3.456754756683476*^9}, {
   3.457107448944416*^9, 3.457107449654791*^9}, {3.45710749273438*^9, 
   3.457107493431397*^9}, {3.457107632870536*^9, 3.457107636222329*^9}, {
   3.458569397551819*^9, 3.458569397854059*^9}, {3.458573222029723*^9, 
   3.458573222355913*^9}, {3.458574163138053*^9, 3.4585741819785147`*^9}, {
   3.458651452395811*^9, 3.458651454374943*^9}, {3.4586534486489143`*^9, 
   3.458653456472352*^9}, {3.458692858457357*^9, 3.458692858582313*^9}, {
   3.45869537605101*^9, 3.458695382383501*^9}, {3.458699834787621*^9, 
   3.458699838152005*^9}, {3.459002431296195*^9, 3.4590024315748158`*^9}, {
   3.459035355965838*^9, 3.459035410377709*^9}, {3.459035491446749*^9, 
   3.459035522455891*^9}, {3.487377145594287*^9, 3.487377145928273*^9}, {
   3.49824004039636*^9, 3.4982400480758944`*^9}, {3.70965944012087*^9, 
   3.709659444442853*^9}, {3.722962574737322*^9, 3.7229625815767927`*^9}, {
   3.722962791673148*^9, 3.7229628060028143`*^9}, {3.7229632769317427`*^9, 
   3.722963279960807*^9}, {3.722963897166394*^9, 3.7229638977941647`*^9}, {
   3.7230575355853167`*^9, 3.723057537051255*^9}, {3.723068374958317*^9, 
   3.723068375512476*^9}, {3.7232975316509333`*^9, 3.723297532071987*^9}, {
   3.725283189394959*^9, 3.725283193530905*^9}, 3.7585528789980593`*^9, {
   3.758563028472864*^9, 3.758563029011462*^9}, {3.758758253260693*^9, 
   3.758758255984445*^9}, {3.758825817018845*^9, 3.7588258408239307`*^9}, {
   3.758825880433918*^9, 3.758825881032544*^9}, {3.8185116583142014`*^9, 
   3.818511677636343*^9}, {3.818855331913563*^9, 3.8188553816155357`*^9}, {
   3.818866035227425*^9, 3.818866036955139*^9}, {3.818888232782876*^9, 
   3.8188882399634123`*^9}, {3.822511317929438*^9, 3.822511319511262*^9}, {
   3.822511508724369*^9, 3.822511517318471*^9}, {3.822515004477889*^9, 
   3.822515018684173*^9}},ExpressionUUID->"94776496-1c43-4ce0-9532-\
c968813fc67e"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", " ", "USER"}]}], " ", "MAY", " ", "WANT", " ", "TO", " ", 
    "TWEAK", " ", 
    RowBox[{
     RowBox[{"ARROWSIZE", " ", "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dimLine", "[", 
      RowBox[{
      "r1_", ",", "r2_", ",", "label_", ",", "tickLen_", ",", "arrowOffset_", 
       ",", "labelOffset_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", "u", ",", "v", ",", "w", ",", "\[IndentingNewLine]", 
         RowBox[{"arrowSize", "=", "0.015"}], ",", "\[IndentingNewLine]", 
         RowBox[{"grAH", "=", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Line", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", ".3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", ".3"}]}], "}"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Polygon", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", ".5"}]}], "}"}]}], "}"}]}], "]"}], "*)"}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"r2", "-", "r1"}]}], ";", 
        RowBox[{"u", "=", 
         RowBox[{"Normalize", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
             "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "}"}]}]}], ";", 
        RowBox[{"p", "=", 
         RowBox[{"Normalize", "@", "p"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", " ", "CHECK"}]}]}]}], " ", "IF", " ", "DIMENSION", 
          " ", "IS", " ", "SUFFICIENTLY", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LARGE", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"r2", "-", "r1"}], "]"}], ">", ".8"}], "    ", 
          RowBox[{"(*", 
           RowBox[{"5", 
            RowBox[{"Max", "[", 
             RowBox[{"tickLen", ",", "arrowOffset", ",", "labelOffset"}], 
             "]"}]}], "*)"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", " ", "ORDINARY"}]}]}]}], " ", "INTERIOR", " ", 
            "DIMENSION", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"LINE", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Arrowheads", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "arrowSize"}], ",", "Automatic", ",", "grAH"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"arrowSize", ",", "Automatic", ",", "grAH"}], "}"}]}],
               "}"}], "]"}], ",", 
            RowBox[{"Arrow", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r1", "+", 
                RowBox[{"arrowOffset", "*", "u"}]}], ",", 
               RowBox[{"r2", "+", 
                RowBox[{"arrowOffset", "*", "u"}]}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"r1", ",", 
                 RowBox[{"r1", "+", 
                  RowBox[{"tickLen", "*", "u"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r2", ",", 
                 RowBox[{"r2", "+", 
                  RowBox[{"tickLen", "*", "u"}]}]}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{"label", ",", 
              RowBox[{
               RowBox[{".55", "r1"}], "+", 
               RowBox[{".45", "r2"}], "+", 
               RowBox[{"labelOffset", "*", "u"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", " ", "SPECIAL"}]}]}]}], " ", "EXTERIOR", " ", 
            "DIMENSION", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"LINE", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"exteriorLength", "=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Arrowheads", "[", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"arrowSize", ",", "Automatic", ",", "grAH"}], "}"}], 
               "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Arrow", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r2", "+", 
                RowBox[{"exteriorLength", "*", "p"}], "+", 
                RowBox[{"arrowOffset", "*", "u"}]}], ",", 
               RowBox[{"r2", "+", 
                RowBox[{"arrowOffset", "*", "u"}]}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Arrow", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r1", "-", 
                RowBox[{"exteriorLength", "*", "p"}], "+", 
                RowBox[{"arrowOffset", "*", "u"}]}], ",", 
               RowBox[{"r1", "+", 
                RowBox[{"arrowOffset", "*", "u"}]}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"r1", ",", 
                 RowBox[{"r1", "+", 
                  RowBox[{"tickLen", "*", "u"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r2", ",", 
                 RowBox[{"r2", "+", 
                  RowBox[{"tickLen", "*", "u"}]}]}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{"label", ",", 
              RowBox[{
               RowBox[{".55", "r1"}], "+", 
               RowBox[{".45", "r2"}], "+", 
               RowBox[{"labelOffset", "*", "u"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"groundSymbol", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "s_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"Line", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "6"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "3"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", ")"}], "//", 
        RowBox[{
         RowBox[{"Translate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "6"}]}], "}"}]}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"Scale", "[", 
         RowBox[{"#", ",", "s", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "&"}]}], "//", 
      RowBox[{
       RowBox[{"Translate", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "&"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.809963607569186*^9, 3.8099637327262697`*^9}, {
   3.8099641574332857`*^9, 3.8099641676377974`*^9}, {3.809964586562496*^9, 
   3.809964756944942*^9}, {3.809964828696599*^9, 3.8099649813504553`*^9}, {
   3.8099650692114553`*^9, 3.809965102752735*^9}, {3.809965436351993*^9, 
   3.809965473562888*^9}, {3.8099742507530622`*^9, 3.809974398281879*^9}, {
   3.8099754731350803`*^9, 3.809975480317779*^9}, {3.809975546591859*^9, 
   3.8099756053460493`*^9}, 3.81128878816503*^9, {3.811288906606934*^9, 
   3.811288909048931*^9}, {3.811288988188662*^9, 3.811289016526101*^9}, {
   3.811289080045662*^9, 3.8112890814542093`*^9}, {3.81134534360111*^9, 
   3.81134534374636*^9}, {3.811345679644863*^9, 3.811345687989142*^9}, {
   3.811345853272434*^9, 3.811345855038456*^9}, {3.8113458886476583`*^9, 
   3.811345926110922*^9}, {3.811346029450975*^9, 3.811346033164309*^9}, {
   3.811346077419033*^9, 3.811346077613202*^9}, {3.811346758822423*^9, 
   3.811346854250782*^9}, {3.822503988706664*^9, 3.8225040024745703`*^9}, {
   3.822506245449819*^9, 3.82250652148473*^9}, {3.822512399480425*^9, 
   3.8225124944099703`*^9}, {3.822515572348402*^9, 3.822515594776566*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"fa90264f-7887-48b3-8acc-325e845d06aa"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     myFormat"
}], "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783518988831766*^9, 3.783518990677176*^9}, {
   3.7835195609498367`*^9, 3.783519576402582*^9}, {3.7835251394858923`*^9, 
   3.7835251407503242`*^9}, {3.783526038283383*^9, 3.783526042445262*^9}, {
   3.783527357018929*^9, 3.7835273639719543`*^9}, {3.7835278029411173`*^9, 
   3.783527805510771*^9}, {3.783812728371299*^9, 3.783812728711793*^9}, {
   3.7838129535839453`*^9, 3.78381295414298*^9}, {3.783899451531466*^9, 
   3.783899452548627*^9}, {3.78390078984643*^9, 3.783900793902026*^9}, {
   3.783944104569702*^9, 3.783944105234786*^9}, {3.7839448783066463`*^9, 
   3.783944882184976*^9}, {3.7839476895487623`*^9, 3.78394769194175*^9}, {
   3.7839481207598763`*^9, 3.7839481230075073`*^9}, {3.784038335769405*^9, 
   3.784038361946026*^9}, {3.784203208500945*^9, 3.784203209115884*^9}, {
   3.785711832676725*^9, 3.785711833382312*^9}, {3.793032043417568*^9, 
   3.793032043903811*^9}, 3.793455176772276*^9, 3.793455301402645*^9, {
   3.793472733815399*^9, 3.79347273847685*^9}, {3.7934775408832407`*^9, 
   3.7934775426697493`*^9}, {3.79347760474472*^9, 3.793477605361476*^9}, {
   3.808609879319268*^9, 3.808609887045244*^9}, {3.822701672245186*^9, 
   3.822701681061912*^9}},ExpressionUUID->"b16e45aa-64c1-4a22-af24-\
796831e26e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "Pretty"}]}]}]}], "-", 
    RowBox[{"print", " ", "any", " ", "real", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"number", " ", "--"}], "--"}], "--"}], "--"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myFormat", "[", "v_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", " ", "If"}]}], " ", "v", " ", "is", " ", "an", " ", 
          "exact", " ", "power", " ", "of", " ", "10", " ", "with", " ", "an",
           " ", "exponent", " ", "less", " ", "than"}], " ", "-", 
         RowBox[{"4", " ", "or", " ", "greater", " ", "than"}], " ", "+", 
         "4"}], ",", " ", 
        RowBox[{"display", " ", "v", " ", "as", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["10", "w"], " ", "--"}], "--"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"v", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"Abs", "@", 
          RowBox[{"Log10", "@", "v"}]}], ">", "5"}], "&&", 
        RowBox[{
         RowBox[{"FractionalPart", "[", 
          RowBox[{"Log10", "@", "v"}], "]"}], "\[Equal]", "0"}]}], ",", 
       RowBox[{"SuperscriptBox", "[", 
        RowBox[{"10", ",", 
         RowBox[{"Round", "@", 
          RowBox[{"Log10", "@", "v"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", " ", "If"}]}], " ", "v", " ", "is", " ", "an", " ", 
          "integer"}], ",", " ", 
         RowBox[{
         "display", " ", "v", " ", "without", " ", "any", " ", "decimal", " ", 
          RowBox[{
           RowBox[{"points", " ", "--"}], "--"}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"v", "-", 
          RowBox[{"Round", "@", "v"}]}], "]"}], "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "8"}]]}], ",", 
       RowBox[{"Round", "@", "v"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", " ", "If"}]}], " ", "v", " ", "is", " ", "not", " ", 
          "an", " ", "integer"}], ",", " ", 
         RowBox[{
         "display", " ", "v", " ", "with", " ", "decimals", " ", "and", " ", 
          "possibly", " ", "in", " ", "scientific", " ", 
          RowBox[{
           RowBox[{"notation", " ", "--"}], "--"}]}]}], "*)"}], 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"N", "@", "v"}], ",", 
         RowBox[{"ExponentFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], "<", "#", "<", "4"}], ",", "Null", ",", 
              "#"}], "]"}], "&"}], ")"}]}], ",", 
         RowBox[{"NumberPoint", "\[Rule]", "\"\<.\>\""}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], 
     RowBox[{"(*", 
      RowBox[{"//", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", 
          RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "]"}], "&"}]}], "*)"}],
      ")"}]}], ";"}]}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"63e4e569-1f14-4026-a278-d8bea10a4c1b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     Axis utilities: divisions, etc."
}], "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783518988831766*^9, 3.783518990677176*^9}, {
   3.7835195609498367`*^9, 3.783519576402582*^9}, {3.7835251394858923`*^9, 
   3.7835251407503242`*^9}, {3.783526038283383*^9, 3.783526042445262*^9}, {
   3.783527357018929*^9, 3.7835273639719543`*^9}, {3.7835278029411173`*^9, 
   3.783527805510771*^9}, {3.783812728371299*^9, 3.783812728711793*^9}, {
   3.7838129535839453`*^9, 3.78381295414298*^9}, {3.783899451531466*^9, 
   3.783899452548627*^9}, {3.78390078984643*^9, 3.783900793902026*^9}, {
   3.783944104569702*^9, 3.783944105234786*^9}, {3.7839448783066463`*^9, 
   3.783944882184976*^9}, {3.7839476895487623`*^9, 3.78394769194175*^9}, {
   3.7839481207598763`*^9, 3.7839481230075073`*^9}, {3.784038335769405*^9, 
   3.784038361946026*^9}, {3.784203208500945*^9, 3.784203209115884*^9}, {
   3.785711832676725*^9, 3.785711833382312*^9}, {3.793032043417568*^9, 
   3.793032043903811*^9}, 3.793455176772276*^9, 3.793455301402645*^9, {
   3.793472733815399*^9, 3.79347273847685*^9}, {3.7934775408832407`*^9, 
   3.7934775426697493`*^9}, {3.79347760474472*^9, 3.793477605361476*^9}, {
   3.808609879319268*^9, 3.808609887045244*^9}, {3.822701672245186*^9, 
   3.822701683960609*^9}},ExpressionUUID->"25e58e8a-7808-4268-adef-\
fd662f0c022b"],

Cell[TextData[{
 "Let ",
 StyleBox["v",
  FontSlant->"Italic"],
 " be the numerical part of a physical quantity, and let ",
 StyleBox["x",
  FontSlant->"Italic"],
 " be the coordinate along the axis on which this quantity is plotted.\nFor \
example, suppose we are displaying 200 GHz at coordinate 8.3.  Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{"200", "\[Times]", 
     SuperscriptBox["10", "11"]}]}], TraditionalForm]],ExpressionUUID->
  "34785d01-102c-4e42-9312-29be3f0be606"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "8.3"}], TraditionalForm]],ExpressionUUID->
  "0472ed23-dfc2-48a8-afe9-95654b41278c"],
 ".\nWe will supply a conversion function vfromx to the myAxis function."
}], "Text",
 CellChangeTimes->{{3.6482069093895807`*^9, 3.648206910163213*^9}, {
   3.648207004501967*^9, 3.6482071376227903`*^9}, 3.6482074912255898`*^9, 
   3.648210753856221*^9},ExpressionUUID->"1ec1cbf1-0c5d-4050-9cdf-\
ff1d42db898f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", " ", "Plotting"}]}]}]}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"parameters", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maxMajorDivisions", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxMinorDivisions", "=", "300"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tickLengthMajorP", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tickLengthMajorM", "=", "0."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tickLengthMinorP", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tickLengthMinorM", "=", "0."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"textOffset", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", "Round"}]}]}]}], " ", "up", " ", "or", " ", "down",
      " ", "to", " ", "closest", " ", "number", " ", "in", " ", "a", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"list", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"roundUp", "[", 
      RowBox[{"x_", ",", "xlist_"}], "]"}], ":=", 
     RowBox[{"Min", "@", 
      RowBox[{"Select", "[", 
       RowBox[{"xlist", ",", 
        RowBox[{
         RowBox[{"#", "\[GreaterEqual]", "x"}], "&"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"roundDn", "[", 
      RowBox[{"x_", ",", "xlist_"}], "]"}], ":=", 
     RowBox[{"Max", "@", 
      RowBox[{"Select", "[", 
       RowBox[{"xlist", ",", 
        RowBox[{
         RowBox[{"#", "\[LessEqual]", "x"}], "&"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "Round"}]}]}]}], " ", "up", " ", "or", " ", 
      "down", " ", "to", " ", "the", " ", "nearest", " ", "number", " ", "of",
       " ", "the", " ", "form", " ", "1", "\[Times]", 
      SuperscriptBox["10", "n"]}], ",", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["10", "n"]}], ",", " ", 
     RowBox[{"or", " ", "5", "\[Times]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["10", "n"], " ", "--"}], "--"}], "--"}], "--"}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"roundUpNicely", "[", "x_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "expon", "}"}], ",", 
       RowBox[{
        RowBox[{"expon", "=", 
         RowBox[{"Floor", "@", 
          RowBox[{"Log10", "[", "x", "]"}]}]}], ";", 
        RowBox[{
         RowBox[{"roundUp", "[", 
          RowBox[{
           RowBox[{"x", "/", 
            RowBox[{"10", "^", "expon"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}]}], "]"}], "*", 
         RowBox[{"10", "^", "expon"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"roundDnNicely", "[", "x_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "expon", "}"}], ",", 
       RowBox[{
        RowBox[{"expon", "=", 
         RowBox[{"Floor", "@", 
          RowBox[{"Log10", "[", "x", "]"}]}]}], ";", 
        RowBox[{
         RowBox[{"roundDn", "[", 
          RowBox[{
           RowBox[{"x", "/", 
            RowBox[{"10", "^", "expon"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}]}], "]"}], "*", 
         RowBox[{"10", "^", "expon"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", "Divide"}]}]}]}], " ", "an", " ", "interval", " ", 
     "to", " ", "find", " ", "a", " ", "nice", " ", "set", " ", "of", " ", 
     "tick", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"values", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divisions", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vmin_", ",", "vmax_"}], "}"}], ",", "maxDivisions_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "vrange", ",", "vstep", ",", "vstart", ",", "lmin", ",", "lmax", ",", 
         "v", ",", "divs"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vrange", "=", 
         RowBox[{"vmax", "-", "vmin"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vstep", "=", 
         RowBox[{"roundUpNicely", "[", 
          RowBox[{"vrange", "/", "maxDivisions"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vstart", "=", 
         RowBox[{"vstep", "*", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"vmin", "/", "vstep"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"divs", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"vstart", ",", "vmax", ",", "vstep"}], "]"}], ",", 
           RowBox[{
            RowBox[{"vmin", "\[LessEqual]", "#", "\[LessEqual]", "vmax"}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "@", "divs"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", "Divide"}]}]}]}], " ", "an", " ", "interval", " ", 
     "to", " ", "find", " ", "nice", " ", "major", " ", "and", " ", "minor", 
     " ", "tick", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"values", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"divisions", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vmin_", ",", "vmax_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"maxMajorDivisions_", ",", "maxMinorDivisions_"}], "}"}]}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "vrange", ",", "vstep", ",", "vstart", ",", "lmin", ",", "lmax", ",", 
         "v", ",", "majDivs", ",", "minDivs"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vrange", "=", 
         RowBox[{"vmax", "-", "vmin"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vstep", "=", 
         RowBox[{"roundUpNicely", "[", 
          RowBox[{"vrange", "/", "maxMajorDivisions"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"major", " ", "division", " ", "spacing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vstart", "=", 
         RowBox[{"vstep", "*", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"vmin", "/", "vstep"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"majDivs", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"vstart", ",", "vmax", ",", "vstep"}], "]"}], ",", 
           RowBox[{
            RowBox[{"vmin", "\[LessEqual]", "#", "\[LessEqual]", "vmax"}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"vstep", "=", 
         RowBox[{"roundUpNicely", "[", 
          RowBox[{"vstep", "/", "maxMinorDivisions"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"minor", " ", "division", " ", "spacing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vstart", "=", 
         RowBox[{"vstep", "*", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"vmin", "/", "vstep"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"minDivs", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"vstart", ",", "vmax", ",", "vstep"}], "]"}], ",", 
           RowBox[{
            RowBox[{"vmin", "\[LessEqual]", "#", "\[LessEqual]", "vmax"}], 
            "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"minDivs", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"minDivs", ",", "majDivs"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "@", 
         RowBox[{"{", 
          RowBox[{"majDivs", ",", "minDivs"}], "}"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", "Divide"}]}]}]}], " ", "an", " ", "interval", " ", 
     "with", " ", "major", " ", "ticks", " ", "as", " ", 
     SuperscriptBox["10", "n"], " ", "and", " ", "minor", " ", "ticks", " ", 
     "as", " ", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
       "9"}], "}"}], "\[Times]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["10", "n"], " ", "--"}], "--"}], "--"}], "--"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", " ", "This"}]}]}]}], " ", "works", " ", "well", " ", 
     "except", " ", "when", " ", "we", " ", "have", " ", "a", " ", "very", 
     " ", "small", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"interva", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"logDivisions", "[", 
      RowBox[{"{", 
       RowBox[{"vmin_", ",", "vmax_"}], "}"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "lmin", ",", "lmax", ",", "v", ",", "majDivs", ",", "minDivs"}], 
        "}"}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"l", "===", 
         RowBox[{"Log10", "[", "v", "]"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lmin", "=", 
         RowBox[{"Floor", "@", 
          RowBox[{"Log10", "@", "vmin"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"lmax", "=", 
         RowBox[{"Ceiling", "@", 
          RowBox[{"Log10", "@", "vmax"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"majDivs", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "=", 
                RowBox[{"10", "^", "l"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "vmin", "\[LessEqual]", "v", "\[LessEqual]", "vmax"}], ",", 
                 RowBox[{"Sow", "@", "v"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", "lmin", ",", "lmax"}], "}"}]}], "]"}], "//", 
            "Reap"}], "//", "Last"}], "//", "Last"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"minDivs", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "=", 
                RowBox[{
                 RowBox[{"10", "^", "l"}], "*", "mantissa"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "vmin", "\[LessEqual]", "v", "\[LessEqual]", "vmax"}], ",", 
                 RowBox[{"Sow", "@", "v"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", "lmin", ",", "lmax"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"mantissa", ",", "2", ",", "9"}], "}"}]}], "]"}], "//",
             "Reap"}], "//", "Last"}], "//", "Last"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "@", 
         RowBox[{"{", 
          RowBox[{"majDivs", ",", "minDivs"}], "}"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"linScale", "[", 
      RowBox[{"label_", ",", 
       RowBox[{"{", 
        RowBox[{"xmin_", ",", "xmax_"}], "}"}], ",", "vx_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vmin", ",", "vmax", ",", "xv", ",", "x"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xv", "=", 
         RowBox[{"InverseFunction", "[", "vx", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vmin", ",", "vmax"}], "}"}], "=", 
         RowBox[{"Sort", "@", 
          RowBox[{"(", 
           RowBox[{"vx", "/@", 
            RowBox[{"{", 
             RowBox[{"xmin", ",", "xmax"}], "}"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vlist", ",", "vlist2"}], "}"}], "=", 
         RowBox[{"divisions", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vmin", ",", "vmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"30", ",", "6"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"vlist2", "=", 
         RowBox[{"Flatten", "@", "vlist2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", " ", "Draw"}]}]}]}], " ", "axis", " ", "line", 
             " ", "and", " ", "axis", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"label", " ", "--"}], "--"}], "--"}], "--"}]}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"label", ",", 
              RowBox[{"{", 
               RowBox[{"xmin", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2.00", ",", "0"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Line", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xmin", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"xmax", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "Draw"}]}]}]}], " ", "major", " ", "and", 
              " ", "minor", " ", "tick", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"marks", " ", "--"}], "--"}], "--"}], "--"}]}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "tickLengthMajorM"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "tickLengthMajorP"}], "}"}]}], 
                   "}"}]}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "vlist"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "tickLengthMinorM"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "tickLengthMinorP"}], "}"}]}], 
                   "}"}]}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "vlist2"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "Draw"}]}]}]}], " ", "major", " ", "tick",
               " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"labels", " ", "--"}], "--"}], "--"}], "--"}]}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"v", "//", "myFormat"}], "//", "DisplayForm"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "textOffset"}], "}"}]}], "]"}]}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "vlist"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRangePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "@", ".05"}], ",", 
               RowBox[{"Scaled", "@", ".01"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1200", ",", "50"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"18", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"logScale", "[", 
      RowBox[{"label_", ",", 
       RowBox[{"{", 
        RowBox[{"xmin_", ",", "xmax_"}], "}"}], ",", "vx_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vmin", ",", "vmax", ",", "xv", ",", "x"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xv", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"InverseFunction", "[", "vx", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vmin", ",", "vmax"}], "}"}], "=", 
         RowBox[{"Sort", "@", 
          RowBox[{"(", 
           RowBox[{"vx", "/@", 
            RowBox[{"{", 
             RowBox[{"xmin", ",", "xmax"}], "}"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vlist", ",", "vlist2"}], "}"}], "=", 
         RowBox[{"myLogDivisions", "[", 
          RowBox[{"{", 
           RowBox[{"vmin", ",", "vmax"}], "}"}], "]"}]}], ";", 
        RowBox[{"vlist2", "=", 
         RowBox[{"Flatten", "@", "vlist2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", " ", "Draw"}]}]}]}], " ", "axis", " ", "line", " ",
           "and", " ", "axis", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"label", " ", "--"}], "--"}], "--"}], "--"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"label", ",", 
              RowBox[{"{", 
               RowBox[{"xmin", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2.00", ",", "0"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Line", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xmin", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"xmax", ",", "0"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "Draw"}]}]}]}], " ", "major", " ", "and", 
              " ", "minor", " ", "tick", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"marks", " ", "--"}], "--"}], "--"}], "--"}]}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "tickLengthMajorM"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "tickLengthMajorP"}], "}"}]}], 
                   "}"}]}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "vlist"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Line", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "tickLengthMinorM"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "tickLengthMinorP"}], "}"}]}], 
                   "}"}]}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", "vlist2"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "Draw"}]}]}]}], " ", "major", " ", "tick",
               " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"labels", " ", "--"}], "--"}], "--"}], "--"}]}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "=", 
                RowBox[{"xv", "[", "v", "]"}]}], ";", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "xmin", "\[LessEqual]", "x", "\[LessEqual]", "xmax"}], ",", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"v", "//", "myFormat"}], "//", "DisplayForm"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "textOffset"}], "}"}]}], "]"}]}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", 
                RowBox[{"N", "@", "vlist"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotRangePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "@", ".05"}], ",", 
               RowBox[{"Scaled", "@", ".01"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1200", ",", "50"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"18", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mark", "[", 
      RowBox[{"x_", ",", "label_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Line", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "10"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", ".5"}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{"label", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", ".5"}]}], "}"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"stackScales", "[", "grList_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nmax", "=", 
        RowBox[{"Length", "@", "grList"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{
              "grList", "\[LeftDoubleBracket]", "n", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "n"}]}], "}"}]}], "]"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Translate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "grList", "\[LeftDoubleBracket]", "n", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "n"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "nmax"}], "}"}]}], "]"}], ","}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1200", ",", 
           RowBox[{"50", "*", "nmax"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "nmax"}], "-", ".7"}], ",", 
             RowBox[{"-", ".1"}]}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
        "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeLabeledTicks", "[", 
      RowBox[{"xmin_", ",", "xmax_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xMajorTicks", ",", "xMinorTicks", ",", 
         RowBox[{"nMajorTicks", "=", "10"}], ",", 
         RowBox[{"nMinorTicks", "=", "5"}], ",", 
         RowBox[{"func", "=", "myFormat"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xMajorTicks", ",", "xMinorTicks"}], "}"}], "=", 
         RowBox[{"divisions", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"nMajorTicks", ",", "nMinorTicks"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "@", "#"}], ",", 
              RowBox[{"func", "@", "#"}], ",", 
              RowBox[{"{", 
               RowBox[{".02", ",", "0"}], "}"}]}], "}"}], "&"}], "/@", 
           "xMajorTicks"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "@", "#"}], ",", "Null", ",", 
              RowBox[{"{", 
               RowBox[{".01", ",", "0"}], "}"}]}], "}"}], "&"}], "/@", 
           "xMinorTicks"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"makeUnlabeledTicks", "[", 
      RowBox[{"xmin_", ",", "xmax_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xMajorTicks", ",", "xMinorTicks", ",", 
         RowBox[{"nMajorTicks", "=", "10"}], ",", 
         RowBox[{"nMinorTicks", "=", "5"}], ",", 
         RowBox[{"func", "=", 
          RowBox[{"Null", "&"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xMajorTicks", ",", "xMinorTicks"}], "}"}], "=", 
         RowBox[{"divisions", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"nMajorTicks", ",", "nMinorTicks"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "@", "#"}], ",", 
              RowBox[{"func", "@", "#"}], ",", 
              RowBox[{"{", 
               RowBox[{".02", ",", "0"}], "}"}]}], "}"}], "&"}], "/@", 
           "xMajorTicks"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "@", "#"}], ",", "Null", ",", 
              RowBox[{"{", 
               RowBox[{".01", ",", "0"}], "}"}]}], "}"}], "&"}], "/@", 
           "xMinorTicks"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.648207519799415*^9, 3.648207697029222*^9}, {
   3.648207732951708*^9, 3.6482079774339542`*^9}, {3.648208012993915*^9, 
   3.6482080468947144`*^9}, {3.648208087092819*^9, 3.648208179724606*^9}, {
   3.648208210951229*^9, 3.648208212903164*^9}, {3.6482082497562838`*^9, 
   3.64820826451019*^9}, {3.648208586467246*^9, 3.648208651535118*^9}, {
   3.648209003945857*^9, 3.648209114532428*^9}, {3.648209173218638*^9, 
   3.6482092798781233`*^9}, {3.648209310956238*^9, 3.648209363165657*^9}, {
   3.648209412662592*^9, 3.648209420068881*^9}, {3.648209479108674*^9, 
   3.648209522066318*^9}, {3.64820959035387*^9, 3.64820959451445*^9}, {
   3.648209633681366*^9, 3.6482096593116693`*^9}, {3.6482097331523447`*^9, 
   3.648210086711938*^9}, {3.648210119183344*^9, 3.6482101879409037`*^9}, {
   3.648210399361705*^9, 3.648210422338641*^9}, {3.6482104569080553`*^9, 
   3.6482104864142447`*^9}, 3.6482105198154793`*^9, {3.648210561907825*^9, 
   3.6482105721769447`*^9}, {3.6482106427659597`*^9, 3.648210697377179*^9}, {
   3.648210728086191*^9, 3.64821073043749*^9}, 3.648210783271229*^9, {
   3.648211094236758*^9, 3.648211251816441*^9}, {3.648211319374401*^9, 
   3.648211394476673*^9}, {3.648211503955152*^9, 3.648211583682783*^9}, {
   3.6482118239451647`*^9, 3.648211992605546*^9}, {3.64821225304617*^9, 
   3.648212254448369*^9}, {3.648212294511567*^9, 3.648212350123027*^9}, {
   3.648212466070656*^9, 3.6482124947370987`*^9}, {3.648213139876276*^9, 
   3.64821316025739*^9}, {3.773531016644382*^9, 3.773531036461203*^9}, 
   3.773531123777725*^9, {3.773531178275475*^9, 3.7735311823461657`*^9}, {
   3.773531335251204*^9, 3.773531354360424*^9}, {3.773531384854534*^9, 
   3.773531386275984*^9}, {3.773531429897915*^9, 3.7735315712058163`*^9}, {
   3.773531767306922*^9, 3.773531797893293*^9}, {3.77353193848061*^9, 
   3.773532265108448*^9}, {3.773532304745604*^9, 3.7735324261160383`*^9}, {
   3.773532649697356*^9, 3.7735326681286592`*^9}, {3.773532718768866*^9, 
   3.7735327392511683`*^9}, {3.773532892963666*^9, 3.773532935445072*^9}, 
   3.773532976824292*^9, {3.773533101544067*^9, 3.773533104328782*^9}, {
   3.7735346540409946`*^9, 3.773534842934808*^9}, {3.7735348813430233`*^9, 
   3.773534881882297*^9}, {3.7735349124473124`*^9, 3.773534917442795*^9}, {
   3.7735349536277313`*^9, 3.7735349538955317`*^9}, {3.773534985012218*^9, 
   3.7735350768676977`*^9}, {3.773535131608741*^9, 3.773535157658897*^9}, {
   3.77353550070417*^9, 3.773535537244466*^9}, {3.773535576055661*^9, 
   3.773535653041237*^9}, {3.773535696525477*^9, 3.773535939717532*^9}, {
   3.77353604240349*^9, 3.773536068740222*^9}, {3.773536148081418*^9, 
   3.7735361485820093`*^9}, {3.773536335365151*^9, 3.773536335509163*^9}, {
   3.773536409306283*^9, 3.773536485210794*^9}, {3.773537120814152*^9, 
   3.7735371209959707`*^9}, {3.7735372208139257`*^9, 3.773537224736498*^9}, {
   3.773537302835526*^9, 3.773537303390067*^9}, {3.8086100999559603`*^9, 
   3.808610102867889*^9}, {3.8086112483004*^9, 3.808611248478538*^9}, {
   3.8086113130126553`*^9, 3.8086113264325*^9}, {3.808611362718143*^9, 
   3.808611406182498*^9}, {3.80861151198516*^9, 3.808611514259316*^9}, {
   3.808611571094597*^9, 3.808611572250478*^9}, {3.80861161224187*^9, 
   3.80861161517944*^9}, {3.8086117108860817`*^9, 3.808611723015688*^9}, {
   3.820102741096569*^9, 3.820102746320962*^9}, {3.820102777822741*^9, 
   3.82010280346837*^9}, {3.820102837019289*^9, 3.8201028594032583`*^9}, {
   3.822701690059063*^9, 3.822701690699686*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"34f3c09b-20b0-4cfe-8d03-3b6454c30ee9"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     autoTicksLabeled, etc."
}], "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783518988831766*^9, 3.783518990677176*^9}, {
   3.7835195609498367`*^9, 3.783519576402582*^9}, {3.7835251394858923`*^9, 
   3.7835251407503242`*^9}, {3.783526038283383*^9, 3.783526042445262*^9}, {
   3.783527357018929*^9, 3.7835273639719543`*^9}, {3.7835278029411173`*^9, 
   3.783527805510771*^9}, {3.783812728371299*^9, 3.783812728711793*^9}, {
   3.7838129535839453`*^9, 3.78381295414298*^9}, {3.783899451531466*^9, 
   3.783899452548627*^9}, {3.78390078984643*^9, 3.783900793902026*^9}, {
   3.783944104569702*^9, 3.783944105234786*^9}, {3.7839448783066463`*^9, 
   3.783944882184976*^9}, {3.7839476895487623`*^9, 3.78394769194175*^9}, {
   3.7839481207598763`*^9, 3.7839481230075073`*^9}, {3.784038335769405*^9, 
   3.784038361946026*^9}, {3.784203208500945*^9, 3.784203209115884*^9}, {
   3.785711832676725*^9, 3.785711833382312*^9}, {3.793032043417568*^9, 
   3.793032043903811*^9}, 3.793455176772276*^9, 3.793455301402645*^9, {
   3.793472733815399*^9, 3.79347273847685*^9}, {3.7934775408832407`*^9, 
   3.7934775426697493`*^9}, {3.79347760474472*^9, 3.793477605361476*^9}, {
   3.808609879319268*^9, 3.808609887045244*^9}, {3.822266683771331*^9, 
   3.822266684993964*^9}, {3.822266744514571*^9, 
   3.822266747595708*^9}},ExpressionUUID->"580caf23-f01d-44aa-84ab-\
2e717d3669fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"decimalExponent", "[", "x_", "]"}], ":=", 
   RowBox[{"Floor", "@", 
    RowBox[{"Log10", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"decimalMantissa", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "/", 
    RowBox[{"(", 
     RowBox[{"10", "^", 
      RowBox[{"Floor", "@", 
       RowBox[{"Log10", "[", "x", "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roundUpNicely", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SelectFirst", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}], ",", 
      RowBox[{
       RowBox[{"#", "\[GreaterEqual]", 
        RowBox[{"decimalMantissa", "[", "x", "]"}]}], "&"}]}], "]"}], "*", 
    RowBox[{"10", "^", 
     RowBox[{"decimalExponent", "[", "x", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"divisions", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xmin_", ",", "xmax_"}], "}"}], ",", "xstep_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"Ceiling", "[", 
       RowBox[{"xmin", ",", "xstep"}], "]"}], ",", "xmax", ",", "xstep"}], 
     "]"}], "//", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"xmin", "\[LessEqual]", "#", "\[LessEqual]", "xmax"}], 
        "&"}]}], "]"}], "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.823621315027749*^9, 3.823621322369327*^9}, 
   3.823621725952321*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"49a00ca9-06db-499c-89a8-65d588c1413d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"autoTicks$TickColor", "=", "White"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "MAY", " ", "NEED", " ", "TO", " ", "SET", " ", "THIS", " ", "THING"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"autoTicksLabeled", "[", 
    RowBox[{"xmin_", ",", "xmax_", ",", 
     RowBox[{"nMajorTicks_", ":", "20"}], ",", 
     RowBox[{"majorTickLen_", ":", "0.03"}], ",", 
     RowBox[{"minorTickLen_", ":", "0.02"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"majorTicks", ",", "minorTicks"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"majorTicks", "=", 
       RowBox[{"divisions", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"roundUpNicely", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "nMajorTicks"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minorTicks", "=", 
       RowBox[{
        RowBox[{"divisions", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"roundUpNicely", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "nMajorTicks"}], "/",
             "5"}], "]"}]}], "]"}], "~", "Complement", "~", "majorTicks"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"myFormat", "@", 
             RowBox[{"N", "@", "#"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"majorTickLen", ",", "0"}], "}"}], ",", 
            "autoTicks$TickColor"}], "}"}], "&"}], "/@", "majorTicks"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", ",", 
            RowBox[{"{", 
             RowBox[{"minorTickLen", ",", "0"}], "}"}], ",", 
            "autoTicks$TickColor"}], "}"}], "&"}], "/@", "minorTicks"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"autoTicksUnlabeled", "[", 
    RowBox[{"xmin_", ",", "xmax_", ",", 
     RowBox[{"nMajorTicks_", ":", "20"}], ",", 
     RowBox[{"majorTickLen_", ":", "0.03"}], ",", 
     RowBox[{"minorTickLen_", ":", "0.02"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"majorTicks", ",", "minorTicks"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"majorTicks", "=", 
       RowBox[{"divisions", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
         RowBox[{"roundUpNicely", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "nMajorTicks"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minorTicks", "=", 
       RowBox[{
        RowBox[{"divisions", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xmin", ",", "xmax"}], "}"}], ",", 
          RowBox[{"roundUpNicely", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xmax", "-", "xmin"}], ")"}], "/", "nMajorTicks"}], "/",
             "5"}], "]"}]}], "]"}], "~", "Complement", "~", "majorTicks"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", ",", 
            RowBox[{"{", 
             RowBox[{"majorTickLen", ",", "0"}], "}"}], ",", 
            "autoTicks$TickColor"}], "}"}], "&"}], "/@", "majorTicks"}], ",", 
        
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", ",", 
            RowBox[{"{", 
             RowBox[{"minorTickLen", ",", "0"}], "}"}], ",", 
            "autoTicks$TickColor"}], "}"}], "&"}], "/@", "minorTicks"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"autoContours", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zmin", ",", "zmax"}], "}"}], ",", 
     RowBox[{"FindDivisions", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zmin", ",", "zmax"}], "}"}], ",", "50"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.52875038432897*^9, {3.528750421026985*^9, 3.528750425843225*^9}, {
   3.528757344495968*^9, 3.528757375804229*^9}, {3.528757606657625*^9, 
   3.5287576550833282`*^9}, {3.5287577633481283`*^9, 3.528757770509016*^9}, {
   3.528757825392466*^9, 3.528757835911672*^9}, {3.5287579476665277`*^9, 
   3.528758130765069*^9}, {3.528759037741509*^9, 3.52875912154351*^9}, {
   3.528759190451844*^9, 3.528759193081134*^9}, {3.528759325188492*^9, 
   3.528759335078823*^9}, {3.528759400806239*^9, 3.5287594615515327`*^9}, {
   3.528764756532481*^9, 3.528764808083641*^9}, {3.528765065644356*^9, 
   3.528765171590268*^9}, 3.5287652671296473`*^9, 3.528765321499022*^9, 
   3.528765367194001*^9, {3.528765664357854*^9, 3.5287657200586443`*^9}, {
   3.5287657518264427`*^9, 3.528765776595833*^9}, {3.5287659517352457`*^9, 
   3.5287659655327177`*^9}, {3.5287669792438297`*^9, 3.528766982115492*^9}, {
   3.812645297109014*^9, 3.812645299438204*^9}, {3.8126453690118237`*^9, 
   3.812645373339143*^9}, {3.8126454228421183`*^9, 3.8126454230518227`*^9}, {
   3.812645473459291*^9, 3.812645500521562*^9}, {3.812645618775449*^9, 
   3.812645665099276*^9}, {3.812645717776998*^9, 3.812645809831208*^9}, {
   3.812645858074243*^9, 3.8126459214571953`*^9}, {3.812646017488246*^9, 
   3.812646108108749*^9}, {3.812646350518631*^9, 3.812646399595231*^9}, {
   3.812646685034211*^9, 3.812646687723538*^9}, {3.812648854174945*^9, 
   3.812648936984915*^9}, {3.812648979692853*^9, 3.81264923524798*^9}, {
   3.8126492815325613`*^9, 3.8126493016656*^9}, {3.812649346518619*^9, 
   3.8126493519331217`*^9}, {3.812649391086698*^9, 3.812649402615617*^9}, {
   3.8126507159793177`*^9, 3.8126507160905437`*^9}, {3.8126511055225763`*^9, 
   3.812651108422111*^9}, {3.8126515335903997`*^9, 3.8126515344603233`*^9}, {
   3.8126516463605213`*^9, 3.8126516551882467`*^9}, {3.8126619761274233`*^9, 
   3.812661978443123*^9}, {3.812662021382083*^9, 3.812662022630999*^9}, {
   3.812662532534658*^9, 3.812662533410594*^9}, {3.812663051318512*^9, 
   3.812663088033367*^9}, {3.812666573563875*^9, 3.812666573962488*^9}, {
   3.812672840652668*^9, 3.812672840958001*^9}, 3.822266701029255*^9, {
   3.824673693318619*^9, 3.824673771255457*^9}, {3.824673930226511*^9, 
   3.8246740213188667`*^9}, {3.824674052570022*^9, 3.824674147587481*^9}, 
   3.82467418044659*^9, {3.824674273146543*^9, 3.82467427321169*^9}, {
   3.8246743077089*^9, 3.824674382806014*^9}, {3.8246744654943533`*^9, 
   3.824674471354455*^9}, {3.826579108929895*^9, 3.826579113989532*^9}, {
   3.826579160384778*^9, 3.826579160492778*^9}, {3.826579237494526*^9, 
   3.8265792378831367`*^9}, {3.826579448445719*^9, 3.826579449006296*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ed7ce02b-9d26-4377-afc2-8d93a54a7e32"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     timeIt"
}], "Subsection",
 InitializationGroup->True,
 CellChangeTimes->{{3.5081981516399384`*^9, 3.508198158031536*^9}, {
   3.50819821504387*^9, 3.508198215746996*^9}, {3.508201668481311*^9, 
   3.5082016925031633`*^9}, {3.508258893266829*^9, 3.5082588977373734`*^9}, {
   3.508259026051585*^9, 3.508259031043688*^9}, {3.5082628358086*^9, 
   3.5082628370626783`*^9}, 3.5089392966509027`*^9, {3.536415603999649*^9, 
   3.5364156109127893`*^9}, {3.538538544995428*^9, 3.538538545747325*^9}, {
   3.538615740909917*^9, 3.538615743867906*^9}, {3.539039778757667*^9, 
   3.539039781570634*^9}, 3.5390408032748413`*^9, {3.54108160850539*^9, 
   3.541081608868029*^9}, {3.5410834700503187`*^9, 3.54108347079244*^9}, {
   3.54108386105718*^9, 3.541083890421246*^9}, {3.541299352024699*^9, 
   3.5412993523171587`*^9}, {3.541299424235711*^9, 3.5412994304016647`*^9}, {
   3.750720187869173*^9, 3.7507201939907227`*^9}, {3.750720245120719*^9, 
   3.7507202928741426`*^9}, {3.7767779975781612`*^9, 
   3.7767779982738256`*^9}, {3.781974961379376*^9, 3.7819749620900583`*^9}, {
   3.782136610860876*^9, 3.7821366114356728`*^9}, 3.7826626849388514`*^9, {
   3.783181960668701*^9, 3.783181963441619*^9}, {3.783189302970003*^9, 
   3.783189329207033*^9}, {3.783518988831766*^9, 3.783518990677176*^9}, {
   3.7835195609498367`*^9, 3.783519576402582*^9}, {3.7835251394858923`*^9, 
   3.7835251407503242`*^9}, {3.783526038283383*^9, 3.783526042445262*^9}, {
   3.783527357018929*^9, 3.7835273639719543`*^9}, {3.7835278029411173`*^9, 
   3.783527805510771*^9}, {3.783812728371299*^9, 3.783812728711793*^9}, {
   3.7838129535839453`*^9, 3.78381295414298*^9}, {3.783899451531466*^9, 
   3.783899452548627*^9}, {3.78390078984643*^9, 3.783900793902026*^9}, {
   3.783944104569702*^9, 3.783944105234786*^9}, {3.7839448783066463`*^9, 
   3.783944882184976*^9}, {3.7839476895487623`*^9, 3.78394769194175*^9}, {
   3.7839481207598763`*^9, 3.7839481230075073`*^9}, {3.784038335769405*^9, 
   3.784038361946026*^9}, {3.784203208500945*^9, 3.784203209115884*^9}, {
   3.785711832676725*^9, 3.785711833382312*^9}, {3.793032043417568*^9, 
   3.793032043903811*^9}, 3.793455176772276*^9, 3.793455301402645*^9, {
   3.793472733815399*^9, 3.79347273847685*^9}, {3.7934775408832407`*^9, 
   3.7934775426697493`*^9}, {3.79347760474472*^9, 3.793477605361476*^9}, {
   3.808609879319268*^9, 3.808609887045244*^9}, {3.822266683771331*^9, 
   3.822266684993964*^9}, {3.822266744514571*^9, 
   3.8222667591082907`*^9}},ExpressionUUID->"c33bc14e-0574-4366-9a23-\
c700391f4cee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"timeIt", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeIt", "[", "cmds_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"report", ",", "absTime", ",", "cpuTime"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"report", "=", 
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{"Timing", "[", 
         RowBox[{"cmds", ";"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"absTime", "=", 
       RowBox[{
       "report", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"cpuTime", "=", 
       RowBox[{"report", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<Absolute time = ``    CPU time = ``\>\"", ",", 
         RowBox[{"absTime", "//", 
          RowBox[{
           RowBox[{"DecimalForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}], ",", 
         RowBox[{"cpuTime", "//", 
          RowBox[{
           RowBox[{"DecimalForm", "[", 
            RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.822079047774499*^9, 3.822079252550365*^9}, {
  3.822079395399906*^9, 3.822079399846242*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"3c09f49f-73da-498d-950f-8604c03d8662"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "     myRealPlot and myComplexPlot"
}], "Subsection",
 CellChangeTimes->{{3.4281528403032417`*^9, 3.4281529076468563`*^9}, {
   3.428152950216391*^9, 3.428152952680171*^9}, {3.428246637908412*^9, 
   3.4282466399836693`*^9}, {3.4282479432844677`*^9, 3.428247946979678*^9}, 
   3.428252767698082*^9, {3.430756210159871*^9, 3.430756210811077*^9}, {
   3.440430597278523*^9, 3.440430603846034*^9}, {3.440430708157139*^9, 
   3.4404307211846933`*^9}, {3.452528704069104*^9, 3.452528716700231*^9}, {
   3.456683697410297*^9, 3.456683697672628*^9}, {3.456683818309866*^9, 
   3.4566838188991833`*^9}, {3.456754740884289*^9, 3.456754756683476*^9}, {
   3.457107448944416*^9, 3.457107449654791*^9}, {3.45710749273438*^9, 
   3.457107493431397*^9}, {3.457107632870536*^9, 3.457107636222329*^9}, {
   3.458569397551819*^9, 3.458569397854059*^9}, {3.458573222029723*^9, 
   3.458573222355913*^9}, {3.458574163138053*^9, 3.4585741819785147`*^9}, {
   3.458651452395811*^9, 3.458651454374943*^9}, {3.4586534486489143`*^9, 
   3.458653456472352*^9}, {3.458692858457357*^9, 3.458692858582313*^9}, {
   3.45869537605101*^9, 3.458695382383501*^9}, {3.458699834787621*^9, 
   3.458699838152005*^9}, {3.459002431296195*^9, 3.4590024315748158`*^9}, {
   3.459035355965838*^9, 3.459035410377709*^9}, {3.459035491446749*^9, 
   3.459035522455891*^9}, {3.487377145594287*^9, 3.487377145928273*^9}, {
   3.49824004039636*^9, 3.4982400480758944`*^9}, {3.70965944012087*^9, 
   3.709659444442853*^9}, {3.722962574737322*^9, 3.7229625815767927`*^9}, {
   3.722962791673148*^9, 3.7229628060028143`*^9}, {3.7229632769317427`*^9, 
   3.722963279960807*^9}, {3.722963897166394*^9, 3.7229638977941647`*^9}, {
   3.7230575355853167`*^9, 3.723057537051255*^9}, {3.723068374958317*^9, 
   3.723068375512476*^9}, {3.7232975316509333`*^9, 3.723297532071987*^9}, {
   3.725283189394959*^9, 3.725283193530905*^9}, 3.7585528789980593`*^9, {
   3.758563028472864*^9, 3.758563029011462*^9}, {3.758758253260693*^9, 
   3.758758255984445*^9}, {3.758825817018845*^9, 3.7588258408239307`*^9}, {
   3.758825880433918*^9, 3.758825881032544*^9}, {3.8185116583142014`*^9, 
   3.818511677636343*^9}, {3.818855331913563*^9, 3.8188553816155357`*^9}, {
   3.818866035227425*^9, 3.818866036955139*^9}, {3.818888232782876*^9, 
   3.8188882399634123`*^9}, {3.81889107884191*^9, 3.8188910845624332`*^9}, {
   3.8188915246838093`*^9, 3.818891549119977*^9}, {3.818944441380906*^9, 
   3.818944446343717*^9}, {3.819391944594879*^9, 3.819391996230955*^9}, {
   3.8193941548553457`*^9, 3.819394160706088*^9}, {3.819394213617607*^9, 
   3.8193942551734324`*^9}, {3.8194249684188757`*^9, 3.819424969416896*^9}, {
   3.819925022427796*^9, 3.819925024801057*^9}, {3.819926799819667*^9, 
   3.819926800425927*^9}, {3.8246549823985786`*^9, 3.824654983654471*^9}, 
   3.825705162761115*^9, {3.825939917857977*^9, 3.825939918798925*^9}, {
   3.825940232225358*^9, 3.82594023312707*^9}, {3.825940514099256*^9, 
   3.825940519524026*^9}, {3.826015181178698*^9, 3.826015183460639*^9}, {
   3.826035340683795*^9, 3.826035341522567*^9}, {3.826055352098547*^9, 
   3.8260553540408278`*^9}},ExpressionUUID->"f5242e2a-e643-4f77-a629-\
8f43e27fbca2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"myRealPlot", "[", 
    RowBox[{"xi_", ",", "yj_", ",", "zij_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "ArrayPlot", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"ArrayPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reverse", "@", 
         RowBox[{"Transpose", "@", "zij"}]}], ",", "\[IndentingNewLine]", 
        "opts", ",", "\[IndentingNewLine]", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "xi"}], ",", 
             RowBox[{"Max", "@", "xi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "yj"}], ",", 
             RowBox[{"Max", "@", "yj"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "xi"}], ",", 
             RowBox[{"Max", "@", "xi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "yj"}], ",", 
             RowBox[{"Max", "@", "yj"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ColorFunction", "\[Rule]", "colorFromComplex"}], ",", 
        RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"autoTicksLabeled", "[", 
               RowBox[{"#1", ",", "#2", ",", "10", ",", ".02", ",", ".01"}], 
               "]"}], "&"}], ",", 
             RowBox[{
              RowBox[{"autoTicksUnlabeled", "[", 
               RowBox[{"#1", ",", "#2", ",", "10", ",", ".02", ",", ".01"}], 
               "]"}], "&"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"autoTicksLabeled", ",", "autoTicksUnlabeled"}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"648", ",", "216"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8259402337827272`*^9, 3.825940276814053*^9}, {
  3.825940315611166*^9, 3.825940396359708*^9}, {3.825940443146345*^9, 
  3.825940471804384*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"289415b6-b7b4-4fbe-bdd7-0db9a81a0f34"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"myComplexPlot", "[", 
    RowBox[{"xi_", ",", "yj_", ",", "zij_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "ArrayPlot", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"gr", "=", 
      RowBox[{"ArrayPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Reverse", "@", 
         RowBox[{"Transpose", "@", "zij"}]}], ",", "\[IndentingNewLine]", 
        "opts", ",", "\[IndentingNewLine]", 
        RowBox[{"DataRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "xi"}], ",", 
             RowBox[{"Max", "@", "xi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "yj"}], ",", 
             RowBox[{"Max", "@", "yj"}]}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "xi"}], ",", 
             RowBox[{"Max", "@", "xi"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "yj"}], ",", 
             RowBox[{"Max", "@", "yj"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ColorFunction", "\[Rule]", "colorFromComplex"}], ",", 
        RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"autoTicksLabeled", "[", 
               RowBox[{"#1", ",", "#2", ",", "10", ",", ".02", ",", ".01"}], 
               "]"}], "&"}], ",", 
             RowBox[{
              RowBox[{"autoTicksUnlabeled", "[", 
               RowBox[{"#1", ",", "#2", ",", "10", ",", ".02", ",", ".01"}], 
               "]"}], "&"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"autoTicksLabeled", ",", "autoTicksUnlabeled"}], "}"}]}], 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"648", ",", "216"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8259402337827272`*^9, 3.825940276814053*^9}, {
  3.825940315611166*^9, 3.825940418920651*^9}, {3.825940453954771*^9, 
  3.825940474396839*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"db54e2c3-a96b-4d79-9847-7e97bd3011d4"]
}, Closed]]
}, Closed]],

Cell["", "Section",
 CellChangeTimes->{{3.404101295446374*^9, 3.404101314004104*^9}, {
   3.404101991764044*^9, 3.404101996231761*^9}, {3.408301486126796*^9, 
   3.408301494691002*^9}, {3.418162929356454*^9, 3.418162938268585*^9}, {
   3.424148026232675*^9, 3.42414802856127*^9}, {3.427680124230936*^9, 
   3.427680127650735*^9}, {3.427733270352779*^9, 3.427733285132729*^9}, {
   3.427817435114427*^9, 3.427817442647695*^9}, {3.4281517151433153`*^9, 
   3.428151739827176*^9}, {3.4281528620725927`*^9, 3.428152863965446*^9}, {
   3.430756036288519*^9, 3.430756040850232*^9}, {3.453570968038416*^9, 
   3.4535709726769047`*^9}, {3.453572228968511*^9, 3.4535722293902197`*^9}, {
   3.477525083450308*^9, 3.477525086787319*^9}, {3.4775255608783493`*^9, 
   3.477525569269033*^9}, {3.5102610835792217`*^9, 3.510261083816*^9}, {
   3.510265984316787*^9, 3.510265986555401*^9}, {3.650460941421151*^9, 
   3.650460941716652*^9}, {3.650474375943572*^9, 3.650474380764648*^9}, {
   3.6504810264139853`*^9, 3.650481028580564*^9}, {3.823175870065802*^9, 
   3.8231758911127863`*^9}, 
   3.8231770918592978`*^9},ExpressionUUID->"c935ceff-289c-4c04-84cf-\
7c4d096e9f3b"]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1440, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
TaggingRules->{
 "SearchTextTranslated" -> "", "SearchText" -> "", "TryRealOnly" -> False},
Magnification:>1.2 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], CellMargins -> {{67, 10}, {7, 7}}, FontFamily -> 
    "Times", FontSize -> 16, FontWeight -> "Plain", FontSlant -> "Plain"], 
   Cell[
    StyleData["Title"], FontFamily -> "Times", FontSize -> 24, FontWeight -> 
    "Bold", FontSlant -> "Plain"], 
   Cell[
    StyleData["Subtitle"], FontFamily -> "Times", FontSize -> 18, FontWeight -> 
    "Bold", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["Subsubtitle"], FontFamily -> "Times", FontSize -> 16, 
    FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["Section"], FontFamily -> "Times", FontSize -> 20, FontWeight -> 
    "Bold", FontSlant -> "Plain"], 
   Cell[
    StyleData["Subsection"], CellMargins -> {{27, 3.}, {8., 20.}}, FontFamily -> 
    "Times", FontSize -> 16, FontWeight -> "Bold", FontSlant -> "Plain"], 
   Cell[
    StyleData["Subsubsection"], CellMargins -> {{27, Inherited}, {8, 12}}, 
    FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", FontSlant -> 
    "Plain"], 
   Cell[
    StyleData["Input"], CellMargins -> {{90, 10}, {5, 10}}, 
    CellBracketOptions -> {"Margins" -> {0, 2}}, ShowCellLabel -> True, 
    FontFamily -> "Times", FontSize -> 11, FontWeight -> "Bold", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
   Cell[
    StyleData["Output"], CellMargins -> {{90, 10}, {5, 10}}, ShowCellLabel -> 
    True, CellLabelPositioning -> Left, FontFamily -> "Times", FontSize -> 11,
     FontWeight -> "Regular", FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}]}, Visible -> 
  False, FrontEndVersion -> "13.1 for Linux x86 (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"6fa4a9b1-26cc-4ac1-a37e-71934797fa57"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 5879, 80, 82, "Title",ExpressionUUID->"9bb3be5a-4490-4422-9cb5-e98228add7e5"],
Cell[6304, 97, 332, 5, 52, "Subtitle",ExpressionUUID->"04ac8688-6c07-4b3a-9d5e-3372511d02a3"],
Cell[6639, 104, 503, 9, 40, "Text",ExpressionUUID->"05a91cfd-bd0d-43be-be51-4516309bff6a"],
Cell[CellGroupData[{
Cell[7167, 117, 2302, 37, 66, "Section",ExpressionUUID->"deef6a07-400a-4ea9-be99-de359dd48bc5"],
Cell[CellGroupData[{
Cell[9494, 158, 3040, 50, 57, "Subsection",ExpressionUUID->"87a1ceb1-81fa-4191-b793-a14c47aa3d3c"],
Cell[12537, 210, 2356, 59, 454, "Text",ExpressionUUID->"5b82892e-d961-4499-844b-2f21eb7dda03"],
Cell[14896, 271, 3118, 96, 427, "Text",ExpressionUUID->"50e103b4-5f99-4e99-a980-db36f85b8d65"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18063, 373, 2242, 37, 49, "Section",ExpressionUUID->"19696cae-b8ec-4ed2-9d3b-2b49af6076ec"],
Cell[CellGroupData[{
Cell[20330, 414, 3095, 50, 57, "Subsection",ExpressionUUID->"abd4f383-c891-4a45-b776-71208b4db446"],
Cell[23428, 466, 415, 8, 40, "Text",ExpressionUUID->"06d1f62b-a82d-492d-837e-5bf0333e63bc"],
Cell[23846, 476, 11768, 199, 155, "Text",ExpressionUUID->"c1114709-e6e1-47ec-a3ad-ca56c2c3f10b"],
Cell[CellGroupData[{
Cell[35639, 679, 1104, 30, 52, "Input",ExpressionUUID->"bb482e20-cc1c-4399-a792-6ff2a62c9b19"],
Cell[36746, 711, 31788, 604, 282, "Output",ExpressionUUID->"c1950afc-e6d7-447a-bc61-b808b04cb41d"]
}, Open  ]],
Cell[68549, 1318, 499, 10, 68, "Text",ExpressionUUID->"fe52da1c-d02b-4d04-9f2b-84b81e0807db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69085, 1333, 3138, 51, 57, "Subsection",ExpressionUUID->"ff83cfb2-5ef3-44be-89b2-d6c8a3b32c3d"],
Cell[72226, 1386, 589, 10, 68, "Text",ExpressionUUID->"32d2bc59-d936-4c60-aa08-5a1ca53d9da7"],
Cell[72818, 1398, 16548, 277, 155, "Text",ExpressionUUID->"47d40255-d0b8-4f57-be6e-7f136418d300"],
Cell[89369, 1677, 1112, 36, 103, "Text",ExpressionUUID->"41c3fb5d-2c80-4185-84e7-009538a39535"],
Cell[CellGroupData[{
Cell[90506, 1717, 2741, 77, 172, "Input",ExpressionUUID->"d6159d75-16f8-43a6-befa-57968cd283a9"],
Cell[93250, 1796, 26845, 521, 307, "Output",ExpressionUUID->"10f29f56-6ca2-4945-93dc-c542b8f597fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120144, 2323, 3138, 51, 57, "Subsection",ExpressionUUID->"5400a2d5-3824-48e1-9718-e467883d1fc0"],
Cell[123285, 2376, 1663, 55, 43, "Text",ExpressionUUID->"78de92f0-02a5-4226-9729-28649e409128"],
Cell[124951, 2433, 28336, 471, 166, "Text",ExpressionUUID->"3078cdb1-53cc-4e48-b8af-25f44a8b5f4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153324, 2909, 3197, 52, 57, "Subsection",ExpressionUUID->"6a245c36-228f-46df-973e-efd122fbdbd4"],
Cell[156524, 2963, 1055, 33, 40, "Text",ExpressionUUID->"be2fbbb9-21a6-4eb7-95f0-ce375db08d61"],
Cell[157582, 2998, 32190, 533, 155, "Text",ExpressionUUID->"40cd8c0f-6ed5-4ddf-b433-0be3a20b8363"],
Cell[189775, 3533, 214, 5, 40, "Text",ExpressionUUID->"31f244ec-f3a0-414f-9a15-33808d6c6a98"],
Cell[189992, 3540, 2201, 58, 158, "Text",ExpressionUUID->"491dfbd9-f275-4baa-9ffb-54ec0f5953fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192230, 3603, 3243, 52, 57, "Subsection",ExpressionUUID->"e4f9804e-59b4-4bb4-b75c-41974b89990f"],
Cell[195476, 3657, 196, 3, 54, "Input",ExpressionUUID->"1a09ceb0-07ba-40b9-87d2-d2aa6363bb7c"]
}, Closed]],
Cell[CellGroupData[{
Cell[195709, 3665, 3291, 53, 38, "Subsection",ExpressionUUID->"52c07202-5f98-410b-9962-0904f595cf83"],
Cell[199003, 3720, 273, 6, 40, "Text",ExpressionUUID->"dffedf9a-d6cd-4ce9-9893-9a7adf8c5e24"],
Cell[199279, 3728, 48172, 795, 236, "Text",ExpressionUUID->"5d17ed0e-23ee-4f74-bfa3-542c23aff77f"],
Cell[247454, 4525, 304, 6, 40, "Text",ExpressionUUID->"61ce617e-b9d9-4ff9-8d24-aecf60cfb29c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[247807, 4537, 2359, 38, 49, "Section",ExpressionUUID->"6e8bc7ff-95d7-4053-aaa9-f3520f71cc5c"],
Cell[250169, 4577, 2226, 73, 216, "Text",ExpressionUUID->"842431dd-7b98-499b-bdb9-e571a74eaafb"],
Cell[252398, 4652, 52153, 861, 284, "Text",ExpressionUUID->"f359316c-7fc4-4e7a-aea9-785a25ff01fe"],
Cell[304554, 5515, 250, 6, 40, "Text",ExpressionUUID->"54c4be78-7601-4559-9331-d5701f81cca8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304841, 5526, 2394, 38, 66, "Section",ExpressionUUID->"eddacdf0-9c89-4d85-bd07-b1c5684bebd3"],
Cell[307238, 5566, 225, 5, 40, "Text",ExpressionUUID->"271bdbce-c212-4793-b07f-422a363fc79d"],
Cell[307466, 5573, 4696, 150, 373, "Text",ExpressionUUID->"11ed0ffa-a738-43f7-912b-391c8ad1c916"],
Cell[312165, 5725, 109777, 1806, 288, "Text",ExpressionUUID->"9aab4917-cf82-401b-bcdf-cff50a941f03"],
Cell[421945, 7533, 1462, 44, 96, "Text",ExpressionUUID->"6d68a275-e98d-4909-9859-e0c41c9ab198"],
Cell[423410, 7579, 157, 3, 40, "Text",ExpressionUUID->"0f75720a-e234-4777-bb50-b5cdfb7363c5"],
Cell[423570, 7584, 2699, 37, 64, "Text",ExpressionUUID->"3f6bbd11-afd7-443f-9625-f734456d4e3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426306, 7626, 2467, 39, 66, "Section",ExpressionUUID->"dff90cd4-7c08-498c-a2d3-932b6507b8a6"],
Cell[428776, 7667, 990, 27, 68, "Text",ExpressionUUID->"b749d63a-665e-4c2e-a4fc-a87feb74f1e9"],
Cell[429769, 7696, 78850, 1299, 281, "Text",ExpressionUUID->"44733f2c-e621-4dc0-9144-451360c1d045"],
Cell[508622, 8997, 1548, 46, 98, "Text",ExpressionUUID->"0e2f21ec-8546-4f40-ab15-4a1dadd80909"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510207, 9048, 2250, 37, 66, "Section",ExpressionUUID->"f84ba324-73dd-42fb-867f-5243a953f553"],
Cell[512460, 9087, 503, 9, 68, "Text",ExpressionUUID->"f3b33f12-708e-495c-a998-55259796dcd8"],
Cell[CellGroupData[{
Cell[512988, 9100, 3342, 54, 57, "Subsection",ExpressionUUID->"8b892009-d1ec-4042-a21e-635433fcf65c"],
Cell[516333, 9156, 2662, 80, 236, "Text",ExpressionUUID->"811fba6f-5938-4277-aab2-2437dc4907bb",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[519032, 9241, 3343, 54, 57, "Subsection",ExpressionUUID->"f70e7818-3d05-4b4a-a811-8c53c10e804b"],
Cell[522378, 9297, 3784, 119, 320, "Text",ExpressionUUID->"5ae72601-2a85-4631-ac9a-79ab603812c6"],
Cell[526165, 9418, 1913, 59, 85, "Text",ExpressionUUID->"5ba4f09d-dce4-4fa1-8816-257da2cda68e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528115, 9482, 3407, 54, 57, "Subsection",ExpressionUUID->"2cbae37c-4a7a-4c43-bb84-1bbe6a6c1eed"],
Cell[531525, 9538, 2305, 69, 133, "Text",ExpressionUUID->"9257cea5-cc2e-489d-b51f-1c8abc8cf4ea"],
Cell[533833, 9609, 147372, 2422, 313, "Text",ExpressionUUID->"ad96084a-5f7c-4bf9-9c50-cf8dd197f556"],
Cell[681208, 12033, 5142, 174, 276, "Text",ExpressionUUID->"0d8e13e6-d4df-4098-9ab7-4269eab8fef0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686387, 12212, 3426, 55, 57, "Subsection",ExpressionUUID->"0b276dc4-fcc6-46a3-99d8-98be4304164b"],
Cell[689816, 12269, 3670, 126, 267, "Text",ExpressionUUID->"b8b45f30-152f-431a-ae7b-03d568c21fae"],
Cell[693489, 12397, 147316, 2422, 313, "Text",ExpressionUUID->"2ab2ccf6-941d-4d9f-b7e8-19fecbb69be6"],
Cell[840808, 14821, 21090, 733, 626, "Text",ExpressionUUID->"d36c1962-c6d2-4dfb-a69f-b3497d3c488c"],
Cell[861901, 15556, 1404, 46, 106, "Text",ExpressionUUID->"924eb50a-0377-4d29-85d9-cc94693fde8c"],
Cell[863308, 15604, 215, 5, 40, "Text",ExpressionUUID->"f5dbd26f-c15f-4181-865a-de4a58442500"],
Cell[863526, 15611, 382, 7, 40, "Text",ExpressionUUID->"8b73b4c7-0b1d-4724-8b45-436e47ba944c"],
Cell[863911, 15620, 787, 13, 411, "Text",ExpressionUUID->"0895abd0-6ae3-4749-944d-d1cc6bef8aae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[864735, 15638, 3475, 56, 57, "Subsection",ExpressionUUID->"4763f704-a66d-4b23-82d6-844e159c36fd"],
Cell[868213, 15696, 9717, 330, 320, "Text",ExpressionUUID->"fb4499f2-791b-4264-9dbb-d209f3069cec"],
Cell[877933, 16028, 263, 4, 40, "Text",ExpressionUUID->"ebf148e0-057f-4dbf-979a-da82301435c4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[878245, 16038, 2287, 37, 66, "Section",ExpressionUUID->"47f83dcb-7ea2-4aac-b888-9b50dc271fe0"],
Cell[880535, 16077, 192, 3, 40, "Text",ExpressionUUID->"ba2c7d56-5c71-4ed1-ac2e-af6bc7cd12ce"],
Cell[880730, 16082, 1312, 43, 162, "Text",ExpressionUUID->"874f9631-352e-40dd-be85-8921377a7483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882079, 16130, 2264, 37, 66, "Section",ExpressionUUID->"ad4ffe0b-5c03-4322-8db3-564d33382f06"],
Cell[884346, 16169, 3921, 67, 118, "Text",ExpressionUUID->"ec728b00-4354-4179-a284-5a93184a18b7"],
Cell[CellGroupData[{
Cell[888292, 16240, 2125, 37, 57, "Subsection",ExpressionUUID->"70367c77-053e-44d1-aba6-ea54b4afe76d"],
Cell[890420, 16279, 2424, 40, 481, "Text",ExpressionUUID->"118644d7-9c50-4143-b882-1f5d67a4749c"],
Cell[892847, 16321, 4466, 138, 252, "Text",ExpressionUUID->"34e0b062-e055-4fd9-a808-85049b81739f"],
Cell[897316, 16461, 4475, 98, 78, "Text",ExpressionUUID->"7c23eba3-d656-4f9e-a53b-b983239c74b8"],
Cell[901794, 16561, 254, 6, 40, "Text",ExpressionUUID->"8efd4802-97d8-4daa-a31d-57ed9f5489df"]
}, Closed]],
Cell[CellGroupData[{
Cell[902085, 16572, 2254, 38, 37, "Subsection",ExpressionUUID->"57eab9da-f42c-4bc7-b547-9c6a99ee086a"],
Cell[CellGroupData[{
Cell[904364, 16614, 369, 9, 46, "Subsubsection",ExpressionUUID->"b0f42efb-bd1b-46da-a1f7-7d41d4079001"],
Cell[904736, 16625, 1218, 41, 72, "Text",ExpressionUUID->"033b3168-00e8-4300-91d5-6b92be1d3469"],
Cell[CellGroupData[{
Cell[905979, 16670, 2799, 66, 103, "Input",ExpressionUUID->"aeb18008-d481-4472-b1cf-87fecae0363a"],
Cell[908781, 16738, 90842, 1636, 298, "Output",ExpressionUUID->"21910ffc-7119-4ce1-b49a-082dd81a455b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[999672, 18380, 466, 13, 43, "Subsubsection",ExpressionUUID->"9ca97b9d-ca6d-4618-b56c-2d902ea24d48"],
Cell[1000141, 18395, 1956, 65, 198, "Text",ExpressionUUID->"a164135d-5c7e-44dd-ab47-7a71bd2dcc05"],
Cell[1002100, 18462, 1625, 53, 177, "Text",ExpressionUUID->"975a1bbd-83f8-4864-a6cb-56185e5e802a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003762, 18520, 541, 16, 54, "Subsubsection",ExpressionUUID->"d641f9e6-6640-4cd8-8e34-2fc5483d3d8b"],
Cell[1004306, 18538, 3438, 106, 204, "Text",ExpressionUUID->"98ed9b66-6cdf-405b-8446-ae28afcdbd71"],
Cell[CellGroupData[{
Cell[1007769, 18648, 931, 31, 102, "Input",ExpressionUUID->"03ab884a-28c2-49e3-a1da-8b106519588d"],
Cell[1008703, 18681, 404, 11, 58, "Output",ExpressionUUID->"a27d1494-fd01-4668-bc0d-fb3637fe7ace"],
Cell[1009110, 18694, 404, 11, 58, "Output",ExpressionUUID->"99e4a8e0-d034-42f0-ace0-9c849b36a9d8"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1009575, 18712, 2172, 38, 37, "Subsection",ExpressionUUID->"2ed76352-6f57-4d27-824e-3a23ba7f00e9"],
Cell[1011750, 18752, 3330, 103, 253, "Text",ExpressionUUID->"74085cc9-a97d-4c58-812c-d349967d2bc1"],
Cell[1015083, 18857, 8654, 268, 403, "Text",ExpressionUUID->"e8cdd4fc-fe3c-4426-ab6c-bcefa534202e"],
Cell[1023740, 19127, 3119, 95, 172, "Text",ExpressionUUID->"2240cb1d-dd3a-4244-b008-edd48089346e"],
Cell[1026862, 19224, 2136, 69, 186, "Text",ExpressionUUID->"711c2bd9-a067-4708-be9b-cf5ad63a521d"],
Cell[1029001, 19295, 397, 14, 40, "Text",ExpressionUUID->"709815d6-47d0-42da-88c5-f70ccabeb809"],
Cell[1029401, 19311, 314, 6, 40, "Text",ExpressionUUID->"9d5d88c4-f798-4d58-82ad-3eac30b761d6"],
Cell[1029718, 19319, 5238, 114, 276, "Text",ExpressionUUID->"1458d132-9140-4ffe-976f-d7df9efd2035"]
}, Closed]],
Cell[CellGroupData[{
Cell[1034993, 19438, 2222, 38, 37, "Subsection",ExpressionUUID->"548d17b4-a6b7-41a5-9aa1-45741f46f137"],
Cell[1037218, 19478, 2164, 54, 183, "Text",ExpressionUUID->"43cf9642-cb1c-4945-a041-d7f187a4fcb4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1039419, 19537, 2414, 41, 37, "Subsection",ExpressionUUID->"512bded2-867e-43f0-8e98-68f998df2e64"],
Cell[1041836, 19580, 1084, 29, 67, "Text",ExpressionUUID->"1bd8cfe7-874c-42ee-8330-8118eef1e537"],
Cell[1042923, 19611, 2023, 59, 220, "Input",ExpressionUUID->"5f655070-1798-4895-a936-80bf3794677f"],
Cell[1044949, 19672, 4353, 118, 252, "Input",ExpressionUUID->"2109060c-ade7-4b74-8386-36750b5c464d"],
Cell[CellGroupData[{
Cell[1049327, 19794, 5870, 137, 441, "Input",ExpressionUUID->"13aa8c8b-4539-4c4c-9d1e-86772d611001"],
Cell[CellGroupData[{
Cell[1055222, 19935, 1200, 21, 30, "Print",ExpressionUUID->"6ad5342e-28ff-4de9-a5ab-10bf059949f0"],
Cell[1056425, 19958, 1203, 21, 30, "Print",ExpressionUUID->"7b08cdc0-7fbe-4ba3-9a72-e40fb8e90876"],
Cell[1057631, 19981, 1204, 21, 30, "Print",ExpressionUUID->"a28e12d7-fca5-4a13-8381-91e16ef21f3d"],
Cell[1058838, 20004, 1206, 21, 30, "Print",ExpressionUUID->"9f53ac7e-5d1e-4252-bb16-3c7f02b73802"],
Cell[1060047, 20027, 1205, 21, 30, "Print",ExpressionUUID->"709ae6bd-1509-40cd-b4da-7a57eb88db31"],
Cell[1061255, 20050, 1208, 21, 30, "Print",ExpressionUUID->"dda1ab81-4854-40e9-b3cf-a85772af7445"],
Cell[1062466, 20073, 1209, 21, 30, "Print",ExpressionUUID->"9c968a2e-c4c4-4966-8cba-1e65518be223"],
Cell[1063678, 20096, 1209, 21, 30, "Print",ExpressionUUID->"197b31e9-4df0-42d3-a98c-46cede6c1e4b"],
Cell[1064890, 20119, 1208, 21, 30, "Print",ExpressionUUID->"70fcbbd8-1c92-4f4d-b5fa-16747f91c105"],
Cell[1066101, 20142, 1209, 21, 30, "Print",ExpressionUUID->"87441c15-9c7b-47bd-9446-887aa818cb8f"],
Cell[1067313, 20165, 1211, 21, 30, "Print",ExpressionUUID->"943671d4-7139-4627-9117-a89ad935b5f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068573, 20192, 3305, 84, 234, "Input",ExpressionUUID->"c4d7518d-9f4e-4159-9801-274b958a11b4"],
Cell[1071881, 20278, 2488, 67, 141, "Output",ExpressionUUID->"3f7d6eb5-bd77-4835-9c16-45f4619a14c7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1074418, 20351, 2395, 40, 37, "Subsection",ExpressionUUID->"c98963d0-d93f-4822-a4c7-13f5cc5222f2"],
Cell[CellGroupData[{
Cell[1076838, 20395, 8796, 229, 975, "Input",ExpressionUUID->"f4610c5e-df06-4ad6-991f-aaa640a822ba"],
Cell[1085637, 20626, 24303, 471, 406, "Output",ExpressionUUID->"c06be691-b57e-4ea3-bc83-476d37051756"]
}, Open  ]],
Cell[1109955, 21100, 2975, 47, 63, "Text",ExpressionUUID->"530c451c-8686-4bdc-be2d-d1cb11dc19ff"]
}, Closed]],
Cell[CellGroupData[{
Cell[1112967, 21152, 2496, 41, 37, "Subsection",ExpressionUUID->"8d1d3931-3507-4b90-84c0-6d239d707fcd"],
Cell[1115466, 21195, 167, 3, 40, "Text",ExpressionUUID->"605965d3-03c3-4e25-ba6f-0e0702b22f36"],
Cell[1115636, 21200, 5454, 135, 427, "Input",ExpressionUUID->"e1d2e321-3dc9-47ce-bd72-e7f19bbb6bfc"],
Cell[1121093, 21337, 19909, 473, 1386, "Input",ExpressionUUID->"57f6a6eb-191f-4b36-8745-46560bb8fdbc"],
Cell[1141005, 21812, 6276, 166, 529, "Input",ExpressionUUID->"8187281c-9142-420b-9683-88bb354f7d00"],
Cell[CellGroupData[{
Cell[1147306, 21982, 4526, 94, 399, "Input",ExpressionUUID->"c285fc1f-fbcc-4543-a560-dfae052a7f13"],
Cell[1151835, 22078, 2946, 56, 78, "Print",ExpressionUUID->"bee66143-8465-48a2-9240-8992a6808285"]
}, Open  ]],
Cell[1154796, 22137, 7058, 163, 276, "Text",ExpressionUUID->"feee7ea6-8116-4bcb-b97c-29edf920fc4c"],
Cell[1161857, 22302, 788, 18, 96, "Text",ExpressionUUID->"499ab812-905c-4aa1-8f80-e127554e7fac"]
}, Closed]],
Cell[CellGroupData[{
Cell[1162682, 22325, 2552, 42, 37, "Subsection",ExpressionUUID->"8c7eb160-5316-45ac-befc-dc5bafe5037d"],
Cell[1165237, 22369, 167, 3, 40, "Text",ExpressionUUID->"05c6a54c-d808-4ddb-95f4-1145706d72a1"],
Cell[1165407, 22374, 5454, 135, 427, "Input",ExpressionUUID->"e2750e4d-2b01-45e0-b3c0-919fb22b50c5"],
Cell[1170864, 22511, 19909, 473, 1386, "Input",ExpressionUUID->"55148c29-b504-4db3-b3bb-89dd2035844e"],
Cell[1190776, 22986, 6571, 173, 861, "Input",ExpressionUUID->"622149b7-1e3c-479c-83f4-87b1e5e51d44"],
Cell[CellGroupData[{
Cell[1197372, 23163, 4526, 94, 546, "Input",ExpressionUUID->"371d63f3-2344-4613-abf8-6326f4d5d33a"],
Cell[1201901, 23259, 3066, 57, 112, "Print",ExpressionUUID->"910b5bdd-4452-407b-b6be-567bef91f7e5"]
}, Open  ]],
Cell[1204982, 23319, 7058, 163, 391, "Text",ExpressionUUID->"8c0539a3-a761-4ce8-ae9e-0fdc388ccb51"],
Cell[1212043, 23484, 564, 10, 55, "Text",ExpressionUUID->"6d1e02b8-4905-4fcb-b7b4-eb4f534dcf66"]
}, Closed]]
}, Closed]],
Cell[1212634, 23498, 2227, 36, 48, "Section",ExpressionUUID->"b03b8aa3-fb95-4f4b-a7af-071c524bdd7b"],
Cell[CellGroupData[{
Cell[1214886, 23538, 321, 6, 48, "Section",ExpressionUUID->"752c6903-eea8-411a-a465-4ed16f9a74a1",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1215232, 23548, 2558, 41, 52, "Subsection",ExpressionUUID->"e31e17cd-506a-465e-ac06-d98fad9c8fc0"],
Cell[1217793, 23591, 4968, 137, 573, "Input",ExpressionUUID->"1722bef9-8f31-4d93-83ef-4bac451389db"],
Cell[1222764, 23730, 6134, 139, 486, "Input",ExpressionUUID->"83e0adc0-dab6-449a-b398-11f8b27d8aee",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1228935, 23874, 2600, 41, 31, "Subsection",ExpressionUUID->"94776496-1c43-4ce0-9532-c968813fc67e"],
Cell[1231538, 23917, 10832, 275, 490, "Input",ExpressionUUID->"fa90264f-7887-48b3-8acc-325e845d06aa"]
}, Closed]],
Cell[CellGroupData[{
Cell[1242407, 24197, 2571, 42, 31, "Subsection",ExpressionUUID->"b16e45aa-64c1-4a22-af24-796831e26e62",
 InitializationGroup->True],
Cell[1244981, 24241, 3592, 98, 252, "Input",ExpressionUUID->"63e4e569-1f14-4026-a278-d8bea10a4c1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1248610, 24344, 2594, 42, 31, "Subsection",ExpressionUUID->"25e58e8a-7808-4268-adef-fd662f0c022b",
 InitializationGroup->True],
Cell[1251207, 24388, 963, 25, 49, "Text",ExpressionUUID->"1ec1cbf1-0c5d-4050-9cdf-ff1d42db898f"],
Cell[1252173, 24415, 35909, 917, 1698, "Input",ExpressionUUID->"34f3c09b-20b0-4cfe-8d03-3b6454c30ee9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1288119, 25337, 2635, 43, 31, "Subsection",ExpressionUUID->"580caf23-f01d-44aa-84ab-2e717d3669fe",
 InitializationGroup->True],
Cell[1290757, 25382, 1630, 49, 72, "Input",ExpressionUUID->"49a00ca9-06db-499c-89a8-65d588c1413d"],
Cell[1292390, 25433, 7297, 168, 201, "Input",ExpressionUUID->"ed7ce02b-9d26-4377-afc2-8d93a54a7e32"]
}, Closed]],
Cell[CellGroupData[{
Cell[1299724, 25606, 2621, 43, 31, "Subsection",ExpressionUUID->"c33bc14e-0574-4366-9a23-c700391f4cee",
 InitializationGroup->True],
Cell[1302348, 25651, 1594, 39, 120, "Input",ExpressionUUID->"3c09f49f-73da-498d-950f-8604c03d8662"]
}, Closed]],
Cell[CellGroupData[{
Cell[1303979, 25695, 3248, 50, 31, "Subsection",ExpressionUUID->"f5242e2a-e643-4f77-a629-8f43e27fbca2"],
Cell[1307230, 25747, 2834, 69, 168, "Input",ExpressionUUID->"289415b6-b7b4-4fbe-bdd7-0db9a81a0f34"],
Cell[1310067, 25818, 2837, 69, 168, "Input",ExpressionUUID->"db54e2c3-a96b-4d79-9847-7e97bd3011d4"]
}, Closed]]
}, Closed]],
Cell[1312931, 25891, 1158, 17, 48, "Section",ExpressionUUID->"c935ceff-289c-4c04-84cf-7c4d096e9f3b"]
}, Open  ]]
}
]
*)

